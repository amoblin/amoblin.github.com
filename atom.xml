<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title></title>
 <link href="/atom.xml" rel="self"/>
 <link href=""/>
 <updated>2012-12-27T00:04:09+08:00</updated>
 <id></id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>使用MarkBook发布博客到Jekyll</title>
   <link href="/2012/12/26/markbook-to-jekyll.html"/>
   <updated>2012-12-26T00:00:00+08:00</updated>
   <id>h/2012/12/26/markbook-to-jekyll</id>
   <content type="html">&lt;!-- Author: your_name --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;在新版MarkBook( v1.1(77) 中，增加了将rst文件发布到Jekyll博客的功能。具体使用步骤如下。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;新建笔记&lt;/h2&gt;
&lt;p&gt;点击左下角 &amp;quot; + &amp;quot; 来新建笔记，输入笔记名称，选择笔记类型为RST。注意输入的笔记名称最好是英文，因为jekyll中文件的路径都是英文的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;编辑笔记&lt;/h2&gt;
&lt;p&gt;在中栏找到新建的笔记，双击打开进行编辑。对RST类型而言，默认生成的模板内容举例如下：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
  1 =================
  2 markbook-to-jekyl
  3 =================
  4
  5 .. Author: your_name
  6 .. title:: 可以是中文名
  7 .. |date| date:: 2012-12-26
  8 .. publish:: NO

其中第2行是新建笔记时输入的名字，第7行的日期是当前日期，其他内容是固定的。可以修改第二行和地6行的名称，这里用来显示标题。比如我修改完后是这样的：
&lt;/pre&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
  1 ================================
  2 使用MarkBook发布rst博客到Jekyll
  3 ================================
  4
  5 .. Author: your_name
  6 .. title:: 使用MarkBook发布博客到Jekyll
  7 .. |date| date:: 2012-12-26
  8 .. publish:: NO

然后就可以继续添加内容了。
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;发布笔记&lt;/h2&gt;
&lt;p&gt;最后需要发布的时候，修改第8行的publish值为YES，这样就会在~/.MarkBook/source/blogs/my_blog下生成文件：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ls ~/.MarkBook/source/blogs/my_blog
&lt;span class=&quot;generic output&quot;&gt;2012-12-26-markbook-to-jekyll.rst&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;你说我自己的jekyll目录不在这个地方啊，那好办，建一个软链接即可：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; rm -rf ~/.MarkBook/source/blogs/my_blog
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ln -sf /path/to/jekyll/_posts ~/.MarkBook/source/blogs/my_blog
&lt;/pre&gt;
&lt;p&gt;没错，本篇博客就是这么发布的！&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>MarkBook发布</title>
   <link href="/2012/12/25/MarkBook-release.html"/>
   <updated>2012-12-25T00:00:00+08:00</updated>
   <id>h/2012/12/25/MarkBook-release</id>
   <content type="html">&lt;!-- Author: your_name --&gt;
&lt;!-- publish: YES --&gt;
&lt;!-- MarkBook今天发布了，但现在还是发现了一些问题。 --&gt;
&lt;!-- 新建笔记后中栏并不显示，你需要点其他目录再点回来才可以看到，当然你也可以不点，在中栏的最后一个笔记的下一个那里双击，也可以打开它。 --&gt;
&lt;!-- 它在那里了，我们只是看不到。 --&gt;
&lt;p&gt;(本文昨天晚上写好的，今天晚上才发布，在此期间，实现了 &lt;strong&gt;从MarkBook直接发布博客到jekyll&lt;/strong&gt; 的功能。这个稍后会专门讲解)&lt;/p&gt;
&lt;p&gt;MarkBook正式发布了，从8月23开始第一个提交到现在，共提交76次，终于拿出了一个基本可用版本。&lt;/p&gt;
&lt;p&gt;入门手册，可以参见 &lt;a class=&quot;reference external&quot; href=&quot;http://amoblin.github.com/2012/12/25/MarkBook-User-Guide.html&quot;&gt;MarkBook用户手册&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;MarkBook的来由&lt;/h2&gt;
&lt;p&gt;用了半年多的Evernote，但我是从Linux转Mac的Vim控，总时不时像按ESC键来切换模式，总感觉光标移动得太慢，跟不上节奏。
随着Evernote上笔记的增多，启动速度越来越慢，后来我都不忍心打开Evernote了。&lt;/p&gt;
&lt;p&gt;然后就是用vim写rst文档，写脚本生成html页面，make html，make preview，搞定，然后研究如何发布到wp。那时候发现了mac下面的一个万能命令：open。&lt;/p&gt;
&lt;p&gt;后来就发现了Mou，这个软件很不错，界面简洁，icon也很有mac版office的风格，一看就知道作者是前端高手。&lt;/p&gt;
&lt;p&gt;但我没怎么用Mou，首先我不写markdown，其次我不喜欢用Mou来编辑。&lt;/p&gt;
&lt;p&gt;看着Evernote和Mou，我想到了我想要的软件大概是什么样子了。&lt;/p&gt;
&lt;p&gt;Unix的KISS哲学，难道只能用在CLI工具上吗？为什么GUI软件不能互相调用呢？&lt;/p&gt;
&lt;p&gt;我要Evernote的UI，但我不负责编辑，因为Vim会做的更好；我不负责版本控制，冲突解决，云同步，因为Git会做的更好；我不负责带格式，因为有很多置标语言会做的更好。我只负责一件事，就是组织笔记，展示笔记，这方面，Sparrow，Reeder，Evernote，都做的很好。&lt;/p&gt;
&lt;p&gt;所以MarkBook诞生了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;MarkBook素描&lt;/h2&gt;
&lt;p&gt;它有类似Sparrow/Reeder/Evernote的三栏式布局，以最完美的姿态来做内容展示：左栏是笔记分类，中栏是笔记缩略图，右栏是笔记全视图。&lt;/p&gt;
&lt;p&gt;双击中栏，会调用编辑器来打开笔记进行编辑。当保存修改后，MarkBook会检测到文件的改动，立刻更新视图内容。&lt;/p&gt;
&lt;p&gt;甚至，你不用在UI上操作，直接在MarkBook笔记目录里进行CLI操作，MarkBook都会同步更新。&lt;/p&gt;
&lt;p&gt;你用它来记笔记，像现在在Evernote里做的一样，但你不用担心打开缓慢，也不用担心数据安全隐私问题，文件冲突问题。&lt;/p&gt;
&lt;p&gt;不仅可以用来记笔记，也可以发博客。&lt;/p&gt;
&lt;p&gt;现在越来越多人从wp转到了jekyll/Octopress，使用markdown的人也越来越多。通过MarkBook的导入功能，可以将已有博客文章导入到MarkBook中进行管理。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;未来展望&lt;/h2&gt;
&lt;p&gt;现在这个版本还是很基础的，只有基本功能，如笔记的增删改。还有很多有待完善。&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;查找&lt;/li&gt;
&lt;li&gt;Git UI&lt;/li&gt;
&lt;li&gt;笔记无缝发布到jekyll/Octoress&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>欢迎使用MarkBook</title>
   <link href="/2012/12/25/MarkBook-User-Guide.html"/>
   <updated>2012-12-25T00:00:00+08:00</updated>
   <id>h/2012/12/25/MarkBook-User-Guide</id>
   <content type="html">&lt;div class=&quot;contents topic&quot; id=&quot;id1&quot;&gt;
&lt;p class=&quot;topic-title first&quot;&gt;目录&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id2&quot; id=&quot;id10&quot;&gt;MarkBook是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id3&quot; id=&quot;id11&quot;&gt;使用MarkBook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id4&quot; id=&quot;id12&quot;&gt;新建笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id5&quot; id=&quot;id13&quot;&gt;编辑笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id6&quot; id=&quot;id14&quot;&gt;删除笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id7&quot; id=&quot;id15&quot;&gt;偏好设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#for-cli-user&quot; id=&quot;id16&quot;&gt;for CLI User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#jekyll-octopress&quot; id=&quot;id17&quot;&gt;导入jekyll/Octopress博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id8&quot; id=&quot;id18&quot;&gt;显示代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#todo&quot; id=&quot;id19&quot;&gt;TODO&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#git-ui&quot; id=&quot;id20&quot;&gt;Git UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id9&quot; id=&quot;id21&quot;&gt;发布到博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#markdown&quot; id=&quot;id22&quot;&gt;markdown版欢迎页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- author: amoblin &lt;amoblin@gmail.com&gt; --&gt;
&lt;!-- publish: YES --&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id10&quot;&gt;MarkBook是什么？&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;MarkBook是用来管理置标语言文件的，目前支持reStructuredText和Markdown文件，后续会加入Ascii，wiki等的支持。&lt;/p&gt;
&lt;p&gt;通过像类似Evernote的界面来管理，组织Markup文件，实时更新显示HTML输出页面。&lt;/p&gt;
&lt;p&gt;自动发布博客到Jekyll/Octopress站点。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id11&quot;&gt;使用MarkBook&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id12&quot;&gt;新建笔记&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;点窗口左下角”+“来新建一个笔记，新建时需要指定笔记格式，rst or md。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id13&quot;&gt;编辑笔记&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;双击中栏笔记缩略图，会启动关联的外部编辑器(参见 &lt;a class=&quot;reference internal&quot; href=&quot;#id7&quot;&gt;偏好设置&lt;/a&gt;)来编辑笔记。保存修改后，MarkBook会同步更新内容。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id14&quot;&gt;删除笔记&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;点击窗口左下角“-”来删除笔记。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id7&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id15&quot;&gt;偏好设置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;按[ &lt;strong&gt;Command + ,&lt;/strong&gt; ]打开偏好设置，选择喜欢的编辑器，即可。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;for-cli-user&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id16&quot;&gt;for CLI User&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MarkBook的主目录为~/.MarkBook，里面主要有如下内容：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; tree ~/.MarkBook
&lt;span class=&quot;generic output&quot;&gt;MarkBook
├── build
│&amp;nbsp;&amp;nbsp; └── MyNotes
│&amp;nbsp;&amp;nbsp;     └── Sample
│&amp;nbsp;&amp;nbsp;         ├── welcome.rst.html
│&amp;nbsp;&amp;nbsp;         └── welcome.rst.png
└── source
    └── MyNotes
        └── Sample
            └── welcome.rst

6 directories, 3 files&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;其中build用来存放编译生成的html文件，source存放源文件。&lt;/p&gt;
&lt;p&gt;source目录下有三层，第一层(MyNotes)是笔记本库，一般也是一个git库(MarkBook会忽略.git目录)。&lt;/p&gt;
&lt;p&gt;第二层(Sample)是笔记本，存放各种分类的笔记。&lt;/p&gt;
&lt;p&gt;第三层(welcome.rst)就是笔记，可以是.markdown或.md或.rst后缀。&lt;/p&gt;
&lt;p&gt;凡是符合上述要求的都会被MarkBook识别，后台更新文件后MarkBook界面会自动同步更新。&lt;/p&gt;
&lt;p&gt;下面是我的笔记，仅供参考：&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://markbook.googlecode.com/files/markbook.png&quot;&gt;&lt;img alt=&quot;https://markbook.googlecode.com/files/markbook.png&quot; src=&quot;https://markbook.googlecode.com/files/markbook.png&quot; style=&quot;width: 500px; height: 300px;&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;jekyll-octopress&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id17&quot;&gt;导入jekyll/Octopress博客&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;File -&amp;gt; Import Notes...，选择jekyll或Octopress博客的_posts目录，即可将该目录下的博客文章导入到MarkBook中。&lt;/p&gt;
&lt;p&gt;导入的操作是复制了一份，所以对导入的博客的修改不影响导入源。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id8&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id18&quot;&gt;显示代码&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面是c代码样例：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;comment preproc&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;keyword type&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;你好&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;a's address is: %p&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;%p: %s&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;todo&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id19&quot;&gt;TODO&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;git-ui&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id20&quot;&gt;Git UI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;像Xcode一样显示文件状态，同时添加git pull，git push按钮。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id21&quot;&gt;发布到博客&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果在rst文件内定义了如下内容：&lt;/p&gt;
&lt;pre class=&quot;code rst literal-block&quot;&gt;
&lt;span class=&quot;punctuation&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;name tag&quot;&gt;|date|&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;::&lt;/span&gt; 2012-08-31
&lt;span class=&quot;punctuation&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;::&lt;/span&gt; first-blog
&lt;span class=&quot;comment preproc&quot;&gt;.. publish: YES&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;就会在 ~/octopress/source/_posts/目录下创建 2012-08-31-first-blog.rst的博客文件，publish为NO时删除上述文件。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;markdown&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id22&quot;&gt;markdown版欢迎页&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;由于amoblin一直用rst，不熟悉markdown，所以本说明文档是rst格式的，希望有擅长markdown者写一篇markdown版的，不胜感激。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>周末天津游记</title>
   <link href="/2012/10/18/tianjin-2-days.html"/>
   <updated>2012-10-18T00:00:00+08:00</updated>
   <id>h/2012/10/18/tianjin-2-days</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;上周和乖乖去天津玩，周六上午10点火车，12点到，第二天晚上7点火车，9点抵京。&lt;/p&gt;
&lt;p&gt;多亏前两天买的三洋爱乐普充电棒，带的10节电池全用光了，这也保证了手机的不间断供电，使得使用runtastic全程记录旅游线路成为可能。&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://dl.dropbox.com/u/676608/static/0.下火车，投宿东铁旅馆.png&quot;&gt;&lt;img alt=&quot;../static/0.下火车，投宿东铁旅馆.png&quot; src=&quot;../static/0.下火车，投宿东铁旅馆.png&quot; style=&quot;width: 800px; height: 600px;&quot; /&gt;&lt;/a&gt;
&lt;p&gt;吃过午饭，旅馆休息了一会儿&lt;/p&gt;
&lt;p&gt;晚上，去找晚饭吃。&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://dl.dropbox.com/u/676608/static/1.晚上，晚饭.png&quot;&gt;&lt;img alt=&quot;https://dl.dropbox.com/u/676608/static/1.晚上，晚饭.png&quot; src=&quot;https://dl.dropbox.com/u/676608/static/1.晚上，晚饭.png&quot; style=&quot;width: 800px; height: 600px;&quot; /&gt;&lt;/a&gt;
&lt;p&gt;过了大沽桥，进步行街，好热闹，在辽宁小吃街转了2圈，买了一个鸡排，不好吃。&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://dl.dropbox.com/u/676608/static/2.劝业街，辽宁小吃街.png&quot;&gt;&lt;img alt=&quot;https://dl.dropbox.com/u/676608/static/2.劝业街，辽宁小吃街.png&quot; src=&quot;https://dl.dropbox.com/u/676608/static/2.劝业街，辽宁小吃街.png&quot; style=&quot;width: 800px; height: 600px;&quot; /&gt;&lt;/a&gt;
&lt;p&gt;早上收拾行李，离开旅馆，准备去塘沽。在经过世纪钟时好好研究了一番。&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://dl.dropbox.com/u/676608/static/3.周日上午，世纪钟，解放桥.png&quot;&gt;&lt;img alt=&quot;https://dl.dropbox.com/u/676608/static/3.周日上午，世纪钟，解放桥.png&quot; src=&quot;https://dl.dropbox.com/u/676608/static/3.周日上午，世纪钟，解放桥.png&quot; style=&quot;width: 800px; height: 600px;&quot; /&gt;&lt;/a&gt;
&lt;p&gt;过了解放桥，一路向南，逛了当年的金融一条街。&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://dl.dropbox.com/u/676608/static/4.法国区，等公交.png&quot;&gt;&lt;img alt=&quot;https://dl.dropbox.com/u/676608/static/4.法国区，等公交.png&quot; src=&quot;https://dl.dropbox.com/u/676608/static/4.法国区，等公交.png&quot; style=&quot;width: 800px; height: 600px;&quot; /&gt;&lt;/a&gt;</content>
 </entry>
 
 <entry>
   <title>git笔记</title>
   <link href="/2012/08/27/git-note.html"/>
   <updated>2012-08-27T00:00:00+08:00</updated>
   <id>h/2012/08/27/git-note</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git symbolic-ref HEAD refs/heads/newbranch
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; rm .git/index
&lt;span class=&quot;generic output&quot;&gt;&amp;lt;do work&amp;gt;
&lt;/span&gt;&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git add your files
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git commit -m &lt;span class=&quot;literal string single&quot;&gt;'Initial commit'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://gitbook.liuhui998.com/5_1.html&quot;&gt;http://gitbook.liuhui998.com/5_1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改最后一次提交：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git commit --amend
&lt;/pre&gt;
&lt;p&gt;恢复到上一个提交：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git reset --hard
&lt;/pre&gt;
&lt;p&gt;提交上一次提交的反转：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git revert HEAD
&lt;/pre&gt;
&lt;p&gt;ssl认证出错：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;git config --global http.sslVerify false&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;git push origin branch_name     推送分支。默认只推送master分支。&lt;/p&gt;
&lt;p&gt;git fetch origin     会将远程分支也下载下来，但本地无分支&lt;/p&gt;
&lt;p&gt;git checkout -b branche_name origin/branch_name 将远程分支创建本地分支&lt;/p&gt;
&lt;p&gt;对于原始库，就是创建分支的那个库，想得到后来其他库对分支的修改，需要使用git pull： git pull origin branch_name&lt;/p&gt;
&lt;p&gt;转换hg到git
使用fast-export:&lt;/p&gt;
&lt;p&gt;1.创建目的git库：mkdir dest_git; cd dest_git; git init
2.转换： /path/to/hg-fast-export.sh -r /path/to/source_hg
3.git reset HEAD; git co .&lt;/p&gt;
&lt;p&gt;cd existing_git_repo
git remote add origin &lt;a class=&quot;reference external&quot; href=&quot;mailto:git&amp;#64;github.com&quot;&gt;git&amp;#64;github.com&lt;/a&gt;:amoblin/flyshion.git
git push -u origin master&lt;/p&gt;
&lt;p&gt;git ci --amend     修改最后一次提交&lt;/p&gt;
&lt;p&gt;合并多次提交：
git reset --soft [开始合并的提交]
git ci --amend&lt;/p&gt;
&lt;p&gt;git svn相关：&lt;/p&gt;
&lt;p&gt;git svn rebase   更新版本库&lt;/p&gt;
&lt;p&gt;讲Git工作流的，很好
&lt;a class=&quot;reference external&quot; href=&quot;http://heikezhi.com/2011/08/04/understanding-the-git-workflow/&quot;&gt;http://heikezhi.com/2011/08/04/understanding-the-git-workflow/&lt;/a&gt;
知道了squash合并&lt;/p&gt;
&lt;p&gt;git clone &lt;a class=&quot;reference external&quot; href=&quot;https://&quot;&gt;https://&lt;/a&gt; 出现认证错误解决方法：
$ git config --global http.sslVerify false&lt;/p&gt;
&lt;p&gt;退回上一个版本：
git reset HEAD^&lt;/p&gt;
&lt;p&gt;git rebase 变基，　一般用来把两个分支合并成一个分支，但不是merge，而是移植。&lt;/p&gt;
&lt;p&gt;防止远程合并，不顺序&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;打包&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git archive -o ../proj.zip HEAD
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git st
&lt;span class=&quot;generic output&quot;&gt;fatal: cannot exec 'git-st': Permission denied&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;查看问题的原因：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; strace -f -eexecve git st 2&amp;gt;&amp;amp;1 | grep EACC
&lt;span class=&quot;generic output&quot;&gt;[pid  3993] execve(&amp;quot;/home/sndba/scripts/bin/git-st&amp;quot;, [&amp;quot;git-st&amp;quot;], [/* 22 vars */]) = -1 EACCES (Permission denied)
[pid  3993] execve(&amp;quot;/home/sndba/scripts/bin/git-st&amp;quot;, [&amp;quot;git-st&amp;quot;], [/* 22 vars */]) = -1 EACCES (Permission denied)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;目录没有访问权限？&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; ll /home/sndba -d
&lt;span class=&quot;generic output&quot;&gt;drwx------ 5 my3000 3353 4096 Jul  6 15:34 /home/sndba&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;果然！&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>octopress站点集锦</title>
   <link href="/2012/08/27/beautiful-Octopress-sites.html"/>
   <updated>2012-08-27T00:00:00+08:00</updated>
   <id>h/2012/08/27/beautiful-Octopress-sites</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://mrzhang.me&quot;&gt;http://mrzhang.me&lt;/a&gt;  using Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://zonyitoo.github.com&quot;&gt;http://zonyitoo.github.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.leezhong.com&quot;&gt;http://blog.leezhong.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://tinyxd.me&quot;&gt;http://tinyxd.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.eddie.com.tw/2012/01/06/heroku-the-best-cloud-platform-on-ruby-language/&quot;&gt;http://blog.eddie.com.tw/2012/01/06/heroku-the-best-cloud-platform-on-ruby-language/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://octopress.org/docs/deploying/heroku/&quot;&gt;http://octopress.org/docs/deploying/heroku/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://opoo.org/o/octopress/&quot;&gt;http://opoo.org/o/octopress/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://cocoa.venj.me/&quot;&gt;http://cocoa.venj.me/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://chen.yanping.me/cn/blog/2012/03/13/pandoc/&quot;&gt;http://chen.yanping.me/cn/blog/2012/03/13/pandoc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://yihui.name/cn/&quot;&gt;http://yihui.name/cn/&lt;/a&gt; 谢益辉&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aurora1625.github.com/blog/2012/03/08/de-di-de/&quot;&gt;http://aurora1625.github.com/blog/2012/03/08/de-di-de/&lt;/a&gt; under Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://imwuyu.me/blog/octopress-deploying-to-github-pages.html/&quot;&gt;http://imwuyu.me/blog/octopress-deploying-to-github-pages.html/&lt;/a&gt; Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://newbsd.com/blog/2012/03/19/my-first-try-install-octopress-on-my-mac-os-x-lion-10-dot-7-3-and-some-thing-stuff/&quot;&gt;http://newbsd.com/blog/2012/03/19/my-first-try-install-octopress-on-my-mac-os-x-lion-10-dot-7-3-and-some-thing-stuff/&lt;/a&gt; Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.xiaoche.me/blog/2012/01/18/install-octopress/&quot;&gt;http://www.xiaoche.me/blog/2012/01/18/install-octopress/&lt;/a&gt; Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://fedcuit.github.com/blog/2012/08/02/config-octopress-on-mac/&quot;&gt;http://fedcuit.github.com/blog/2012/08/02/config-octopress-on-mac/&lt;/a&gt; Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://sfufoet.github.com/blog/2012/03/19/mac-an-zhuang-ruby-jian-ji/&quot;&gt;http://sfufoet.github.com/blog/2012/03/19/mac-an-zhuang-ruby-jian-ji/&lt;/a&gt; Mac&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.visioncan.com/2011/install-octopress/&quot;&gt;http://blog.visioncan.com/2011/install-octopress/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://gibuloto.com/blog/install-octopress-with-ruby-1-dot-9-3/&quot;&gt;http://gibuloto.com/blog/install-octopress-with-ruby-1-dot-9-3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://roshanca.com/2012/03/11/macosx-octopress/&quot;&gt;http://roshanca.com/2012/03/11/macosx-octopress/&lt;/a&gt; Hackinstonsh&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://tnki.info/blog/2012/06/30/set-up-octopress-on-mac-os-lion/&quot;&gt;http://tnki.info/blog/2012/06/30/set-up-octopress-on-mac-os-lion/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.neten.de/posts/2012/08/02/mac-octopress-ioerror-invalid-python-installation/&quot;&gt;http://blog.neten.de/posts/2012/08/02/mac-octopress-ioerror-invalid-python-installation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://evsseny.appspot.com/2012/03/30/Octopress-blog-install.html&quot;&gt;http://evsseny.appspot.com/2012/03/30/Octopress-blog-install.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii/&quot;&gt;http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://lucifr.com/about/&quot;&gt;http://lucifr.com/about/&lt;/a&gt; 主题很酷！&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://jokry.com/blog/2012/03/08/octopress/&quot;&gt;http://jokry.com/blog/2012/03/08/octopress/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.eddie.com.tw/2012/04/21/screencast-0-vim-and-my-working-environment/&quot;&gt;http://blog.eddie.com.tw/2012/04/21/screencast-0-vim-and-my-working-environment/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://itspg.github.com/blog/2012/04/06/more-octopress/&quot;&gt;http://itspg.github.com/blog/2012/04/06/more-octopress/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dayuan.im/blog/add-category-list-for-octopress.html/&quot;&gt;http://dayuan.im/blog/add-category-list-for-octopress.html/&lt;/a&gt; Mac ,beijing&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>在山狮系统上使用Absinthe</title>
   <link href="/2012/07/28/how-to-run-Absinthe-2.0-on-OS-X-10.8-Mountain-Lion.html"/>
   <updated>2012-07-28T00:00:00+08:00</updated>
   <id>h/2012/07/28/how-to-run-Absinthe-2.0-on-OS-X-10.8-Mountain-Lion</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;前天升级了Mountain Lion，昨天晚上取到了修好的手机，回来准备越狱，忽然发现Absinthe不能用了。&lt;/p&gt;
&lt;p&gt;具体症状为：点击Absinthe没反应，不能出来窗口。&lt;/p&gt;
&lt;p&gt;一番查找，找到解决方案如下：&lt;/p&gt;
&lt;p&gt;在Finder中找到Absinthe应用程序，右键选择“显示包内容”，然后依次进入文件夹：Contents/MacOS，选择文件Absinthe-10.6，右键打开方式选择“终端”，然后，就没有然后了。&lt;/p&gt;
&lt;p&gt;熟悉的窗口又出现了，接下来，你懂的。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.idownloadblog.com/2012/05/25/absinthe-2-0-mountain-lion/&quot;&gt;http://www.idownloadblog.com/2012/05/25/absinthe-2-0-mountain-lion/&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Linux命令行技巧</title>
   <link href="/2012/05/10/linux-command-line-tips.html"/>
   <updated>2012-05-10T00:00:00+08:00</updated>
   <id>h/2012/05/10/linux-command-line-tips</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;Bash 有个功能叫大括号扩展，大括号包围的，用逗号隔开的参数会扩展为独立的多个参数。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;   $ mv a{,.html}

   $ mv a.{html,htm}

   $ yum install git
   You need to be root to perform this command.
   $ sudo !!
   sudo yum install git
   ...

   $ mv /etc/apt/sources.{list,bak}



!* 将代替上一个命令的所有参数，(!! 是整条命令和所有参数)

!$ 上一条命令的最后一个参数

!:3 上一条命令的第3个参数&lt;/span&gt;
&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>too many open files解决方法</title>
   <link href="/2012/04/26/too-many-open-files.html"/>
   <updated>2012-04-26T00:00:00+08:00</updated>
   <id>h/2012/04/26/too-many-open-files</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;查看文件系统最大可打开文件数：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; cat /proc/sys/fs/file-max
&lt;span class=&quot;generic output&quot;&gt;345604&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;程序限制打开文件数：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;ulimit&lt;/span&gt; -n
&lt;span class=&quot;generic output&quot;&gt;1024&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修改配置文件：&lt;/p&gt;
&lt;p&gt;/etc/sysctl.conf&lt;/p&gt;
&lt;p&gt;插入一行：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;fs.file-max = 8192&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修改文件：&lt;/p&gt;
&lt;p&gt;/etc/security/limits.conf&lt;/p&gt;
&lt;p&gt;添加一行：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;* - nofile 8192&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;当所有的都不生效时，可以尝试：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo su &lt;span class=&quot;literal string backtick&quot;&gt;`&lt;/span&gt;whoami&lt;span class=&quot;literal string backtick&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;ulimit&lt;/span&gt; -n
&lt;/pre&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;可能遇见的错误&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;错误1&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;bash: ulimit: open files: cannot modify limit: Operation not permitted&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;错误2&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;ulimit: value exceeds hard limit&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>给终端加点彩</title>
   <link href="/2012/04/25/colored-man.html"/>
   <updated>2012-04-25T00:00:00+08:00</updated>
   <id>h/2012/04/25/colored-man</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;div class=&quot;section&quot; id=&quot;man&quot;&gt;
&lt;h2&gt;彩色的man&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;参考：
&lt;a class=&quot;reference external&quot; href=&quot;http://blog.longwin.com.tw/2006/07/color_grep_man_2006/&quot;&gt;http://blog.longwin.com.tw/2006/07/color_grep_man_2006/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;less&quot;&gt;
&lt;h2&gt;彩色less&lt;/h2&gt;
&lt;p&gt;让less识别颜色转义序列：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;export LESS='-R'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://linuxtoy.org/archives/less-highlight.html&quot;&gt;http://linuxtoy.org/archives/less-highlight.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://xiaogaozi.blogspot.com/2009/01/less.html&quot;&gt;http://xiaogaozi.blogspot.com/2009/01/less.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;grep&quot;&gt;
&lt;h2&gt;彩色grep&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;name variable&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'grep --color'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这是fedora和ubuntu的标配，但centos和mac下就要使用上述设置了。然而使用发现，centos和mac下即使使用了这个设置，显示效果仍然比不上fedora/ubuntu。&lt;/p&gt;
&lt;p&gt;Mac OS X中如何实现ubuntu的彩色grep效果呢？&lt;/p&gt;
&lt;p&gt;经过多方查证，发现原因是： 新老版本的区别。老版本grep只有有限的彩色支持，使用GREP_COLOR来配置，配置内容也很少。&lt;/p&gt;
&lt;p&gt;新版grep使用GREP_COLORS来配置，参数丰富了很多，同时保留了GREP_COLOR参数来兼容旧版本。&lt;/p&gt;
&lt;p&gt;mac自带grep版本为2.5.1，居然和公司服务器centos 5.4上的grep版本一样。&lt;/p&gt;
&lt;p&gt;homebrew里也没有grep，理由是：&lt;/p&gt;
&lt;p&gt;We don't ship system duplicates.&lt;/p&gt;
&lt;p&gt;那就自己动手，丰衣足食。下载grep源码，最新版2.12。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; xz -d grep-2.12.tar.xz
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; tar -xvf  grep-2.12.tar
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd &lt;/span&gt;grep-2.12
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ./configure &lt;span class=&quot;operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class=&quot;operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo make install
&lt;/pre&gt;
&lt;p&gt;OK，彩色出来了！&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>在sudo中使用alias</title>
   <link href="/2012/04/19/using-sudo-with-an-alias.html"/>
   <updated>2012-04-19T00:00:00+08:00</updated>
   <id>h/2012/04/19/using-sudo-with-an-alias</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;使用bash时发现，在sudo时，所有的配置都失效了，比如alias的配置。&lt;/p&gt;
&lt;p&gt;我习惯使用vi来打开vim，所以有如下配置：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;alias vi='vim'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;在直接使用vi时，bash很规矩地按照alias来调用vim，从下看出：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; which vi
&lt;span class=&quot;generic output&quot;&gt;alias vi='vim'
    /usr/bin/vim&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;但当使用sudo vi时，就出现了警告：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;Error detected while processing /usr/home/amoblin/.vimrc:
line   31:
E518: Unknown option: autochdir
Press ENTER or type command to continue&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这里vi调用的哪个呢?&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo which vi
&lt;span class=&quot;generic output&quot;&gt;/bin/vi&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;是原始的vi，不是vim，难怪对autochdir不支持。&lt;/p&gt;
&lt;p&gt;怎么解决呢？很简单，再增加一个alias：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;alias sudo='sudo '&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;不要小看这个空格，正是它让你在sudo时能够使用之前的alias配置。&lt;/p&gt;
&lt;p&gt;传说还有另外一个很变态的alias，欲知详情，请移步这里：&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.shellperson.net/using-sudo-with-an-alias/&quot;&gt;http://www.shellperson.net/using-sudo-with-an-alias/&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>zeromq学习笔记</title>
   <link href="/2012/03/16/zeromq-note.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/zeromq-note</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;名词解释&lt;/h2&gt;
&lt;p&gt;IDC: Internet Data Center，互联网数据中心。&lt;/p&gt;
&lt;p&gt;ZooKeeper: Hadoop子项目，Chubby的开源实现，协同工作系统。&lt;/p&gt;
&lt;p&gt;Pacemaker: 类似Zooeeper的项目。&lt;/p&gt;
&lt;p&gt;Paxos:&lt;/p&gt;
&lt;p&gt;Redis:&lt;/p&gt;
&lt;p&gt;Gossip协议：&lt;/p&gt;
&lt;p&gt;Thrift协议：&lt;/p&gt;
&lt;p&gt;Cassandra: Apache的开源分布式KV存储系统，最初由Facebook开发。&lt;/p&gt;
&lt;p&gt;Dynomite: KV存储。&lt;/p&gt;
&lt;p&gt;HAProxy: 前端负载均衡。&lt;/p&gt;
&lt;p&gt;Thrift: Facebook的跨语言服务器部署框架。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;底层库&lt;/h2&gt;
&lt;p&gt;libevent: 一个轻量级I/O框架。&lt;/p&gt;
&lt;p&gt;epoll&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;ZeroMQ类似实现对比&lt;/h2&gt;
&lt;p&gt;异步队列?&lt;/p&gt;
&lt;p&gt;AMQP vs. RabbitMQ&lt;/p&gt;
&lt;p&gt;Round-robin进行负载均衡&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;ZeroMQ的模式&lt;/h2&gt;
&lt;p&gt;三种模式：&lt;/p&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;请求应答模式&lt;/p&gt;
&lt;p&gt;传统的c/s模式。见hwclient.js和hwserver.js。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;订阅发布模式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;publisher.js和subscriber.js。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;推拉模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;默认阻塞，使用Poller实现非阻塞。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;node-js&quot;&gt;
&lt;h2&gt;Node.js使用例子&lt;/h2&gt;
&lt;pre class=&quot;code javascript literal-block&quot;&gt;
&lt;span class=&quot;keyword declaration&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'zeromq'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;请求/响应模式：&lt;/p&gt;
&lt;pre class=&quot;code javascript literal-block&quot;&gt;
&lt;span class=&quot;keyword declaration&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name other&quot;&gt;createSocket&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'rep'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;name other&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name other&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'message'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;keyword declaration&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name other&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;punctuation&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;
&lt;pre class=&quot;code javascript literal-block&quot;&gt;
&lt;span class=&quot;keyword declaration&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name other&quot;&gt;createSocket&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'req'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;发布/订阅模式：&lt;/p&gt;
&lt;pre class=&quot;code javascript literal-block&quot;&gt;
&lt;span class=&quot;keyword declaration&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;publisher&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name other&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name other&quot;&gt;createSocket&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'pub'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: ERROR/3 (&lt;tt class=&quot;docutils&quot;&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 100)&lt;/p&gt;
&lt;p&gt;Content block expected for the &amp;quot;code-block&amp;quot; directive; none found.&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. code-block:: javascript


&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;zeromq安装&lt;/h2&gt;
&lt;p&gt;目前最新稳定版：&lt;a class=&quot;reference external&quot; href=&quot;http://download.zeromq.org/zeromq-2.1.11.tar.gz&quot;&gt;http://download.zeromq.org/zeromq-2.1.11.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;github地址：&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/zeromq/zeromq2-1&quot;&gt;https://github.com/zeromq/zeromq2-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译安装三部曲：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ./configure
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; make
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo make install
&lt;/pre&gt;
&lt;p&gt;另外还需要更新动态链接库：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo ldconfig
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python&quot;&gt;
&lt;h2&gt;python绑定&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo easy_install pyzmq
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;Node.js绑定&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; npm install zmq
&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>命令行下使用xcode编译工程</title>
   <link href="/2012/03/16/xcode-in-command-line.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/xcode-in-command-line</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.kunli.info/2010/09/19/xcode-vim-integration/&quot;&gt;http://www.kunli.info/2010/09/19/xcode-vim-integration/&lt;/a&gt;  vim中实现xcode，用cocoa.vim&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.hudo.it/index.php?topic=390.0&quot;&gt;http://www.hudo.it/index.php?topic=390.0&lt;/a&gt; ：列举2套方案&lt;/p&gt;
&lt;p&gt;vim的cocoa插件：cocoa.vim&lt;/p&gt;
&lt;p&gt;自动补 [] 的插件：&lt;/p&gt;
&lt;p&gt;xcode的vim插件：XVim： &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/JugglerShu/XVim&quot;&gt;https://github.com/JugglerShu/XVim&lt;/a&gt;  很好很强大&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/WarWithinMe/xVim&quot;&gt;https://github.com/WarWithinMe/xVim&lt;/a&gt; 另一个插件，未安装成功&lt;/p&gt;
&lt;p&gt;虽说Xcode使用起来很方便，但有时候为了快捷也希望能够在终端输入一条命令执行编译，幸好Xcode提供了相关的命令，可以通过它来编译xcode工程。&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;查看环境&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; xcodebuild -showsdks
&lt;span class=&quot;generic output&quot;&gt;Mac OS X SDKs:
        Mac OS X 10.6                   -sdk macosx10.6
        Mac OS X 10.7                   -sdk macosx10.7

iOS SDKs:
        iOS 5.0                         -sdk iphoneos5.0

iOS Simulator SDKs:
        Simulator - iOS 4.3             -sdk iphonesimulator4.3
        Simulator - iOS 5.0             -sdk iphonesimulator5.0&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;编译&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; xcodebuild -sdk iphoneos5.0
&lt;/pre&gt;
&lt;p&gt;还不知道如何通过命令来运行程序，探索中。。。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;自动配置&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; gem install choctop
&lt;span class=&quot;generic prompt&quot;&gt;%&lt;/span&gt; install_choctop .
&lt;span class=&quot;generic output&quot;&gt;NOTE: Gem.source_index is deprecated, use Specification. It will be removed on or after 2011-11-01.
Gem.source_index called from /Users/amoblin/.rvm/gems/ruby-1.9.3-p125/gems/rubigen-1.5.8/lib/rubigen/lookup.rb:284.
NOTE: Gem::SourceIndex#each is deprecated with no replacement. It will be removed on or after 2011-11-01.
&lt;/span&gt;&lt;span class=&quot;generic prompt&quot;&gt;Gem::SourceIndex#&lt;/span&gt;each called from /Users/amoblin/.rvm/gems/ruby-1.9.3-p125/gems/rubigen-1.5.8/lib/rubigen/lookup.rb:284.
&lt;span class=&quot;generic output&quot;&gt;      create  appcast/build
      create  Rakefile
      create  release_notes.txt
      create  release_notes_template.html.erb
      readme  README.normal
You use choctop with the following rake tasks:
  rake appcast # Create dmg, update appcast file, and upload to host
  rake build   # Create/update the appcast file
  rake dmg     # Create the dmg file for appcasting
  rake upload  # Upload the dmg and appcast files to the host&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>网络编程学习</title>
   <link href="/2012/03/16/unix-network-programming-note.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/unix-network-programming-note</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;div class=&quot;section&quot; id=&quot;socket&quot;&gt;
&lt;h2&gt;SOCKET编程基础&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;服务器端&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;创建套接字：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listenfd&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;socket error!&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;设置服务器端口相关，这里为80端口，注意这里的sockaddr_in结构体。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;s_addr&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;htonl&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;INADDR_ANY&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;绑定端口。这里将sockaddr_in结构体转换为sockaddr结构体。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockaddr&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;bind error!&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;# 监听端口，这里设置套接字排队最大连接数为5，根据BSD传统。&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;listen error!&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;处理连接。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;connfd&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockaddr&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;accept error!&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;comment multiline&quot;&gt;/* 这里处理连接请求，最简单的是直接处理，但如果比较耗时的话其他就访问不了。
     * 要能够同时处理多个请求，一般用线程或子进程来完成，
     * 这样主进程能够继续或者说同时处理下一个请求。 \*/&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;connfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listenfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;客户端&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;创建套接字&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;socket error.&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;设置访问端口。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;bzero&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sin_family&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sin_port&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;htons&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;inet_pton&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sin_addr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;inet_pton error.&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;发起连接。错误代码保存在全局变量errno中，errno在errno.h中定义。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockaddr&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;servaddr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;connect error: %s&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;strerror&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;errno&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;读写socket，应用处理。这里可以使用各种I/O复用等。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;recvlien&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;MAXLINE&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;i-o&quot;&gt;
&lt;h2&gt;I/O复用技术&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;select&quot;&gt;
&lt;h3&gt;select&lt;/h3&gt;
&lt;p&gt;头文件&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;comment preproc&quot;&gt;#include &amp;lt;sys/select.h&amp;gt;
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;定义相关变量并初始化：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;maxfdp1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;fd_set&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;FD_ZERO&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fileno&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fp&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;FD_SET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;maxfdp1&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fileno&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fp&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;使用select，在可读时响应：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;maxfdp1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;select error.&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;通过FD_ISSET()判断哪个文件描述符可读：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fileno&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fp&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;comment single&quot;&gt;// Now can read from fp.
&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;FD_ISSET&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sockfd&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;rset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;comment single&quot;&gt;// Now can read from sockfd.
&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;具体的例子参见str_cli2函数（在echo_client.c中）。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pselect&quot;&gt;
&lt;h3&gt;pselect&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;poll&quot;&gt;
&lt;h3&gt;poll&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;相关库&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;libevent&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>leveldb学习</title>
   <link href="/2012/03/16/leveldb-note.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/leveldb-note</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;服务器构架&lt;/h2&gt;
&lt;p&gt;前端有一级缓存L1&lt;/p&gt;
&lt;p&gt;中间有Memory Cache作为二级缓存L2&lt;/p&gt;
&lt;p&gt;后端MySQL数据库自带三级缓存L3&lt;/p&gt;
&lt;p&gt;Memory Cache产品，最经典的是MemoryCached。&lt;/p&gt;
&lt;p&gt;硬盘产品，现在使用SSD硬盘来提到I/O能力。我们使用FusionIO公司的SSD硬盘。&lt;/p&gt;
&lt;p&gt;但MemoryCached不能和SSD较好地整合。在和SSD的整合方面，leveldb是最不错的。&lt;/p&gt;
&lt;p&gt;我们尝试leveldb和FusionIO产品的整合。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;磁盘阵列&lt;/h2&gt;
&lt;p&gt;RAID: Redundant Array of Independent Disks, 磁盘阵列&lt;/p&gt;
&lt;p&gt;分为RAID-0, RAID-1, RADI-1E, RAID-5, RAID-6, RAID-7, RAID-10, RAID-50。&lt;/p&gt;
&lt;p&gt;RAID-0: 多个磁盘合并成一个大容量磁盘，不具有冗余。并行I/O。读写速度快。&lt;/p&gt;
&lt;p&gt;RAID-1：互相做镜像。冗余最高，安全性最好。读取速度快。写入速度稍慢。&lt;/p&gt;
&lt;p&gt;RAID-2: 在RAID-0的基础上加入Hamming码作为错误校验码。至少需要3台磁盘。&lt;/p&gt;
&lt;p&gt;RAID-3：数据交错存储。数据分散在各个磁盘。&lt;/p&gt;
&lt;p&gt;RAID-4：和RAID-3类似，不过以区块为单位分区。&lt;/p&gt;
&lt;p&gt;RAID-5：组合RAID-0和RAID-1，使用奇偶校验信息做冗余。读取速度和RAID-0相近，写入速度较慢（由于奇偶校验信息）。&lt;/p&gt;
&lt;p&gt;RAID-6：比RAID-5增加一个独立的奇偶校验信息块，使用不同的算法。可靠性很高，允许两块磁盘失效。写性能很差。&lt;/p&gt;
&lt;p&gt;实际应用中RAID-5，RAID-6比较多。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;memorycached&quot;&gt;
&lt;h2&gt;MemoryCached学习&lt;/h2&gt;
&lt;p&gt;MemoryCached使用LRU（Least Recently Used）算法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;nosql&quot;&gt;
&lt;h2&gt;NoSQL相关理论&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;术语&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Five Minutes Rule&lt;/li&gt;
&lt;li&gt;CAP理论：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;C：Consistency 一致性&lt;/li&gt;
&lt;li&gt;A: Availability 可用性&lt;/li&gt;
&lt;li&gt;P: Partition(Tolerence of network Partition) 分区容忍性（分布式）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;ACID&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;A: Atomic 原子性&lt;/li&gt;
&lt;li&gt;C: Consistency&lt;/li&gt;
&lt;li&gt;I:&lt;/li&gt;
&lt;li&gt;D: D&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;LSM Tree (Log Structurted Merge Tree， 内存中日志树)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MMAP&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;分区策略&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;一致性Hash环 DHTs&lt;/li&gt;
&lt;li&gt;范围分区，比如Bigtable&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;bittable&quot;&gt;
&lt;h2&gt;BitTable论文学习&lt;/h2&gt;
&lt;p&gt;映射： :math: (row:string, column:string, timestamp:int64) rightarrow string&lt;/p&gt;
&lt;p&gt;时间戳：时间逆序&lt;/p&gt;
&lt;p&gt;API:&lt;/p&gt;
&lt;p&gt;SSTable文件格式用来存储Bigtable数据。提供持久，有序的键值映射。&lt;/p&gt;
&lt;p&gt;每个SSTable包含一系列 块 block，典型的块大小是64KB，可以修改配置文件改变。SSTable的末尾是block的索引。打开SSTable时会把索引载入内存。对索引进行二分查找找到目标块，然后从磁盘中读取该块。也可以把整个SSTable读入内存，这样再查找就不需磁盘I/O操作了。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;chubby&quot;&gt;
&lt;h3&gt;Chubby&lt;/h3&gt;
&lt;p&gt;Chubby使用Paxos算法。。。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h3&gt;实现&lt;/h3&gt;
&lt;p&gt;主服务器， 很多节点tablet服务器， 通信。&lt;/p&gt;
&lt;p&gt;tablet server管理一组tablets，一般有上千个tablets。tablet server管理已加载的tablets的读写请求，还负责把太大的tablet拆小。&lt;/p&gt;
&lt;p&gt;一个Bigtable集群存储很多tables，每个table由一组tablets组成。每个tablet关联着特定行范围的所有数据。&lt;/p&gt;
&lt;p&gt;一开始，每个表只有一个tablet，随着tablet的增大，自动分裂成多个tablets，默认每个tablet的大小上线是100-200MB。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;tablet&quot;&gt;
&lt;h4&gt;5.1 Tablet定位&lt;/h4&gt;
&lt;p&gt;Chubby文件 -&amp;gt; 根tablet&lt;/p&gt;
&lt;p&gt;根tablet在METADATA表中存储所有的tablets位置信息。METADATA表中存的第一个，当然是根tablet了。根tablet比较特殊，它永不分裂。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;LevelDB综述&lt;/h2&gt;
&lt;p&gt;leveldb主要解决随机写的效率低下问题。&lt;/p&gt;
&lt;p&gt;打开数据库初始化时，加载.sst索引数据。在内存中构建一个memtable。同时创建日志文件。以后的写操作都会确保memtable和日志文件的一致性。&lt;/p&gt;
&lt;p&gt;写文件用Put函数实现。当进行Put操作时，不是对磁盘而是对memtable进行操作。操作成功的话会将操作追加到操作日志文件中，从而将随机写转化为顺序写。&lt;/p&gt;
&lt;p&gt;当memtable规模超过预设值时，memtable会分成2部分。一部分对key排序，建立索引后把k/v数据和索引一并持久化存储为.sst文件。同时删除对应的日志文件内容。这叫做minor compaction。&lt;/p&gt;
&lt;p&gt;当leveldb意外退出时，系统可以从操作日志中恢复数据，持久化到.sst文件。&lt;/p&gt;
&lt;p&gt;读操作用Get函数实现。首先使用bloom过滤器判断是否存在该key，若存在的话，二分查找定位到所需.sst文件，将.sst文件载入内存，和memtable合并（即将操作顺序执行一遍），然后返回最终值，也就是最新值。&lt;/p&gt;
&lt;p&gt;当.sst文件个数超过预设值时，会合并成1个.sst文件。这叫做major compaction。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id7&quot;&gt;
&lt;h2&gt;数据格式分析&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id8&quot;&gt;
&lt;h3&gt;静态分析&lt;/h3&gt;
&lt;p&gt;数据库目录下一般有如下几类文件：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;$version.sst文件（Sorted String Table)&lt;/li&gt;
&lt;li&gt;$version.log文件（当前操作）&lt;/li&gt;
&lt;li&gt;CURRENT   存放MANIFEST文件名&lt;/li&gt;
&lt;li&gt;LOCK&lt;/li&gt;
&lt;li&gt;LOG   存放最新的系统日志&lt;/li&gt;
&lt;li&gt;LOG.old   存放日志存档&lt;/li&gt;
&lt;li&gt;MANIFEST-$version MANIFEST文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中$version为6位整数。&lt;/p&gt;
&lt;p&gt;$version.log的格式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;block， 不确定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;record，不确定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;checksum&lt;/p&gt;
&lt;p&gt;是type和data的循环校验码CRC32C。
uint32类型，4字节，文件头偏移量13字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;length，uint16类型，2字节。只见到值为0的，不知道作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;type，unit8类型，1字节。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;表示data的类型，取值如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class=&quot;upperroman simple&quot;&gt;
&lt;li&gt;1  FULL&lt;/li&gt;
&lt;li&gt;2  FIRST&lt;/li&gt;
&lt;li&gt;3  MIDDLE&lt;/li&gt;
&lt;li&gt;4  LAST&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;data 具体的k-v数据。&lt;/p&gt;
&lt;p&gt;在type=1时，结构为：key的长度 key的内容 value的长度 value的内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h3&gt;时序演示&lt;/h3&gt;
&lt;div class=&quot;section&quot; id=&quot;id10&quot;&gt;
&lt;h4&gt;初始化数据库&lt;/h4&gt;
&lt;p&gt;假设有如下Python操作：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;operator&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;keyword namespace&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;leveldb&lt;/span&gt;
&lt;span class=&quot;operator&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;leveldb&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;LevelDB&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'./data'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;假设当前目录下没有data子目录。leveldb会创建data目录，初始化如下文件：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 09:52 000003.log
-rw-r--r-- 1 amoblin amoblin  16 2011-12-09 09:52 CURRENT
-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 09:52 LOCK
-rw-rw-r-- 1 amoblin amoblin  53 2011-12-09 09:52 LOG
-rw-r--r-- 1 amoblin amoblin 64K 2011-12-09 09:52 MANIFEST-000002&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;000003.log为待写文件，后续Put，Delete等操作会将记录保存至此。&lt;/p&gt;
&lt;p&gt;CURRENT内容为MANIFEST文件名，初始时MANIFEST版本为2，即MANIFEST-000002。为什么不是1呢？看接下来的LOG文件。&lt;/p&gt;
&lt;p&gt;LOG文件内容如下：&lt;/p&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;tt class=&quot;docutils&quot;&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 212)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. No Pygments lexer found for &amp;quot;log&amp;quot;.&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. code-block:: log

    2011/12/09-09:52:33.951468 b770d6c0 Delete type=3 #1

&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;第一列是创建时间，第二列b770d6c0不知何意。Delete代表删除操作。&lt;/p&gt;
&lt;p&gt;type=3，说明是MANIFEST文件，#1是版本号。&lt;/p&gt;
&lt;p&gt;即删除了MANIFEST-000001文件。所以现存的是MANIFEST-000002文件。&lt;/p&gt;
&lt;p&gt;MANIFEST-000002文件待研究。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;put&quot;&gt;
&lt;h4&gt;Put数据&lt;/h4&gt;
&lt;p&gt;接着上面的交互：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;operator&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;Put&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'cba'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'abcd'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这时操作内容被追加到000005.log文件，使其大小由0变为64KB：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;-rw-r--r-- 1 amoblin amoblin 64K 2011-12-09 10:20 000005.log&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;查看其内容&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; od -A d -t x1 000003.log
&lt;span class=&quot;generic output&quot;&gt;0000000 57 c6 a2 f2 16 00 01 01 00 00 00 00 00 00 00 01
0000016 00 00 00 01 03 63 62 61 04 61 62 63 64
0000029&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;循环校验码从第1行倒数第3个数值00开始，到第2行第1个00为止，共4字节。&lt;/p&gt;
&lt;p&gt;接着2字节是length，为0.&lt;/p&gt;
&lt;p&gt;接着1字节是type，这里为1，表示接下来的data包含全部内容，并未分片。&lt;/p&gt;
&lt;p&gt;接着是data数据，03表示key的长度，63 62 61是key的内容'cba'的ascii码。&lt;/p&gt;
&lt;p&gt;然后是value接着2字节是length，为0.&lt;/p&gt;
&lt;p&gt;接着1字节是type，这里为1，表示接下来的data包含全部内容，并未分片。&lt;/p&gt;
&lt;p&gt;接着是data数据，03表示key的长度，63 62 61是key的内容'cba'的ascii码。&lt;/p&gt;
&lt;p&gt;然后04是value的长度，61 62 63 64是value的内容'abcd'的ascii码。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id11&quot;&gt;
&lt;h4&gt;再次打开数据库&lt;/h4&gt;
&lt;p&gt;如果打开当前数据库：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;operator&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;leveldb&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;LevelDB&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'./data'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;查看文件变化情况：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;-rw-r--r-- 1 amoblin amoblin 119 2011-12-09 10:37 000005.sst
-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 10:37 000006.log
-rw-r--r-- 1 amoblin amoblin  16 2011-12-09 10:37 CURRENT
-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 10:37 LOCK
-rw-rw-r-- 1 amoblin amoblin 289 2011-12-09 10:37 LOG
-rw-rw-r-- 1 amoblin amoblin  53 2011-12-09 10:37 LOG.old
-rw-r--r-- 1 amoblin amoblin 64K 2011-12-09 10:37 MANIFEST-000004&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;CURRENT内容变为MANIFEST-000004。&lt;/p&gt;
&lt;p&gt;LOG文件内容如下：&lt;/p&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;tt class=&quot;docutils&quot;&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 289)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. No Pygments lexer found for &amp;quot;log&amp;quot;.&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. code-block:: log

    2011/12/09-10:37:43.285941 b770d6c0 Recovering log #3
    2011/12/09-10:37:43.286160 b770d6c0 Level-0 table #5: started
    2011/12/09-10:37:43.288104 b770d6c0 Level-0 table #5: 119 bytes OK
    2011/12/09-10:37:43.291572 b770d6c0 Delete type=3 #2
    2011/12/09-10:37:43.291636 b770d6c0 Delete type=0 #3

&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;从系统日志可以看出，leveldb做了3件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;执行上次的操作&lt;/p&gt;
&lt;p&gt;我们知道，leveldb的Put，Delete操作都是顺序存放在.log文件中的。何时整理呢？就是这时。&lt;/p&gt;
&lt;p&gt;创建了000005.sst表，将上次的k/v数据存入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;更新版本号&lt;/p&gt;
&lt;p&gt;整理完毕后，删除老的版本号MANIFEST-000002，生成新版本号文件MANIFEST-000004。看来没有奇数版本号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;删除旧日志&lt;/p&gt;
&lt;p&gt;删除日志文件000003.log&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新文件LOG.old存放上次的LOG文件内容。&lt;/p&gt;
&lt;p&gt;查看000005.sst文件&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; od -A d -t x1 000005.sst
&lt;span class=&quot;generic output&quot;&gt;0000000 00 0b 04 63 62 61 01 01 00 00 00 00 00 00 61 62
0000016 63 64 00 00 00 00 01 00 00 00 00 e2 3a b7 8c 00
0000032 00 00 00 01 00 00 00 00 c0 f2 a1 b0 00 09 02 64
0000048 01 ff ff ff ff ff ff ff 00 1a 00 00 00 00 01 00
0000064 00 00 00 c9 e4 dd 23 1f 08 2c 16 00 00 00 00 00
0000080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000096 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 57
0000112 fb 80 8b 24 75 47 db
0000119&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;最后48字节是Footer，固定长度。其中从1f开始的40字节是索引。最后8字节是魔数。&lt;/p&gt;
&lt;p&gt;索引不足40字节的话补0。上面的索引数据是 1f 08 2c 16。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id12&quot;&gt;
&lt;h2&gt;源码学习&lt;/h2&gt;
&lt;p&gt;主入口在db.h。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;open&quot;&gt;
&lt;h3&gt;打开数据库Open()&lt;/h3&gt;
&lt;p&gt;db_impl.cc文件中实现Open函数。&lt;/p&gt;
&lt;p&gt;3个参数：options选项，数据库名字（文件夹路径），数据库指针。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;dbimpl&quot;&gt;
&lt;h4&gt;DBImpl实例&lt;/h4&gt;
&lt;p&gt;新建TableCache, VersionSet。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id13&quot;&gt;
&lt;h4&gt;检测数据库路径&lt;/h4&gt;
&lt;p&gt;首先根据options进行两种操作：
1. 若不存在，创建数据库目录。
#. 若存在，报错。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id14&quot;&gt;
&lt;h4&gt;创建日志文件&lt;/h4&gt;
&lt;p&gt;日志文件指针为WritalbeFile*类型。根据已有日志版本创建新日志文件，返回文件句柄。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id15&quot;&gt;
&lt;h3&gt;Put操作&lt;/h3&gt;
&lt;p&gt;首先将操作封装到WriteBatch中，然后将WriteBatch送给Write函数。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;delete&quot;&gt;
&lt;h3&gt;Delete操作&lt;/h3&gt;
&lt;p&gt;类似上述Put操作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;write&quot;&gt;
&lt;h3&gt;Write函数&lt;/h3&gt;
&lt;p&gt;将操作追加到日志文件 AddRecord ，更新内存数据。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;get&quot;&gt;
&lt;h3&gt;Get操作&lt;/h3&gt;
&lt;p&gt;首先在memetable中查找，然后immutable中查找，然后其他。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id16&quot;&gt;
&lt;h3&gt;退出&lt;/h3&gt;
&lt;p&gt;退出时会修改MANIFEST文件。&lt;/p&gt;
&lt;hr class=&quot;docutils&quot; /&gt;
&lt;p&gt;附：&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python-leveldb&quot;&gt;
&lt;h2&gt;python leveldb安装&lt;/h2&gt;
&lt;p&gt;有两个实现：py-leveldb和cpy-leveldb。&lt;/p&gt;
&lt;p&gt;cpy-leveldb安装：
首先配置编译环境：libtool, automake,&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd &lt;/span&gt;snappy
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ./autogen.sh
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ./configure
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; make
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; ..
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; make -C leveldb
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo python setup.py build
&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Iphone越狱。。。</title>
   <link href="/2012/03/16/jackbreak.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/jackbreak</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;div class=&quot;section&quot; id=&quot;ios6&quot;&gt;
&lt;h2&gt;iOS6不完美越狱&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://cn.ibtimes.com/artnews/14624/20120920/ios6-jailbreak-cydia-install.htm&quot;&gt;http://cn.ibtimes.com/artnews/14624/20120920/ios6-jailbreak-cydia-install.htm&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; wget -q http://downloads.kr1sis.net/cyinstall.sh
&lt;/pre&gt;
&lt;p&gt;2012-09-20 21:54&lt;/p&gt;
&lt;p&gt;越狱前准备工作：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;0&quot;&gt;
&lt;li&gt;下载安装tiny umbrella和redsn0w。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1.备份shsh。使用小雨伞或红雪备份。&lt;/p&gt;
&lt;p&gt;2.备份数据：照片，通讯录，短信等。连接itunes，右键iphone设备，点“备份”。&lt;/p&gt;
&lt;ol class=&quot;arabic&quot; start=&quot;3&quot;&gt;
&lt;li&gt;&lt;dl class=&quot;first docutils&quot;&gt;
&lt;dt&gt;了解iphone状态：&lt;/dt&gt;
&lt;dd&gt;&lt;p class=&quot;first last&quot;&gt;DFU模式：Power键3秒；接着不松开Power，同时按Home键，大约15秒；松开Power，继续按着Home键，大约15秒。
恢复模式：&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DFU模式
如果你的手机固件已经出现问题需重刷，并且itunes也无法识别iphone,不用急，你只要同时按下Power + Home按键，保持10秒钟左右 当屏幕黑了以后 松开Power键，但不要松开Home键，这时候屏幕仍然是黑的，启动iTunes（别松开Home键），iTunes会检测到iPhone处于恢复模式（出现提示窗口），现在可以松开Home键了。这时按着SHIFT键点ITUNES的恢复，选择你所下载的固件版本。和上面步骤就一样了。&amp;quot;&lt;/p&gt;
&lt;p&gt;越狱：&lt;/p&gt;
&lt;p&gt;使用红雪0.9.10b3，点击JackbreakMe，然后关机。&lt;/p&gt;
&lt;p&gt;进到DFU模式。&lt;/p&gt;
&lt;p&gt;越狱完：&lt;/p&gt;
&lt;p&gt;进入Cydia，添加软件源：&lt;/p&gt;
&lt;p&gt;appsync：　&lt;a class=&quot;reference external&quot; href=&quot;http://cydia.hackulo.us&quot;&gt;http://cydia.hackulo.us&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;178源     &lt;a class=&quot;reference external&quot; href=&quot;http://apt.178.com/&quot;&gt;http://apt.178.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iOS开发：&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.2.1_for_lion/xcode_4.2.1_for_lion.dmg&quot;&gt;https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.2.1_for_lion/xcode_4.2.1_for_lion.dmg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载需要Apple ID。&lt;/p&gt;
&lt;p&gt;udid：4de5047c9db13de80452c481db9c8b65b1b0a954&lt;/p&gt;
&lt;p&gt;升级系统：&lt;/p&gt;
&lt;p&gt;备份数据：&lt;/p&gt;
&lt;p&gt;momento
clear
cydia+openbackup备份&lt;/p&gt;
&lt;p&gt;option键 + 恢复按钮，选择ipws文件，进行升级&lt;/p&gt;
&lt;p&gt;iphone无法开机了，怎么办？&lt;/p&gt;
&lt;p&gt;假死现象很常见，也很好解决。&lt;/p&gt;
&lt;p&gt;按住HOME+POWER 20s之后就可以重启了&lt;/p&gt;
&lt;p&gt;在固件刷完之后，如果你想要回当前设备的备份请选择恢复备份，不要选择设置为一个新的设备。&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;配置安全性&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;更改root密码&lt;/li&gt;
&lt;li&gt;禁用root登陆&lt;/li&gt;
&lt;li&gt;增加新账号&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;解决cydia添加源闪退:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ssh登陆iphone，执行如下操作：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; ls /var/root/Library/
&lt;span class=&quot;generic output&quot;&gt;AddressBook  Caches  Cookies  Lockdown  Logs  Mail  Preferences  WebKit
&lt;/span&gt;&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; cp -r /User/Library/Keyboard/ /var/root/Library/
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;添加国内178源：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://apt.178.com&quot;&gt;http://apt.178.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;感觉178源靠谱点。&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Zephyr。这个必装，上划退出这个功能太方便了！ 不过和SBSettings冲突，要安装的化最好卸载SBSettings。&lt;/li&gt;
&lt;li&gt;AppSync&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;iosunix&quot;&gt;
&lt;h2&gt;iOS中Unix环境配置&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;ssh&quot;&gt;
&lt;h3&gt;使用ssh登陆系统&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ssh root&amp;#64;192.168.2.2
&lt;/pre&gt;
&lt;p&gt;初始密码为alpine，最好修改一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h3&gt;添加178源&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;deb http://apt.178.com/ ./&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/apt/sources.list.d/cydia.list
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; apt-get update
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;安装aptitude：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; apt-get install aptitude
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;使用aptitude搜索软件包：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; aptitude search zephyr
&lt;/pre&gt;
&lt;p&gt;Linux/Unix用户必备工具：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; apt-get install sudo less vim git python screen zsh
&lt;/pre&gt;
&lt;p&gt;iPhone必备软件(Zephyr, NcSettings, KuaiDial)：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; apt-get install zephyr.178 com.jamied360.ncsettings kuaidial-beta.178
&lt;/pre&gt;
&lt;p&gt;开发工具集：&lt;/p&gt;
&lt;p&gt;aptitude
adv-cmds
basic-cmds
bootstrap-cmds
coreutils
developer-cmds
file-cmds
network-cmds
shell-cmds
system-cmds
inetutils&lt;/p&gt;
&lt;p&gt;通过命令行发短信：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo apt-get install sendsms
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;ios&quot;&gt;
&lt;h2&gt;iOS中常用命令&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;重启SpringBoard&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo sbreload
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;重启iphone&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo reboot
&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>第一个iOS程序</title>
   <link href="/2012/03/16/first-ios-app.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/first-ios-app</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;1月19日开始第一个ios开发程序。&lt;/p&gt;
&lt;p&gt;在Xcode4.2下创建一个SingleView Application项目first&lt;/p&gt;
&lt;p&gt;Device Family: iPhone
Use Storyboard
Use Automatic Reference Counting&lt;/p&gt;
&lt;p&gt;进入first项目根目录，有两个目录first和first.xcodeproj。进入first目录。&lt;/p&gt;
&lt;p&gt;查看文件：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd &lt;/span&gt;first
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ls
&lt;span class=&quot;generic output&quot;&gt;AppDelegate.h    ViewController.h en.lproj         first-Prefix.pch
AppDelegate.m    ViewController.m first-Info.plist main.m&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Storyboard在这里：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ls en.lproj/
&lt;span class=&quot;generic output&quot;&gt;InfoPlist.strings         MainStoryboard.storyboard&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Storyboard的层次结构：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;document
    dependencies
    scenes
        scene
            objects
                placeholder
                viewController
                    view
                        rect
                        autoresizingMask
                        subviews
                        color
                    connections
                        outlet
    classes(一开始木有)
    simulatedMetricsContainer&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot; id=&quot;label&quot;&gt;
&lt;h2&gt;添加一个Label&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;-                        &amp;lt;subviews/&amp;gt;
+                        &amp;lt;subviews&amp;gt;
+                            &amp;lt;label opaque=&amp;quot;NO&amp;quot; clipsSubviews=&amp;quot;YES&amp;quot; userInteractionEnabled=&amp;quot;NO&amp;quot; contentMode=&amp;quot;left&amp;quot; text=&amp;quot;Label&amp;quot; lineBre
+                                &amp;lt;rect key=&amp;quot;frame&amp;quot; x=&amp;quot;139&amp;quot; y=&amp;quot;20&amp;quot; width=&amp;quot;42&amp;quot; height=&amp;quot;21&amp;quot;/&amp;gt;
+                                &amp;lt;autoresizingMask key=&amp;quot;autoresizingMask&amp;quot; flexibleMaxX=&amp;quot;YES&amp;quot; flexibleMaxY=&amp;quot;YES&amp;quot;/&amp;gt;
+                                &amp;lt;fontDescription key=&amp;quot;fontDescription&amp;quot; type=&amp;quot;system&amp;quot; pointSize=&amp;quot;17&amp;quot;/&amp;gt;
+                                &amp;lt;color key=&amp;quot;textColor&amp;quot; cocoaTouchSystemColor=&amp;quot;darkTextColor&amp;quot;/&amp;gt;
+                                &amp;lt;nil key=&amp;quot;highlightedColor&amp;quot;/&amp;gt;
+                            &amp;lt;/label&amp;gt;
+                        &amp;lt;/subviews&amp;gt;
                         &amp;lt;color key=&amp;quot;backgroundColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;custom&amp;quot; customColorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;
                     &amp;lt;/view&amp;gt;
                 &amp;lt;/viewController&amp;gt;
             &amp;lt;/objects&amp;gt;
         &amp;lt;/scene&amp;gt;
     &amp;lt;/scenes&amp;gt;
+    &amp;lt;classes&amp;gt;
+        &amp;lt;class className=&amp;quot;ViewController&amp;quot; superclassName=&amp;quot;UIViewController&amp;quot;&amp;gt;
+            &amp;lt;source key=&amp;quot;sourceIdentifier&amp;quot; type=&amp;quot;project&amp;quot; relativePath=&amp;quot;./Classes/ViewController.h&amp;quot;/&amp;gt;
+        &amp;lt;/class&amp;gt;
+    &amp;lt;/classes&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;做了2件事：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;在subviews里增加了label，设置了相关属性。&lt;/li&gt;
&lt;li&gt;在document下，scenes后增加了classes元素，关联到了ViewController.h文件，来做以后的事件处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;outlet&quot;&gt;
&lt;h2&gt;设置Outlet关联&lt;/h2&gt;
&lt;p&gt;修改了如下3个文件：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt;       modified:   ViewController.h
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt;       modified:   ViewController.m
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt;       modified:   en.lproj/MainStoryboard.storyboard
&lt;/pre&gt;
&lt;p&gt;先看Storyboard&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;--- a/first/en.lproj/MainStoryboard.storyboard
+++ b/first/en.lproj/MainStoryboard.storyboard
&amp;#64;&amp;#64; -23,6 +23,9 &amp;#64;&amp;#64;
                         &amp;lt;/subviews&amp;gt;
                         &amp;lt;color key=&amp;quot;backgroundColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;custom&amp;quot; customColorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;
                     &amp;lt;/view&amp;gt;
+                    &amp;lt;connections&amp;gt;
+                        &amp;lt;outlet property=&amp;quot;statusLabel&amp;quot; destination=&amp;quot;qCc-nf-TgC&amp;quot; id=&amp;quot;b2g-zn-NAy&amp;quot;/&amp;gt;
+                    &amp;lt;/connections&amp;gt;
                 &amp;lt;/viewController&amp;gt;
             &amp;lt;/objects&amp;gt;
         &amp;lt;/scene&amp;gt;
&amp;#64;&amp;#64; -30,6 +33,9 &amp;#64;&amp;#64;
     &amp;lt;classes&amp;gt;
         &amp;lt;class className=&amp;quot;ViewController&amp;quot; superclassName=&amp;quot;UIViewController&amp;quot;&amp;gt;
             &amp;lt;source key=&amp;quot;sourceIdentifier&amp;quot; type=&amp;quot;project&amp;quot; relativePath=&amp;quot;./Classes/ViewController.h&amp;quot;/&amp;gt;
+            &amp;lt;relationships&amp;gt;
+                &amp;lt;relationship kind=&amp;quot;outlet&amp;quot; name=&amp;quot;statusLabel&amp;quot; candidateClass=&amp;quot;UILabel&amp;quot;/&amp;gt;
+            &amp;lt;/relationships&amp;gt;
         &amp;lt;/class&amp;gt;
     &amp;lt;/classes&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;也做了2件事：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;增加connections元素，设置outlet关联到前面的label：outlet.destination == label.id&lt;/li&gt;
&lt;li&gt;增加relationships元素，添加子节点relationship，kind为outlet。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再看ViewController.h。增加了一行：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;UILabel&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;statusLabel&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;在ViewController类中对应增加statusLabel数据成员。&lt;/p&gt;
&lt;p&gt;ViewController.m中增加了2行：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;operator&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;ViewController&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;m&lt;/span&gt;
&lt;span class=&quot;operator&quot;&gt;+++&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;ViewController&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;m&lt;/span&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#64;&amp;#64;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#64;&amp;#64;&lt;/span&gt;
 &lt;span class=&quot;comment preproc&quot;&gt;#import &amp;quot;ViewController.h&amp;quot;
&lt;/span&gt;
 &lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;ViewController&lt;/span&gt;
&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;synthesize&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;statusLabel&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword type&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;didReceiveMemoryWarning&lt;/span&gt;
 &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#64;&amp;#64;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#64;&amp;#64;&lt;/span&gt;

 &lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword type&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;viewDidUnload&lt;/span&gt;
 &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;setStatusLabel&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
     &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;viewDidUnload&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
     &lt;span class=&quot;comment single&quot;&gt;// Release any retained subviews of the main view.
&lt;/span&gt;     &lt;span class=&quot;comment single&quot;&gt;// e.g. self.myOutlet = nil;
&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;增加的&amp;#64;synthesize行表示自动增加对应数据成员的get和set成员函数。&lt;/p&gt;
&lt;p&gt;viewDidUnload是结束程序时的操作，这里将label的内存空间释放。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;button&quot;&gt;
&lt;h2&gt;添加button&lt;/h2&gt;
&lt;p&gt;添加button后，Storyboard中在subviews下增加了button元素。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;                            &amp;lt;/label&amp;gt;
+                            &amp;lt;button opaque=&amp;quot;NO&amp;quot; contentMode=&amp;quot;scaleToFill&amp;quot; contentHorizontalAlignment=&amp;quot;center&amp;quot; contentVerticalAlignment
+                                &amp;lt;rect key=&amp;quot;frame&amp;quot; x=&amp;quot;26&amp;quot; y=&amp;quot;13&amp;quot; width=&amp;quot;72&amp;quot; height=&amp;quot;37&amp;quot;/&amp;gt;
+                                &amp;lt;autoresizingMask key=&amp;quot;autoresizingMask&amp;quot; flexibleMaxX=&amp;quot;YES&amp;quot; flexibleMaxY=&amp;quot;YES&amp;quot;/&amp;gt;
+                                &amp;lt;fontDescription key=&amp;quot;fontDescription&amp;quot; type=&amp;quot;boldSystem&amp;quot; pointSize=&amp;quot;15&amp;quot;/&amp;gt;
+                                &amp;lt;state key=&amp;quot;normal&amp;quot;&amp;gt;
+                                    &amp;lt;color key=&amp;quot;titleColor&amp;quot; red=&amp;quot;0.19607843459999999&amp;quot; green=&amp;quot;0.30980393290000002&amp;quot; blue=&amp;quot;0.521568656000
+                                    &amp;lt;color key=&amp;quot;titleShadowColor&amp;quot; white=&amp;quot;0.5&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;
+                                &amp;lt;/state&amp;gt;
+                                &amp;lt;state key=&amp;quot;highlighted&amp;quot;&amp;gt;
+                                    &amp;lt;color key=&amp;quot;titleColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;
+                                &amp;lt;/state&amp;gt;
+                            &amp;lt;/button&amp;gt;
                         &amp;lt;/subviews&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;action&quot;&gt;
&lt;h2&gt;action关联&lt;/h2&gt;
&lt;p&gt;设置action关联后，ViewController类中添加了事件方法和具体实现。&lt;/p&gt;
&lt;p&gt;Storyboard中，button元素下增加了connections元素。relationships节点下增加子节点relationship，kind为action。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;                             &amp;lt;state key=&amp;quot;highlighted&amp;quot;&amp;gt;
                                 &amp;lt;color key=&amp;quot;titleColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;
                             &amp;lt;/state&amp;gt;
+                                &amp;lt;connections&amp;gt;
+                                    &amp;lt;action selector=&amp;quot;greeting:&amp;quot; destination=&amp;quot;2&amp;quot; eventType=&amp;quot;touchUpInside&amp;quot; id=&amp;quot;Ua1-dU-BsV&amp;quot;/&amp;gt;
+                                &amp;lt;/connections&amp;gt;
                             &amp;lt;/button&amp;gt;
                         &amp;lt;/subviews&amp;gt;
                         &amp;lt;color key=&amp;quot;backgroundColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;custom&amp;quot; customColorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;
&amp;#64;&amp;#64; -46,6 +49,7 &amp;#64;&amp;#64;
         &amp;lt;class className=&amp;quot;ViewController&amp;quot; superclassName=&amp;quot;UIViewController&amp;quot;&amp;gt;
             &amp;lt;source key=&amp;quot;sourceIdentifier&amp;quot; type=&amp;quot;project&amp;quot; relativePath=&amp;quot;./Classes/ViewController.h&amp;quot;/&amp;gt;
             &amp;lt;relationships&amp;gt;
+                &amp;lt;relationship kind=&amp;quot;action&amp;quot; name=&amp;quot;greeting:&amp;quot;/&amp;gt;
                 &amp;lt;relationship kind=&amp;quot;outlet&amp;quot; name=&amp;quot;statusLabel&amp;quot; candidateClass=&amp;quot;UILabel&amp;quot;/&amp;gt;
             &amp;lt;/relationships&amp;gt;
         &amp;lt;/class&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;AppDelegate.h&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;comment preproc&quot;&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;BIDAppDelegate&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;UIResponder&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UIApplicationDelegate&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;AppDelegate.m&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;application:didFinishLaunchingWithOptions&lt;/p&gt;
&lt;p&gt;这是一个多重参数函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;applicationWillResignActive&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;表格使用&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;拖入表格，选中并关联到下面的 View Controller，关联上dataSource和Delegate。&lt;/li&gt;
&lt;li&gt;ViewController.h中类要实现UITableViewDataSource和UITableViewDelegate。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;MasterViewController&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;UITableViewController&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UITableViewDelegate&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;UITableViewDataSource&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;NSArray&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;listData&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;ViewController.m中增加如下函数：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;synthesize&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;listData&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;NSInteger&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UITableView&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;numberOfRowsInSection&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;NSInteger&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listData&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UITableViewCell&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;tableView&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UITableView&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;cellForRowAtIndexPath&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;NSIndexPath&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;indexPath&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;SimpleTableIdentifier&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#64;&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;SimpleTableIndentifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;name&quot;&gt;UITableViewCell&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;cell&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;tableView&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;dequeueReusableCellWithIdentifier&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;SimpleTableIdentifier&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;cell&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;cell&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UITableViewCell&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;initWithStyle&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;UITableViewCellStyleDefault&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;reuseIdentifier&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;SimpleTableIdentifier&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;name&quot;&gt;NSUInteger&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;indexPath&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;textLabel&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;listData&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;objectAtIndex&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;cell&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;多视图控制&lt;/h2&gt;
&lt;p&gt;注意segue的使用，一定要聚焦到特定的控件上，比如button，而不是它的父控件，否则无效。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.raywenderlich.com/5138/beginning-storyboards-in-ios-5-part-1&quot;&gt;http://www.raywenderlich.com/5138/beginning-storyboards-in-ios-5-part-1&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>iDevice保修查询</title>
   <link href="/2012/03/14/idevice.html"/>
   <updated>2012-03-14T00:00:00+08:00</updated>
   <id>h/2012/03/14/idevice</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;最近开始学习iOS开发，参照“果粉保修查询”做了一个。&lt;/p&gt;
&lt;p&gt;果粉保修查询自从被Apple官方封禁以后就没见有更新了，在wifi下会闪退。&lt;/p&gt;
&lt;p&gt;这个程序刚有雏形，还不完善，本着TDD的思想，在此放出，希望大家多提意见。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a class=&quot;reference external&quot; href=&quot;http://code.google.com/p/amoblin/downloads/list&quot;&gt;http://code.google.com/p/amoblin/downloads/list&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>jekyll restructuredText配置</title>
   <link href="/2012/03/13/jekyll-rst-config.html"/>
   <updated>2012-03-13T00:00:00+08:00</updated>
   <id>h/2012/03/13/jekyll-rst-config</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;jekyll很好用，可惜默认是用markdown的，而我习惯了restructuredText，幸好jekyll支持插件，而刚好有这么一个插件。&lt;/p&gt;
&lt;p&gt;jekyll-rst项目：&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/xdissent/jekyll-rst&quot;&gt;https://github.com/xdissent/jekyll-rst&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装jekyll-rst插件到jekyll（官方说明)：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; &amp;lt;jekyll-project-path&amp;gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git submodule add https://github.com/xdissent/jekyll-rst.git plugins/jekyll-rst
&lt;/pre&gt;
&lt;p&gt;安装RbST：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; gem install RbST
&lt;/pre&gt;
&lt;p&gt;然后把rst文件放到_posts目录下，使用jekyll编译时就会把rst也转换成html了，文件名的格式和md文件名一样。&lt;/p&gt;
&lt;p&gt;但发现一个问题，rst文件中有中文的话，生成html文件为空。没有中文的话就正常。初步判断是编码的问题。&lt;/p&gt;
&lt;p&gt;看了看jekyll-rst的代码，发现jekyll-rst后台使用的是RbST，一个ruby包装的restructuredText转换程序，本质上还是使用自带的rst2html.py来转换。&lt;/p&gt;
&lt;p&gt;单独使用RbST自带的rst2html.py转换，也没问题，奇怪！&lt;/p&gt;
&lt;p&gt;再去RbST的给i他湖边主页转悠，看看Issue里有木有人遇到这种情况，可怜的2个Issue呀。第1个看着像，按照所说的，在transform.py中的 import sys 下面增加两句：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name builtin&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;setdefaultencoding&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;用来重置python的编码方式为utf8，再执行jekyll，果然好了。&lt;/p&gt;
&lt;p&gt;现在找到解决方法了，但不优雅。&lt;/p&gt;
&lt;p&gt;这不是RbST的问题，而是python设置的问题。&lt;/p&gt;
&lt;p&gt;查看pyhton的默认编码：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; python -c &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;import sys;print sys.getdefaultencoding()&amp;quot;&lt;/span&gt;
&lt;span class=&quot;generic output&quot;&gt;ascii&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;果然不是utf8！这下好了，只要设置pyhton默认编码就行了。&lt;/p&gt;
&lt;p&gt;可以在site-packages下创建一个文件sitecustomize.py，这个文件会在pyhton启动时加载。把上面的python脚本内容放入这个文件，搞定！&lt;/p&gt;
&lt;p&gt;此文是使用jekyll-rst写的第一篇文章。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>jekyll</title>
   <link href="/2012/03/13/jekyll-config.html"/>
   <updated>2012-03-13T00:00:00+08:00</updated>
   <id>h/2012/03/13/jekyll-config</id>
   <content type="html">&lt;!-- publish: YES --&gt;
&lt;p&gt;从GAE的micor-blog到SAE的WP，我以为找到了最终的站点，但jekyll来了，我又开始了迁徙。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;安装jekyll&lt;/h2&gt;
&lt;p&gt;jekyll是用ruby开发的，首先需要安装ruby，安装ruby，最好用版本管理，其中之一是rvm。所以我们先安装rvm，然后，通过rvm安装ruby，然后安装jekyll这个gem包。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;rvm&quot;&gt;
&lt;h3&gt;安装rvm&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; bash -s stable &amp;lt; &amp;lt;&lt;span class=&quot;operator&quot;&gt;(&lt;/span&gt;curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer&lt;span class=&quot;operator&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; . &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; # Load RVM function'&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;source&lt;/span&gt; ~/.bash_profile
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;ruby&quot;&gt;
&lt;h3&gt;安装ruby&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; rvm install 1.9.3
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; rvm use 1.9.3
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;gemjekyll&quot;&gt;
&lt;h3&gt;通过gem安装jekyll&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; gem install jekyll
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;部署jekyll&lt;/h2&gt;
&lt;p&gt;现在算是安装好了jekyll“编译器”，可以用来编译markdown文件，生成html文件。jekyll的要求结构部署如下：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ls -F
&lt;span class=&quot;generic output&quot;&gt;_config.yml  _includes/   _layouts/    _posts/      _site/&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;jekyllbootstrap来快速创建：&lt;a class=&quot;reference external&quot; href=&quot;http://jekyllbootstrap.com/&quot;&gt;http://jekyllbootstrap.com/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;octopress&quot;&gt;
&lt;h2&gt;安装Octopress&lt;/h2&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git clone https://github.com/imathis/octopress.git octopress
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; bundle install
&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>花瓣网抓取图片脚本</title>
   <link href="/2012/03/02/huaban-script.html"/>
   <updated>2012-03-02T00:00:00+08:00</updated>
   <id>h/2012/03/02/huaban-script</id>
   <content type="html">&lt;!-- id: 18 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;最早关注的不是花瓣网，是topit.me，这个网站不错，格调很高雅。&lt;/p&gt;
&lt;p&gt;后来听说了Pinterest，然后是国内的花瓣网。花瓣网上主题，分类比较明确，看了页面，
组织也整齐，于是写了个花瓣网的图片抓取脚本。&lt;/p&gt;
&lt;p&gt;其中有一个小问题，就是抓取的专辑beauty页面中，由于它是下拉刷新加载页面的，使用
urlretrieve不能下载下来，只能借助外部的curl了。有高手能解决的，还请不吝赐教。&lt;/p&gt;
&lt;p&gt;代码下载地址: &lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/1956744&quot;&gt;https://gist.github.com/1956744&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;内容不多，直接贴下：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf8 -*-&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# author: amoblin &amp;lt;amoblin&amp;#64;163.com&amp;gt;&lt;/span&gt;

&lt;span class=&quot;keyword namespace&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;urllib&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;beauty_url&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;http://huaban.com/favorite/beauty/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;pin_re&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'&amp;lt;a href=&amp;quot;/pins/(.+?)/&amp;quot;'&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;get_img_url&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;pin_url&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;http://huaban.com/pins/&lt;/span&gt;&lt;span class=&quot;literal string interpol&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;pin&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;img_url_re&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'&amp;lt;img alt=&amp;quot;采集图片&amp;quot; src=&amp;quot;(.+?)&amp;quot;'&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;pg&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;pin_url&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;pg&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;pg&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;img_url&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;img_url_re&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;img_url&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;local_path&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;./huaban&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;local_path&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;local_path&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;name&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;local_path&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;e&lt;/span&gt;
            &lt;span class=&quot;name&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;pin images will saved to: &lt;/span&gt;&lt;span class=&quot;literal string interpol&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;local_path&lt;/span&gt;

    &lt;span class=&quot;name&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;curl -s &lt;/span&gt;&lt;span class=&quot;literal string interpol&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt; -o /tmp/huaban.html&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;beauty_url&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;/tmp/huaban.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;name&quot;&gt;pins&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;pin_re&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:]&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;pin&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;pins&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;img_url&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;get_img_url&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;saving pin: &lt;/span&gt;&lt;span class=&quot;literal string interpol&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;pin&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;urlretrieve&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;img_url&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;literal string interpol&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;literal string interpol&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;.jpeg&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;local_path&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>ios开发学习</title>
   <link href="/2012/01/20/17_ios.html"/>
   <updated>2012-01-20T00:00:00+08:00</updated>
   <id>h/2012/01/20/17_ios</id>
   <content type="html">&lt;!-- id: 17 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;界面文件 后缀为.nib或.xib，4.2以后改为storyboard。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;真机开发&lt;/h2&gt;
&lt;p&gt;钥匙串访问(keychain)中创建证书，用于程序签名:&lt;/p&gt;
&lt;p&gt;钥匙串访问-&amp;gt; 证书助理 -&amp;gt; 创建证书：&lt;/p&gt;
&lt;p&gt;名称：iPhone Developer
证书类型：代码签名&lt;/p&gt;
&lt;p&gt;修改Xcode下SDK配置：&lt;/p&gt;
&lt;p&gt;XCode4.5中路径为&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; open iPhoneOS6.0.sdk/SDKSettings.plist
&lt;/pre&gt;
&lt;p&gt;文件不再是xml文件，而是二进制文件了，使用Xcode或Plist Editor Pro编辑，将DefaultProperties中CODE_SIGNING_REQUIRED值改为NO。&lt;/p&gt;
&lt;p&gt;XCode4.3以后Xcode作为独立应用程序，所有的文件都打包在Xcode里面，之前/Developer下的文件现在变为/Applications/Xcode.app/Contents/Developer/。&lt;/p&gt;
&lt;p&gt;Xcode4.3中为：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo vi iPhoneOS5.0.sdk/SDKSettings.plist
&lt;/pre&gt;
&lt;p&gt;Xcode4.2及其以前的版本中：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo vi iPhoneOS5.0.sdk/SDKSettings.plist
&lt;/pre&gt;
&lt;p&gt;将如下内容：&lt;/p&gt;
&lt;pre class=&quot;code text literal-block&quot;&gt;
15         &amp;lt;key&amp;gt;CODE_SIGNING_REQUIRED&amp;lt;/key&amp;gt;
16         &amp;lt;string&amp;gt;YES&amp;lt;/string&amp;gt;
&lt;/pre&gt;
&lt;p&gt;中YES改为NO。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/
&lt;/pre&gt;
&lt;p&gt;将XCiPhoneOSCodeSignContext中的iPhoneOS删掉：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo vi Info.plist
&lt;span class=&quot;generic output&quot;&gt;:1,$s/XCiPhoneOSCodeSignContext/XCCodeSignContext/g&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;二进制补丁&lt;/h3&gt;
&lt;p&gt;XCode4.3中路径为：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/PrivatePlugIns/iPhoneOS&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Build&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;System&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Support.xcplugin/Contents/MacOS
&lt;/pre&gt;
&lt;p&gt;XCode 4.2中路径为：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/PrivatePlugIns/iPhoneOS&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Build&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;System&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Support.xcplugin/Contents/MacOS
&lt;/pre&gt;
&lt;p&gt;然后：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo su
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; dd &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;iPhoneOS&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Build&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;System&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Support &lt;span class=&quot;name variable&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;working &lt;span class=&quot;name variable&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;500 &lt;span class=&quot;name variable&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;255
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;echo&lt;/span&gt; -n xc3x26x00x00 &amp;gt;&amp;gt; working
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; chmod 755 working
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; mv iPhoneOS&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Build&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;System&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Support iPhoneOS&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Build&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;System&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Support.orig
&lt;span class=&quot;generic prompt&quot;&gt;#&lt;/span&gt; mv working iPhoneOS&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Build&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;System&lt;span class=&quot;literal string escape&quot;&gt;\ &lt;/span&gt;Support
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;自定义生成后脚本&lt;/h3&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; mkdir /Applications/Xcode.app/Contents/Developer/iphoneentitlements
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;cd&lt;/span&gt; /Applications/Xcode.app/Contents/Developer/iphoneentitlements
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; wget -q http://www.alexwhittemore.com/iphone/gen_entitlements.txt -O gen_entitlements.py
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; chmod 755 gen_entitlements.py
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;修改工程设置&lt;/h3&gt;
&lt;p&gt;Add Build Phrase -&amp;gt; Add Run Script，输入以下内容：&lt;/p&gt;
&lt;pre class=&quot;code bash literal-block&quot;&gt;
&lt;span class=&quot;name builtin&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;name variable&quot;&gt;CODESIGN_ALLOCATE&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/codesign_allocate
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;${PLATFORM_NAME}&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;iphoneos&amp;quot;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;
/Applications/Xcode.app/Contents/Developer/iphoneentitlements/gen_entitlements.py &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;my.company.${PROJECT_NAME}&amp;quot;&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${PROJECT_NAME}.xcent&amp;quot;&lt;/span&gt;;
codesign -f -s &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;iPhone Developer&amp;quot;&lt;/span&gt; --entitlements &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${PROJECT_NAME}.xcent&amp;quot;&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class=&quot;reference external&quot; href=&quot;http://hi.baidu.com/jaywclove/blog/item/0782355562849cdab645ae14.html&quot;&gt;http://hi.baidu.com/jaywclove/blog/item/0782355562849cdab645ae14.html&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://slj.me/2010/10/50-open-source-iphone-apps-for-iphone-developers/&quot;&gt;http://slj.me/2010/10/50-open-source-iphone-apps-for-iphone-developers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/haqu/tweejump.git&quot;&gt;https://github.com/haqu/tweejump.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/freshbooks-addons/freshbooks-iphone-project.git&quot;&gt;https://github.com/freshbooks-addons/freshbooks-iphone-project.git&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>bash + screen + vim 配置</title>
   <link href="/2011/12/23/bash%2Bscreen%2Bvim-conf.html"/>
   <updated>2011-12-23T00:00:00+08:00</updated>
   <id>h/2011/12/23/bash+screen+vim-conf</id>
   <content type="html">&lt;!-- id: 16 --&gt;
&lt;!-- Author: amoblin --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;screen默认主键是C-a，这个很不方便，C-a在emacs风格的bash下是到行首，而在vim中是增1。&lt;/p&gt;
&lt;p&gt;最好改为其他键。由于screen的快捷键大多在键盘左半区域，所以最好也在左边。&lt;/p&gt;
&lt;p&gt;C-q, C-s 终端占用，不能使用。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;bashemacs&quot;&gt;
&lt;h2&gt;bash的emacs风格快捷键（部分）&lt;/h2&gt;
&lt;p&gt;C-w 清空输入
C-e 行尾
C-r 历史搜索
C-t 交换字母
C-a 行首
C-f 右移
C-z 暂停
C-c 结束
C-p 上一条命令
C-n 下一条命令&lt;/p&gt;
&lt;p&gt;可以选择的：C-t, C-x, C-v&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;vim&quot;&gt;
&lt;h2&gt;vim普通模式键盘绑定&lt;/h2&gt;
&lt;p&gt;C-w 切换窗口
C-e 上升1行
C-r redo
C-t pop标签栈
C-a 增1
C-d 下半页
C-f 下一页
C-x 减1
C-v 块操作&lt;/p&gt;
&lt;p&gt;可以选择的：C-s, C-x, C-c&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;结论&lt;/h2&gt;
&lt;p&gt;取交集得： C-x&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;mac&quot;&gt;
&lt;h2&gt;Mac下使用&lt;/h2&gt;
&lt;p&gt;由于mac下只有左边有Control，所以需要选择一个右边的按键。&lt;/p&gt;
&lt;p&gt;vim中：&lt;/p&gt;
&lt;p&gt;C-p 上一个文件
C-n 下一个文件
C-b 上一页
C-o 还没搞清楚
C-u 上半页
C-[ 不能用，否则vim中无法使用escape键。
C-] ctags中定位tag。&lt;/p&gt;
&lt;p&gt;bash中：
C-l 清屏
C-m 不能用，否则bash中无法回车。
C-k&lt;/p&gt;
&lt;p&gt;综上，选择使用C-，在screen中配置为：&lt;/p&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: WARNING/2 (&lt;tt class=&quot;docutils&quot;&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 75)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. No Pygments lexer found for &amp;quot;screen&amp;quot;.&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. code-block:: screen

    escape ^\\

&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;有时需要在screen中用ssh登陆服务器，然后再开一个screen，这时要另外选择一个eacape键。&lt;/p&gt;
&lt;p&gt;由于在第二个screen中比较少用ctags，所以综合考虑，选择C-]。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://houbolin.cn/blog/2009/12/03/linux-%E4%B8%8Bscreen%E5%91%BD%E4%BB%A4/&quot;&gt;http://houbolin.cn/blog/2009/12/03/linux-%E4%B8%8Bscreen%E5%91%BD%E4%BB%A4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://wiki.archlinux.org/index.php/GNU_Screen&quot;&gt;https://wiki.archlinux.org/index.php/GNU_Screen&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>vim技巧</title>
   <link href="/2011/12/15/vim-note.html"/>
   <updated>2011-12-15T00:00:00+08:00</updated>
   <id>h/2011/12/15/vim-note</id>
   <content type="html">&lt;!-- id: 14 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;保存一个只有root可以写的文件&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;:w !sudo tee %&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;键盘映射：&lt;/p&gt;
&lt;p&gt;编译选项：
--disable-gui     不编译Gvim
--enable-cscope     使用cscope
--enable-multibyte     多字节（支持中文）
--enable-gdb     支持gdb&lt;/p&gt;
&lt;p&gt;quickfix使用：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;:cc     显示详细错误信息&lt;/li&gt;
&lt;li&gt;:cp     跳到上一个错误&lt;/li&gt;
&lt;li&gt;:cn     跳到下一个错误&lt;/li&gt;
&lt;li&gt;:cw     打开quickfix窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;statusline配置：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;-     左对齐。默认右对齐&lt;/li&gt;
&lt;li&gt;m     是否修改的标记，修改的用[+]表示&lt;/li&gt;
&lt;li&gt;双引号时，转义，单引号不转义。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;好用不常用快捷键&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;zz  当前行居中&lt;/li&gt;
&lt;li&gt;zt  当前行置顶&lt;/li&gt;
&lt;li&gt;zb  当前行置底&lt;/li&gt;
&lt;li&gt;H   至屏幕顶行&lt;/li&gt;
&lt;li&gt;M   至屏幕中央&lt;/li&gt;
&lt;li&gt;L   至屏幕底行&lt;/li&gt;
&lt;li&gt;ma  标记当前位置为a&lt;/li&gt;
&lt;li&gt;’a  跳到a标记处&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除行尾空格  :1,$s/[ ]*$//g&lt;/p&gt;
&lt;p&gt;删除匹配行 :g/table/d&lt;/p&gt;
&lt;p&gt;插件：&lt;/p&gt;
&lt;p&gt;Tlist&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;查看光标处系统函数man手册：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;shift + k&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;2&quot;&gt;
&lt;li&gt;c代码折叠&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于如下风格的c代码：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;keyword type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;hello&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;you should never see this.&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;literal string char&quot;&gt;'a'&lt;/span&gt;:
            &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;hello&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;name label&quot;&gt;default:&lt;/span&gt;
            &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;hello&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;you should never see this.&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;折叠结果如下：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
 &lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;
 &lt;span class=&quot;literal number integer&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+---&lt;/span&gt;  &lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;行&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;---------------------------------------------------&lt;/span&gt;
 &lt;span class=&quot;literal number integer&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+---&lt;/span&gt;  &lt;span class=&quot;literal number integer&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;行&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;--------------------------------------------------&lt;/span&gt;
 &lt;span class=&quot;literal number integer&quot;&gt;8&lt;/span&gt;
 &lt;span class=&quot;literal number integer&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+---&lt;/span&gt;  &lt;span class=&quot;literal number integer&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;行&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;----------------------------------------------&lt;/span&gt;
&lt;span class=&quot;literal number integer&quot;&gt;17&lt;/span&gt;
&lt;span class=&quot;literal number integer&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;+---&lt;/span&gt;  &lt;span class=&quot;literal number integer&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;行&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;literal number integer&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;实现上述折叠的vim配置为：&lt;/p&gt;
&lt;pre class=&quot;code vim literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; MyFoldfun&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;lineNum&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'^{'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'a1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'^}'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'s1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'.\+}.\+{'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'s1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'.\+}.\+{'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'a1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'.\+}'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'s1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'.\+{'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'a1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;' \+case '&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'a1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;' \+case '&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'s1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;elseif&lt;/span&gt; getline&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;:lineNum&lt;span class=&quot;punctuation&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)=~&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;' \+default:'&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'s1'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'='&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;endfunction&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;foldexpr&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;=&lt;/span&gt;MyFoldfun&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;v&lt;/span&gt;:lnum&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;其中函数为设置缩进，最后一行设置折叠表达式为上述函数。&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Linux C多线程学习</title>
   <link href="/2011/12/15/thread-note.html"/>
   <updated>2011-12-15T00:00:00+08:00</updated>
   <id>h/2011/12/15/thread-note</id>
   <content type="html">&lt;!-- id: 15 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;linux c多线程库函数的头文件为pthread.h，链接库参数为-lpthread。&lt;/p&gt;
&lt;p&gt;线程创建函数：pthread_create，通过这个函数调用其他函数作为一个线程，被调函数的参数也在pthread_create中给出。注意这里只能有一个参数。如果被调函数多参的话，需要使用其他方法实现，比如封装成一个结构体参数，或者将参数设置为全局变量。&lt;/p&gt;
&lt;p&gt;线程互斥(mutex)&lt;/p&gt;
&lt;p&gt;互斥量(MUTual Exclusion)是线程同步的一种方法。一般用法如下：&lt;/p&gt;
&lt;p&gt;首先定义互斥信号量，并初始化：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;pthread_mutex_t&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;count_mutex&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;PTHREAD_MUTEX_INITIALIZER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;pthread_mutex_init&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;count_mutex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;在线程函数中加锁和解锁：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;pthread_mutex_lock&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;count_mutex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;punctuation&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;pthread_mutex_unlock&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;count_mutex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这样中间的处理就是原子的。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>memcached学习笔记</title>
   <link href="/2011/12/06/memcached-note.html"/>
   <updated>2011-12-06T00:00:00+08:00</updated>
   <id>h/2011/12/06/memcached-note</id>
   <content type="html">&lt;!-- id: 12 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;ubuntu下安装：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo apt-get install memcached
&lt;/pre&gt;
&lt;p&gt;启动：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; memcached -d
&lt;/pre&gt;
&lt;p&gt;默认端口号为11211，可以通过ps查看：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; ps -ef|grep memcached
&lt;/pre&gt;
&lt;div class=&quot;section&quot; id=&quot;telnet&quot;&gt;
&lt;h2&gt;使用Telnet测试：&lt;/h2&gt;
&lt;p&gt;查看状态：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; telnet localhost 11211
&lt;span class=&quot;generic output&quot;&gt;Trying ::1...
Connected to shiroh-laptop.
Escape character is '^]'.
stats
STAT pid 2768
STAT uptime 4614
STAT time 1323677670
STAT version 1.4.7
STAT libevent 2.0.12-stable
...
STAT total_items 9
STAT evictions 0
STAT reclaimed 0
END&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;set操作(继续上面的telnet操作）：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;set name 0 0 7
amoblin
STORED
set gender 0 0 1
1
STORED&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;get操作：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic output&quot;&gt;get name
VALUE name 0 7
amoblin
END
get gender
VALUE gender 0 1
1
END&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h3&gt;测试工具&lt;/h3&gt;
&lt;p&gt;自带memslap：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo apt-get install libmemcached-tools
&lt;span class=&quot;generic output&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; memslap
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Google Code Git不能clone的解决</title>
   <link href="/2011/12/06/google-code-git.html"/>
   <updated>2011-12-06T00:00:00+08:00</updated>
   <id>h/2011/12/06/google-code-git</id>
   <content type="html">&lt;!-- id: 11 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;最近Google Code开始支持Git了，赞一个！&lt;/p&gt;
&lt;p&gt;但使用git clone项目时却出现了下面的错误：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; git clone https://code.google.com/p/leveldb/
&lt;span class=&quot;generic output&quot;&gt;Cloning into leveldb...
error: SSL: certificate subject name (climb) does not match target host name 'code.google.com' while accessing https://code.google.com/p/leveldb/info/refs

fatal: HTTP request failed&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;尝试添加网站证书到/etc/ssl/certs/ca-certificates.crt还是不行。&lt;/p&gt;
&lt;p&gt;后来终于发现解决办法：禁用Git的SSL验证。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;name variable&quot;&gt;GIT_SSL_NO_VERIFY&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;1
&lt;/pre&gt;
&lt;p&gt;解决！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>使用vim发布wordpress博客</title>
   <link href="/2011/12/04/04_vim-wordpress_config.html"/>
   <updated>2011-12-04T00:00:00+08:00</updated>
   <id>h/2011/12/04/04_vim-wordpress_config</id>
   <content type="html">&lt;!-- id: 4 --&gt;
&lt;!-- tags: --&gt;
&lt;!-- publish: YES --&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;使用vim编写reST文档&lt;/li&gt;
&lt;li&gt;使用rst2html.py将reST文档转换为HTML文档&lt;/li&gt;
&lt;li&gt;使用wordpress的XML-RPC接口发布博客&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;rest&quot;&gt;
&lt;h2&gt;reST语法&lt;/h2&gt;
&lt;p&gt;要做到第一步，需要学习reST语法。这个很简单，我常用到的就2个，并且1个还不算reST的～&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h3&gt;语法1：标题。&lt;/h3&gt;
&lt;pre class=&quot;code rest literal-block&quot;&gt;
&lt;span class=&quot;generic heading&quot;&gt;========================&lt;/span&gt;
&lt;span class=&quot;generic heading&quot;&gt;使用vim发布wordpress博客&lt;/span&gt;
&lt;span class=&quot;generic heading&quot;&gt;========================&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;上下使用相同符号围起来即可。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;语法2：章节及层次&lt;/h3&gt;
&lt;p&gt;章节标题下面用同一个符号重复排序，不要短于标题内容。&lt;/p&gt;
&lt;p&gt;章节之间的层次关系通过符号体现，如果是新符号，那么递进一层，否则和之前符号层次相同。&lt;/p&gt;
&lt;p&gt;从标题符号开始。&lt;/p&gt;
&lt;p&gt;如下：&lt;/p&gt;
&lt;pre class=&quot;code rest literal-block&quot;&gt;
&lt;span class=&quot;generic heading&quot;&gt;reST语法&lt;/span&gt;
&lt;span class=&quot;generic heading&quot;&gt;=========&lt;/span&gt;

&lt;span class=&quot;generic heading&quot;&gt;语法1：标题。&lt;/span&gt;
&lt;span class=&quot;generic heading&quot;&gt;-------------&lt;/span&gt;

&lt;span class=&quot;generic heading&quot;&gt;语法2：章节及层次&lt;/span&gt;
&lt;span class=&quot;generic heading&quot;&gt;-----------------&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这样第一行就是一级标题，第四行和第六行平行，都是二级标题。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;语法3：换行&lt;/h3&gt;
&lt;p&gt;空行即换行。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;语法4：代码&lt;/h3&gt;
&lt;p&gt;先看一个代码：&lt;/p&gt;
&lt;pre class=&quot;code c literal-block&quot;&gt;
&lt;span class=&quot;comment preproc&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;实现上述效果的reST代码为：&lt;/p&gt;
&lt;pre class=&quot;code rest literal-block&quot;&gt;
&lt;span class=&quot;punctuation&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;c&lt;/span&gt;

&lt;span class=&quot;comment preproc&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;comment preproc&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;keyword type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;我常用的就这2个。其他像列表呀什么的，需要再研究。反正一篇码文并茂的博客，学会这4点就OK了～&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;html&quot;&gt;
&lt;h2&gt;生成HTML&lt;/h2&gt;
&lt;p&gt;由reST文档生成HTML的命令是rst2html.py，这个由Docutils软件包提供。&lt;/p&gt;
&lt;p&gt;Ubuntu/Debian下安装如下：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo apt-get install python-docutils
&lt;/pre&gt;
&lt;p&gt;安装了python的任何系统下，可以通过easy_install安装，但前提是安装了setuptools：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo easy_install docutils
&lt;/pre&gt;
&lt;p&gt;现在就可以通过rst2html.py来生成html文档啦：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; rst2html.py blog.rst blog.html
&lt;/pre&gt;
&lt;!-- 但如果文档里有code-block语法的话，会报错。这是因为code-block不是reST提供的，而是由另一个叫做Pygments的软件包提供的： --&gt;
&lt;p&gt;使用pygments替代默认语法高亮设置&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;docutils&quot;&gt;
&lt;h2&gt;Docutils语法高亮配置&lt;/h2&gt;
&lt;p&gt;Pygments是一个语法高亮的软件，能够将程序源代码生成彩色的HTML文件。&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo apt-get install python-pygments
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo easy_install pygments
&lt;/pre&gt;
&lt;p&gt;请对号入座，执行安装。具体用法请--help。&lt;/p&gt;
&lt;p&gt;这里说说在Docutils中的配置。&lt;/p&gt;
&lt;p&gt;Docutils中的reST不支持语法高亮，但提供了directive扩展，通过注册来自定义处理过程。在reST中自定义的关键字格式如下：&lt;/p&gt;
&lt;pre class=&quot;code text literal-block&quot;&gt;
.. keyword::
&lt;/pre&gt;
&lt;!-- Pygments在directive中举例时用的关键字是sourcecode，但sphinx，rst2pdf等项目都使用code-block作为关键字，amoblin一开始使用sourceocde，后来由于开始使用sphinx和rst2pdf，于是都改用code-block了。 --&gt;
&lt;p&gt;Pygments在directive中举例时用的关键字是sourcecode，但sphinx，rst2pdf等项目都使用code作为关键字，amoblin一开始使用sourceocde，后来由于开始使用sphinx和rst2pdf，于是都改用code-block了，现在都统一改为code了。&lt;/p&gt;
&lt;p&gt;首先下载rst的directive处理文件：&lt;/p&gt;
&lt;p&gt;然后复制到directives目录：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; sudo cp rst-directive.py &lt;span class=&quot;literal string backtick&quot;&gt;`&lt;/span&gt;python -c &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;import docutils; print docutils.__path__[0]&amp;quot;&lt;/span&gt;/parsers/rst/directives/rst_directive.py
&lt;/pre&gt;
&lt;p&gt;修改directives目录下__init__.py文件，从而注册code关键字：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;_directive_registry&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;literal string&quot;&gt;'code'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'rst_directive'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'Pygments'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;literal string&quot;&gt;'sourcecode'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'rst_directive'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'Pygments'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;literal string&quot;&gt;'code-block'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'rst_directive'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'Pygments'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;literal string&quot;&gt;'attention'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string&quot;&gt;'admonitions'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string&quot;&gt;'Attention'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;注意这里的第二行是我们添加的注册行，&lt;/p&gt;
&lt;!-- 这里使用sphinx风格的关键字code。 --&gt;
&lt;p&gt;到此为止，可以顺利生成彩色代码了。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;css&quot;&gt;
&lt;h3&gt;使用内嵌css&lt;/h3&gt;
&lt;p&gt;一般情况下，彩色代码块应该是固定的，我希望能够保持其独立性。默认的彩色代码的css配置是单独一块显示的，修改rst_directive.py文件中42行：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;literal number integer&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Set to True if you want inline CSS styles instead of classes&lt;/span&gt;
&lt;span class=&quot;literal number integer&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;INLINESTYLES&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name builtin pseudo&quot;&gt;False&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;按照41行所说，改为True：&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;literal number integer&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;INLINESTYLES&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name builtin pseudo&quot;&gt;True&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;这样生成的就是inline的彩色代码啦。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;使用命令行发布博客&lt;/h2&gt;
&lt;p&gt;当确定了HTML内容可以发布以后，就要提交到wordpress了。这时最希望的就是立刻提交，其他一切都是多余。&lt;/p&gt;
&lt;p&gt;基于此，我在尝试了vimrepress一次以后，立刻放弃了。&lt;/p&gt;
&lt;p&gt;现在我要给大家隆重介绍的是blogpost.py！&lt;/p&gt;
&lt;p&gt;原作者是用asciidoc来写文档，然后用blogpost发布。&lt;/p&gt;
&lt;p&gt;但我们使用reST，这里就用不到blogpost自带的asciidoc接口了。但可以使用html格式发布：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; blogpost.py -d html -t &lt;span class=&quot;literal string double&quot;&gt;&amp;quot;vim wordpress配置&amp;quot;&lt;/span&gt; post blog.html
&lt;span class=&quot;generic output&quot;&gt;blogpost.py: updating published post 'vim wordpress配置'...
blogpost.py: id: 80
blogpost.py: url: http://amoblin.sinaapp.com/?p=80&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;上述信息告诉了本篇文章的id号，当修改了reST文档，生成新的post.html以后可以通过id号更新博客：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; wpc.py -d html --post-id 80 update blog.html
&lt;span class=&quot;generic output&quot;&gt;blogpost.py: updating published post 'vim wordpress配置'...
blogpost.py: id: 80
blogpost.py: url: http://amoblin.sinaapp.com/?p=80&lt;/span&gt;
&lt;/pre&gt;
&lt;!-- 3. 提取正文 --&gt;
&lt;!-- 使用blogpost发布时，需要提取正文。 --&gt;
&lt;!-- .. code-block:: console --&gt;
&lt;!-- $ sed -n '/&lt;div /,/&lt;\/body&gt;/p' blog.html | sed -e '1,3d' -e '$d' -e '$d' &gt; post.html --&gt;
&lt;!-- 这个脚本是乖乖上午查阅资料写出来的。 --&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Docutils + Pygments + VimRePress测试</title>
   <link href="/2011/12/03/ReST_Pygments_VimRePress.html"/>
   <updated>2011-12-03T00:00:00+08:00</updated>
   <id>h/2011/12/03/ReST_Pygments_VimRePress</id>
   <content type="html">&lt;!-- id: 3 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;本文使用rst2html生成，源代码使用pygments做语法高亮，使用vimrepress提交。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;终端例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello, world!&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;c&quot;&gt;
&lt;h2&gt;c例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;main&lt;/span&gt;() {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python&quot;&gt;
&lt;h2&gt;python例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;sys&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; sys&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;platform()&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello, world!&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>wordpress blog id不连续的解决</title>
   <link href="/2011/11/25/wp-id-continus.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/wp-id-continus</id>
   <content type="html">&lt;!-- id: 7 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;wp两个特性：自动保存(auto save) 和 版本记录(revisions)。&lt;/p&gt;
&lt;p&gt;post_status: auto-draft, draft&lt;/p&gt;
&lt;p&gt;auto-draft是系统自动生成，控制台不可见，draft是草稿。&lt;/p&gt;
&lt;p&gt;post_type: post, revision, page&lt;/p&gt;
&lt;p&gt;post_parent: 描述从哪个id演变而来。revision版的不为0，原始的为0.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;修改配置文件&lt;/h2&gt;
&lt;p&gt;修改wp-config.php,增加两行：&lt;/p&gt;
&lt;pre class=&quot;code php literal-block&quot;&gt;
&lt;span class=&quot;other&quot;&gt;define( 'AUTOSAVE_INTERVAL', 36000 );
define('WP_POST_REVISIONS', false );&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;第一行中单位是秒。 这里每10小时自动保存一次。&lt;/p&gt;
&lt;p&gt;第二行是禁用版本历史的 Revisions的设置选项说明如下：&lt;/p&gt;
&lt;p&gt;There are options, but they are hidden well :) There is a constant (not even filterable) that can be set by a plugin or in your wp-settings.php file:&lt;/p&gt;
&lt;p&gt;WP_POST_REVISIONS:&lt;/p&gt;
&lt;p&gt;true (default), -1: store every revision
false, 0: do not store any revisions (except the one autosave per post)
(int) &amp;gt; 0: store that many revisions (+1 autosave) per post. Old revisions are automatically deleted.&lt;/p&gt;
&lt;p&gt;设置这个变量为false或0的话，还是会保留一个历史版本的。&lt;/p&gt;
&lt;p&gt;另外，在每次新建文章时，会自动保存一个记录，要禁用的话，只能硬编码。&lt;/p&gt;
&lt;p&gt;修改wp-admin/post.php和wp-admin/post-new.php，找到如下内容，注释掉。&lt;/p&gt;
&lt;pre class=&quot;code php literal-block&quot;&gt;
&lt;span class=&quot;other&quot;&gt;wp_enqueue_script('autosave');&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修改wp-admin/post-new.php，在代码的最后几行，有：&lt;/p&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: ERROR/3 (&lt;tt class=&quot;docutils&quot;&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 57)&lt;/p&gt;
&lt;p&gt;Error in &amp;quot;code-block&amp;quot; directive:
unknown option: &amp;quot;lineos&amp;quot;.&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. code-block:: php
    :lineos:

    38 // Show post form.
    39 $post = get_default_post_to_edit( $post_type, true);
    40 $post_ID = $post-&amp;gt;ID;
    41 include('edit-form-advanced.php');
    42 include('./admin-footer.php');
    43 ?&amp;gt;

&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将第39行最后的true改为false：&lt;/p&gt;
&lt;pre class=&quot;code php literal-block&quot;&gt;
&lt;span class=&quot;other&quot;&gt;39 $post = get_default_post_to_edit( $post_type, false);&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;硬编码修改&lt;/h3&gt;
&lt;p&gt;此外，还要修改wp-admin/include/post.php，找到如下代码：&lt;/p&gt;
&lt;pre class=&quot;code php literal-block&quot;&gt;
&lt;span class=&quot;other&quot;&gt;418     if ( $create_in_db ) {
419         // Cleanup old auto-drafts more than 7 days old
420         $old_posts = $wpdb-&amp;gt;get_col( &amp;quot;SELECT ID FROM $wpdb-&amp;gt;posts WHERE post_status = 'auto-draft' AND DATE_SUB( NOW(), INTERVAL 7 DAY ) &amp;gt; post_date&amp;quot; );
421         foreach ( (array) $old_posts as $delete )
422             wp_delete_post( $delete, true ); // Force delete
423         $post_id = wp_insert_post( array( 'post_title' =&amp;gt; __( 'Auto Draft' ), 'post_type' =&amp;gt; $post_type, 'post_status' =&amp;gt; 'auto-draft' ) );
424         $post = get_post( $post_id );
425         if ( current_theme_supports( 'post-formats' ) &amp;amp;&amp;amp; post_type_supports( $post-&amp;gt;post_type, 'post-formats' ) &amp;amp;&amp;amp; get_option( 'default_post_format' ) )
426             set_post_format( $post, get_option( 'default_post_format' ) );
427     } else {&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;将if分支中的内容，直到424行，修改成下面的内容：&lt;/p&gt;
&lt;pre class=&quot;code php literal-block&quot;&gt;
&lt;span class=&quot;other&quot;&gt;418     if ( $create_in_db ) {
419         // modify by akii start
420         global $current_user;
421         $post_auto_draft = $wpdb-&amp;gt;get_row( &amp;quot;SELECT * FROM $wpdb-&amp;gt;posts WHERE post_status = 'auto-draft' AND post_author = $current_user-&amp;gt;ID ORDER BY ID ASC LIMIT 1&amp;quot;||        );
422         if ($post_auto_draft){
423             $post = $post_auto_draft;
424         } else {
425             $post_id = wp_insert_post( array( 'post_title' =&amp;gt; __( 'Auto Draft' ), 'post_type' =&amp;gt; $post_type, 'post_status' =&amp;gt; 'auto-draft' ) );
426             $post = get_post( $post_id );
427         }
428         // modify by akii end
429         if ( current_theme_supports( 'post-formats' ) &amp;amp;&amp;amp; post_type_supports( $post-&amp;gt;post_type, 'post-formats' ) &amp;amp;&amp;amp; get_option( 'default_post_format' ) )
430             set_post_format( $post, get_option( 'default_post_format' ) );
431     } else {&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;参考自 &lt;a class=&quot;reference external&quot; href=&quot;http://www.akii.org/wordpress-3-0-prohibit-to-historical-versions-and-automatically-save-the-draft.html&quot;&gt;Akii Snow 的博客&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;禁用版本记录&lt;/h2&gt;
&lt;p&gt;修改wp-config.php,增加一行：&lt;/p&gt;
&lt;pre class=&quot;code php literal-block&quot;&gt;
&lt;span class=&quot;other&quot;&gt;define('WP_POST_REVISIONS', false );&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;清理数据库中版本历史&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;手工清理&lt;/li&gt;
&lt;li&gt;安装wp插件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;自动保存的记录是如下记录：&lt;/p&gt;
&lt;pre class=&quot;code sql literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_posts&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_status&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'auto-draft'&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;而版本记录是：&lt;/p&gt;
&lt;pre class=&quot;code sql literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_posts&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_status&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'inherit'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;手工保存的是：&lt;/p&gt;
&lt;pre class=&quot;code sql literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_posts&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_status&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'draft'&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;删除历史冗余记录&lt;/h2&gt;
&lt;p&gt;删除草稿记录，自动保存记录，版本变迁记录：&lt;/p&gt;
&lt;pre class=&quot;code sql literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_posts&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_status&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'inherit'&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_status&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'auto-draft'&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_status&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string single&quot;&gt;'draft'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;禁用自动保存的插件&lt;/h2&gt;
&lt;p&gt;有老外写了这个禁用自动保存的插件， &lt;a class=&quot;reference external&quot; href=&quot;http://www.untwistedvortex.com/2008/06/27/adjust-wordpress-autosave-or-disable-it-completely/&quot;&gt;文章在此&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;&amp;lt;http://samm.dreamhosters.com/wordpress/plugins/disable-autosave.php&amp;gt;&quot;&gt;插件下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h2&gt;删除版本历史，禁用版本保存的插件&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://wordpress.org/extend/plugins/disable-revisions/&quot;&gt;disable revisions&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id&quot;&gt;
&lt;h2&gt;将id顺序排列&lt;/h2&gt;
&lt;p&gt;涉及到4张表，都要更新。尝试使用循环解决，未遂。只得手工改。&lt;/p&gt;
&lt;p&gt;下面的例子将id为108的记录修改id为7。&lt;/p&gt;
&lt;pre class=&quot;code sql literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_posts&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_term_relationships&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;object_id&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;object_id&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_postmeta&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;wp_comments&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;comment_post_ID&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;comment_post_ID&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;新建博客仍有问题。新博客的id并不小！&lt;/p&gt;
&lt;p&gt;保持id连续的原则：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;不要删博客&lt;/li&gt;
&lt;li&gt;新建的博客一定要保存&lt;/li&gt;
&lt;li&gt;禁用自动保存和版本记录。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考自: &lt;a class=&quot;reference external&quot; href=&quot;http://www.williamlong.info/archives/1416.html&quot;&gt;月光博客&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>国内Dropbox安装使用</title>
   <link href="/2011/11/25/dropbox-install.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/dropbox-install</id>
   <content type="html">&lt;!-- id: 10 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;目前Dropboxd的情况是http不能访问，https可以访问，和google docs,google reader一样。&lt;/p&gt;
&lt;p&gt;所以下面是讲如何在https下完成安装。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;下载在线安装包：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; wget https://www.dropbox.com/downloading?os&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;lnx&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;os的值可以是win,lnx,mac。&lt;/p&gt;
&lt;p&gt;下载包很小，安装也很快，但注意，这只是安装了一个空壳，接下来才是真正的安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox start -i&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样会启动安装程序，自动从官网下载数据包进行在线安装。&lt;/p&gt;
&lt;p&gt;但是我们访问不了，所以安装失败。怎么办呢？手工下载吧。&lt;/p&gt;
&lt;p&gt;下载数据包到主目录，目前最新版是1.2.48：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; ~&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; wget https://dl-web.dropbox.com/u/17/dropbox-lnx.x86-1.2.48.tar.gz&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改dropbox脚本，替换网上下载数据包为使用本地数据包：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo sed -i &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s/urlopen(.*)/urlopen(os.path.join(os.path.expanduser(&amp;quot;~&amp;quot;), &amp;quot;dropbox-%s-%s.tar.gz&amp;quot; % (plat(), &amp;quot;1.2.48&amp;quot;)))/&amp;#39;&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;`&lt;/span&gt;which dropbox&lt;span style=&quot;color: #BA2121&quot;&gt;`&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后就可以安装啦:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox start -i&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看运行状态:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox status&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Downloading 909 files (5.9 KB/sec, 2 days left)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;获取public url：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox public filename&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- https://dl.dropbox.com/u/6993309/Dropbox.apk --&gt;
&lt;!-- windows: --&gt;
&lt;!-- http://cdn.dropbox.com/Dropbox%201.1.31.exe --&gt;
&lt;!-- 在线代理:http://www.7daili.com/ --&gt;</content>
 </entry>
 
 <entry>
   <title>C中宏定义研究</title>
   <link href="/2011/11/25/c-define.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/c-define</id>
   <content type="html">&lt;!-- id: 9 --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;简单替换&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define PI 3.14&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;带参数（宏函数）&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define SQUARE(a) ((a)*(a))&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;
&lt;p&gt;注意两点：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;参数要加括号&lt;/li&gt;
&lt;li&gt;整体要加括号&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;原因很简单，宏只是简单的替换。需要括号来保证替换后不受运算符优先级的干扰。&lt;/p&gt;
&lt;p&gt;带#的宏函数&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define STR(a) #a&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;替换结果为将参数加引号。而下例：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define STR(a) &amp;quot;a&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会替换为字符串&amp;quot;a&amp;quot;，和参数无关。&lt;/p&gt;
&lt;p&gt;这里有一个原则：遇引号不替换&lt;/p&gt;
&lt;p&gt;带##的宏函数&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define PRE(a) L##a&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会把参数a前面加上L。&lt;/p&gt;
&lt;p&gt;看下面一个例子：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define PRE(a,b) vo##a##b()&lt;/span&gt;&lt;br/&gt;PRE(id te,st) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;展开后为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;test&lt;/span&gt;() {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>列表：最喜欢的软件</title>
   <link href="/2011/11/24/my-favirote-software.html"/>
   <updated>2011-11-24T00:00:00+08:00</updated>
   <id>h/2011/11/24/my-favirote-software</id>
   <content type="html">&lt;!-- id: 6 --&gt;
&lt;!-- publish: YES --&gt;
&lt;div class=&quot;contents topic&quot; id=&quot;id2&quot;&gt;
&lt;p class=&quot;topic-title first&quot;&gt;最喜欢的软件如下：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#dropbox&quot; id=&quot;id3&quot;&gt;Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#dropbox-index&quot; id=&quot;id4&quot;&gt;Dropbox-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#google-chrome&quot; id=&quot;id5&quot;&gt;Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#evernote&quot; id=&quot;id6&quot;&gt;Evernote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#virtualbox&quot; id=&quot;id7&quot;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#reeder&quot; id=&quot;id8&quot;&gt;Reeder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#sparrow&quot; id=&quot;id9&quot;&gt;Sparrow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;dropbox&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id3&quot;&gt;Dropbox&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;同步软件，支持各种平台。真正外链。
建议使用https访问。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;dropbox-index&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id4&quot;&gt;Dropbox-index&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;自动生成Dropbox Public索引。Cool!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;google-chrome&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id5&quot;&gt;Google Chrome&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;无须多言。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;evernote&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id6&quot;&gt;Evernote&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;云笔记软件。支持各种平台。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;virtualbox&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id7&quot;&gt;VirtualBox&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;免费好用的虚拟机软件。我在Mac和Ubuntu下使用它虚拟Windows。&lt;/p&gt;
&lt;p&gt;自动生成Dropbox Public目录的索引。使用Python编写。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;reeder&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id8&quot;&gt;Reeder&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mac OS X下最好用的Google Reader Client。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;sparrow&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id9&quot;&gt;Sparrow&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mac OS X下最好用的Mail Client。&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>linux shell 重定向</title>
   <link href="/2011/11/24/linux-shell-pipe.html"/>
   <updated>2011-11-24T00:00:00+08:00</updated>
   <id>h/2011/11/24/linux-shell-pipe</id>
   <content type="html">&lt;!-- id: 5 --&gt;
&lt;!-- comments: --&gt;
&lt;!-- categories: --&gt;
&lt;!-- publish: YES --&gt;
&lt;p&gt;shell下有标准输入stdin，标准输出stdout，标准错误输出stderr，标示符分别为0，1，2。
默认的标准输入是键盘，标准输出和标准错误输出是显示器。&lt;/p&gt;
&lt;p&gt;利用重定向可以改变默认的标准输入输出，使用&amp;quot;&amp;lt;&amp;quot;来重定向标准输入，利用&amp;quot;&amp;gt;&amp;quot;来进行重定向输出。&lt;/p&gt;
&lt;p&gt;另外，可以使用&amp;quot;&amp;gt;&amp;gt;&amp;quot;在重定向输出时不是覆盖，而是追加。&lt;/p&gt;
&lt;p&gt;重定向标准输入我不太常用，仅对输出重定向举例如下：&lt;/p&gt;
&lt;!-- more --&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;将echo的标准输出重定向到/tmp/a.txt文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo &lt;/span&gt;hello world&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo &lt;/span&gt;hello world &amp;gt; /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;2&quot;&gt;
&lt;li&gt;将echo的标准输出重定向追加到/tmp/a.txt文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo &lt;/span&gt;hello world &amp;gt;&amp;gt; /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;3&quot;&gt;
&lt;li&gt;将标准错误输出重定向到/tmp/error.log文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat not-exists.txt&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exists.txt: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat not-exists.txt 2&amp;gt; /tmp/error.log&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/error.log&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exists.txt: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;4&quot;&gt;
&lt;li&gt;将标准输出和标准错误输出都重定向到/tmp/log文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt not-exist&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exitst: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt not-exist &amp;gt; /tmp/log 2&amp;gt;&amp;amp;1&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/log&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exitst: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不能这样用：&lt;/p&gt;
&lt;pre class=&quot;code console literal-block&quot;&gt;
&lt;span class=&quot;generic prompt&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt not-exist 2&amp;gt;&amp;amp;1 &amp;gt; /tmp/log
&lt;/pre&gt;</content>
 </entry>
 
 
</feed>