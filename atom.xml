<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title></title>
 <link href="/atom.xml" rel="self"/>
 <link href=""/>
 <updated>2012-03-16T17:58:41+08:00</updated>
 <id></id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>zeromq学习笔记</title>
   <link href="/2012/03/16/zeromq-note.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/zeromq-note</id>
   <content type="html">&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;名词解释&lt;/h2&gt;
&lt;p&gt;IDC: Internet Data Center，互联网数据中心。&lt;/p&gt;
&lt;p&gt;ZooKeeper: Hadoop子项目，Chubby的开源实现，协同工作系统。&lt;/p&gt;
&lt;p&gt;Pacemaker: 类似Zooeeper的项目。&lt;/p&gt;
&lt;p&gt;Paxos:&lt;/p&gt;
&lt;p&gt;Redis:&lt;/p&gt;
&lt;p&gt;Gossip协议：&lt;/p&gt;
&lt;p&gt;Thrift协议：&lt;/p&gt;
&lt;p&gt;Cassandra: Apache的开源分布式KV存储系统，最初由Facebook开发。&lt;/p&gt;
&lt;p&gt;Dynomite: KV存储。&lt;/p&gt;
&lt;p&gt;HAProxy: 前端负载均衡。&lt;/p&gt;
&lt;p&gt;Thrift: Facebook的跨语言服务器部署框架。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;底层库&lt;/h2&gt;
&lt;p&gt;libevent: 一个轻量级I/O框架。&lt;/p&gt;
&lt;p&gt;epoll&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;ZeroMQ类似实现对比&lt;/h2&gt;
&lt;p&gt;异步队列?&lt;/p&gt;
&lt;p&gt;AMQP vs. RabbitMQ&lt;/p&gt;
&lt;p&gt;Round-robin进行负载均衡&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;ZeroMQ的模式&lt;/h2&gt;
&lt;p&gt;三种模式：&lt;/p&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;请求应答模式&lt;/p&gt;
&lt;p&gt;传统的c/s模式。见hwclient.js和hwserver.js。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;订阅发布模式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;publisher.js和subscriber.js。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;推拉模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;默认阻塞，使用Poller实现非阻塞。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;node-js&quot;&gt;
&lt;h2&gt;Node.js使用例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;var&lt;/span&gt; context &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; require(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;zeromq&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请求/响应模式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;var&lt;/span&gt; server &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; context.createSocket(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;rep&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;server.on(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;function&lt;/span&gt;(request) {&lt;br/&gt;&lt;br/&gt;})&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;var&lt;/span&gt; client &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; context.createSocket(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;req&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发布/订阅模式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;var&lt;/span&gt; publisher &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; context.createSocket(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;pub&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;system-message&quot;&gt;
&lt;p class=&quot;system-message-title&quot;&gt;System Message: ERROR/3 (&lt;tt class=&quot;docutils&quot;&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 96)&lt;/p&gt;
&lt;p&gt;Content block expected for the &amp;quot;code-block&amp;quot; directive; none found.&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. code-block:: javascript


&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;zeromq安装&lt;/h2&gt;
&lt;p&gt;目前最新稳定版：http://download.zeromq.org/zeromq-2.1.11.tar.gz&lt;/p&gt;
&lt;p&gt;github地址：https://github.com/zeromq/zeromq2-1&lt;/p&gt;
&lt;p&gt;编译安装三部曲：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ./configure&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; make&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo make install&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外还需要更新动态链接库：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo ldconfig&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python&quot;&gt;
&lt;h2&gt;python绑定&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo easy_install pyzmq&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;Node.js绑定&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; npm install zmq&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>命令行下使用xcode编译工程</title>
   <link href="/2012/03/16/xcode-in-command-line.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/xcode-in-command-line</id>
   <content type="html">&lt;p&gt;虽说Xcode使用起来很方便，但有时候为了快捷也希望能够在终端输入一条命令执行编译，幸好Xcode提供了相关的命令，可以通过它来编译xcode工程。&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;查看环境&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; xcodebuild -showsdks&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Mac OS X SDKs:&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;        Mac OS X 10.6                   -sdk macosx10.6&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;        Mac OS X 10.7                   -sdk macosx10.7&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;iOS SDKs:&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;        iOS 5.0                         -sdk iphoneos5.0&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;iOS Simulator SDKs:&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;        Simulator - iOS 4.3             -sdk iphonesimulator4.3&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;        Simulator - iOS 5.0             -sdk iphonesimulator5.0&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;编译&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; xcodebuild -sdk iphoneos5.0&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;还不知道如何通过命令来运行程序，探索中。。。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>网络编程学习</title>
   <link href="/2012/03/16/unix-network-programming-note.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/unix-network-programming-note</id>
   <content type="html">&lt;div class=&quot;section&quot; id=&quot;socket&quot;&gt;
&lt;h2&gt;SOCKET编程基础&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;服务器端&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;创建套接字：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; listenfd;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( (listenfd &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; socket(AF_INET, SOCK_STREAM, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;)) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;socket error!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;设置服务器端口相关，这里为80端口，注意这里的sockaddr_in结构体。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; sockaddr_in servaddr;&lt;br/&gt;&lt;br/&gt;bzero(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;servaddr, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(servaddr));&lt;br/&gt;servaddr.sin_family &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; AF_INET;&lt;br/&gt;servaddr.sin_addr.s_addr &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; htonl(INADDR_ANY);&lt;br/&gt;servaddr.sin_port &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; htons(&lt;span style=&quot;color: #666666&quot;&gt;80&lt;/span&gt;);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;绑定端口。这里将sockaddr_in结构体转换为sockaddr结构体。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( bind(listenfd, (&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; ) &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;servaddr, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(servaddr)) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;bind error!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;# 监听端口，这里设置套接字排队最大连接数为5，根据BSD传统。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( listen(listenfd, &lt;span style=&quot;color: #666666&quot;&gt;5&lt;/span&gt;) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;listen error!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;处理连接。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; connfd;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;for&lt;/span&gt;(;;) {&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; ((connfd &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; accept(listenfd, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; ) &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;        printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;accept error!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;        exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;    &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* 这里处理连接请求，最简单的是直接处理，但如果比较耗时的话其他就访问不了。&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;     * 要能够同时处理多个请求，一般用线程或子进程来完成，&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;     * 这样主进程能够继续或者说同时处理下一个请求。 \*/&lt;/span&gt;&lt;br/&gt;    close(connfd);&lt;br/&gt;}&lt;br/&gt;close(listenfd);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;客户端&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;创建套接字&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; sockfd;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( (sockfd &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; socket(AF_INET, SOCK_STREAM, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;)) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;socket error.&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;设置访问端口。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; sockaddr_in servaddr;&lt;br/&gt;&lt;br/&gt;bzero(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;servaddr, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(servaddr));&lt;br/&gt;servaddr.sin_family &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; AF_INET;&lt;br/&gt;servaddr.sin_port &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; htons(&lt;span style=&quot;color: #666666&quot;&gt;80&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( inet_pton(AF_INET, &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;, &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;servaddr.sin_addr) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;inet_pton error.&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;发起连接。错误代码保存在全局变量errno中，errno在errno.h中定义。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( connect(sockfd, (&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; ) &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;servaddr, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(servaddr)) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;connect error: %s&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;, strerror(errno));&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;读写socket，应用处理。这里可以使用各种I/O复用等。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;while&lt;/span&gt;(read(sockfd, recvlien, MAXLINE) &lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;i-o&quot;&gt;
&lt;h2&gt;I/O复用技术&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;select&quot;&gt;
&lt;h3&gt;select&lt;/h3&gt;
&lt;p&gt;头文件&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#include &amp;lt;sys/select.h&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定义相关变量并初始化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; maxfdp1;&lt;br/&gt;fd_set rset;&lt;br/&gt;&lt;br/&gt;FD_ZERO(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;rset);&lt;br/&gt;FD_SET(fileno(fp), &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;rset);&lt;br/&gt;FD_SET(sockfd, &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;rset);&lt;br/&gt;maxfdp1 &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; max(fileno(fp), sockfd) &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用select，在可读时响应：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;(( n&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;select(maxfdp1, &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;rset, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;)) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;select error.&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过FD_ISSET()判断哪个文件描述符可读：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( FD_ISSET(fileno(fp), &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;rset)) {&lt;br/&gt;    &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;// Now can read from fp.&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( FD_ISSET( sockfd, &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;rset)) {&lt;br/&gt;    &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;// Now can read from sockfd.&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;具体的例子参见str_cli2函数（在echo_client.c中）。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pselect&quot;&gt;
&lt;h3&gt;pselect&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;poll&quot;&gt;
&lt;h3&gt;poll&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;相关库&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;libevent&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>leveldb学习笔记</title>
   <link href="/2012/03/16/leveldb-note.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/leveldb-note</id>
   <content type="html">&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;服务器构架&lt;/h2&gt;
&lt;p&gt;前端有一级缓存L1&lt;/p&gt;
&lt;p&gt;中间有Memory Cache作为二级缓存L2&lt;/p&gt;
&lt;p&gt;后端MySQL数据库自带三级缓存L3&lt;/p&gt;
&lt;p&gt;Memory Cache产品，最经典的是MemoryCached。&lt;/p&gt;
&lt;p&gt;硬盘产品，现在使用SSD硬盘来提到I/O能力。我们使用FusionIO公司的SSD硬盘。&lt;/p&gt;
&lt;p&gt;但MemoryCached不能和SSD较好地整合。在和SSD的整合方面，leveldb是最不错的。&lt;/p&gt;
&lt;p&gt;我们尝试leveldb和FusionIO产品的整合。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;磁盘阵列&lt;/h2&gt;
&lt;p&gt;RAID: Redundant Array of Independent Disks, 磁盘阵列&lt;/p&gt;
&lt;p&gt;分为RAID-0, RAID-1, RADI-1E, RAID-5, RAID-6, RAID-7, RAID-10, RAID-50。&lt;/p&gt;
&lt;p&gt;RAID-0: 多个磁盘合并成一个大容量磁盘，不具有冗余。并行I/O。读写速度快。&lt;/p&gt;
&lt;p&gt;RAID-1：互相做镜像。冗余最高，安全性最好。读取速度快。写入速度稍慢。&lt;/p&gt;
&lt;p&gt;RAID-2: 在RAID-0的基础上加入Hamming码作为错误校验码。至少需要3台磁盘。&lt;/p&gt;
&lt;p&gt;RAID-3：数据交错存储。数据分散在各个磁盘。&lt;/p&gt;
&lt;p&gt;RAID-4：和RAID-3类似，不过以区块为单位分区。&lt;/p&gt;
&lt;p&gt;RAID-5：组合RAID-0和RAID-1，使用奇偶校验信息做冗余。读取速度和RAID-0相近，写入速度较慢（由于奇偶校验信息）。&lt;/p&gt;
&lt;p&gt;RAID-6：比RAID-5增加一个独立的奇偶校验信息块，使用不同的算法。可靠性很高，允许两块磁盘失效。写性能很差。&lt;/p&gt;
&lt;p&gt;实际应用中RAID-5，RAID-6比较多。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;memorycached&quot;&gt;
&lt;h2&gt;MemoryCached学习&lt;/h2&gt;
&lt;p&gt;MemoryCached使用LRU（Least Recently Used）算法。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;nosql&quot;&gt;
&lt;h2&gt;NoSQL相关理论&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;术语&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Five Minutes Rule&lt;/li&gt;
&lt;li&gt;CAP理论：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;C：Consistency 一致性&lt;/li&gt;
&lt;li&gt;A: Availability 可用性&lt;/li&gt;
&lt;li&gt;P: Partition(Tolerence of network Partition) 分区容忍性（分布式）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;ACID&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;A: Atomic 原子性&lt;/li&gt;
&lt;li&gt;C: Consistency&lt;/li&gt;
&lt;li&gt;I:&lt;/li&gt;
&lt;li&gt;D: D&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;LSM Tree (Log Structurted Merge Tree， 内存中日志树)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MMAP&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;分区策略&lt;/h3&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;一致性Hash环 DHTs&lt;/li&gt;
&lt;li&gt;范围分区，比如Bigtable&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;bittable&quot;&gt;
&lt;h2&gt;BitTable论文学习&lt;/h2&gt;
&lt;p&gt;映射： :math: (row:string, column:string, timestamp:int64) rightarrow string&lt;/p&gt;
&lt;p&gt;时间戳：时间逆序&lt;/p&gt;
&lt;p&gt;API:&lt;/p&gt;
&lt;p&gt;SSTable文件格式用来存储Bigtable数据。提供持久，有序的键值映射。&lt;/p&gt;
&lt;p&gt;每个SSTable包含一系列 块 block，典型的块大小是64KB，可以修改配置文件改变。SSTable的末尾是block的索引。打开SSTable时会把索引载入内存。对索引进行二分查找找到目标块，然后从磁盘中读取该块。也可以把整个SSTable读入内存，这样再查找就不需磁盘I/O操作了。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;chubby&quot;&gt;
&lt;h3&gt;Chubby&lt;/h3&gt;
&lt;p&gt;Chubby使用Paxos算法。。。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h3&gt;实现&lt;/h3&gt;
&lt;p&gt;主服务器， 很多节点tablet服务器， 通信。&lt;/p&gt;
&lt;p&gt;tablet server管理一组tablets，一般有上千个tablets。tablet server管理已加载的tablets的读写请求，还负责把太大的tablet拆小。&lt;/p&gt;
&lt;p&gt;一个Bigtable集群存储很多tables，每个table由一组tablets组成。每个tablet关联着特定行范围的所有数据。&lt;/p&gt;
&lt;p&gt;一开始，每个表只有一个tablet，随着tablet的增大，自动分裂成多个tablets，默认每个tablet的大小上线是100-200MB。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;tablet&quot;&gt;
&lt;h4&gt;5.1 Tablet定位&lt;/h4&gt;
&lt;p&gt;Chubby文件 -&amp;gt; 根tablet&lt;/p&gt;
&lt;p&gt;根tablet在METADATA表中存储所有的tablets位置信息。METADATA表中存的第一个，当然是根tablet了。根tablet比较特殊，它永不分裂。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;LevelDB综述&lt;/h2&gt;
&lt;p&gt;leveldb主要解决随机写的效率低下问题。&lt;/p&gt;
&lt;p&gt;打开数据库初始化时，加载.sst索引数据。在内存中构建一个memtable。同时创建日志文件。以后的写操作都会确保memtable和日志文件的一致性。&lt;/p&gt;
&lt;p&gt;写文件用Put函数实现。当进行Put操作时，不是对磁盘而是对memtable进行操作。操作成功的话会将操作追加到操作日志文件中，从而将随机写转化为顺序写。&lt;/p&gt;
&lt;p&gt;当memtable规模超过预设值时，memtable会分成2部分。一部分对key排序，建立索引后把k/v数据和索引一并持久化存储为.sst文件。同时删除对应的日志文件内容。这叫做minor compaction。&lt;/p&gt;
&lt;p&gt;当leveldb意外退出时，系统可以从操作日志中恢复数据，持久化到.sst文件。&lt;/p&gt;
&lt;p&gt;读操作用Get函数实现。首先使用bloom过滤器判断是否存在该key，若存在的话，二分查找定位到所需.sst文件，将.sst文件载入内存，和memtable合并（即将操作顺序执行一遍），然后返回最终值，也就是最新值。&lt;/p&gt;
&lt;p&gt;当.sst文件个数超过预设值时，会合并成1个.sst文件。这叫做major compaction。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id7&quot;&gt;
&lt;h2&gt;数据格式分析&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id8&quot;&gt;
&lt;h3&gt;静态分析&lt;/h3&gt;
&lt;p&gt;数据库目录下一般有如下几类文件：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;$version.sst文件（Sorted String Table)&lt;/li&gt;
&lt;li&gt;$version.log文件（当前操作）&lt;/li&gt;
&lt;li&gt;CURRENT   存放MANIFEST文件名&lt;/li&gt;
&lt;li&gt;LOCK&lt;/li&gt;
&lt;li&gt;LOG   存放最新的系统日志&lt;/li&gt;
&lt;li&gt;LOG.old   存放日志存档&lt;/li&gt;
&lt;li&gt;MANIFEST-$version MANIFEST文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中$version为6位整数。&lt;/p&gt;
&lt;p&gt;$version.log的格式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;block， 不确定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;record，不确定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;checksum&lt;/p&gt;
&lt;p&gt;是type和data的循环校验码CRC32C。
uint32类型，4字节，文件头偏移量13字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;length，uint16类型，2字节。只见到值为0的，不知道作用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;type，unit8类型，1字节。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;表示data的类型，取值如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class=&quot;upperroman simple&quot;&gt;
&lt;li&gt;1  FULL&lt;/li&gt;
&lt;li&gt;2  FIRST&lt;/li&gt;
&lt;li&gt;3  MIDDLE&lt;/li&gt;
&lt;li&gt;4  LAST&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;data 具体的k-v数据。&lt;/p&gt;
&lt;p&gt;在type=1时，结构为：key的长度 key的内容 value的长度 value的内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h3&gt;时序演示&lt;/h3&gt;
&lt;div class=&quot;section&quot; id=&quot;id10&quot;&gt;
&lt;h4&gt;初始化数据库&lt;/h4&gt;
&lt;p&gt;假设有如下Python操作：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;leveldb&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; db &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; leveldb&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;LevelDB(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;./data&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;假设当前目录下没有data子目录。leveldb会创建data目录，初始化如下文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 09:52 000003.log&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin  16 2011-12-09 09:52 CURRENT&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 09:52 LOCK&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-rw-r-- 1 amoblin amoblin  53 2011-12-09 09:52 LOG&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin 64K 2011-12-09 09:52 MANIFEST-000002&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;000003.log为待写文件，后续Put，Delete等操作会将记录保存至此。&lt;/p&gt;
&lt;p&gt;CURRENT内容为MANIFEST文件名，初始时MANIFEST版本为2，即MANIFEST-000002。为什么不是1呢？看接下来的LOG文件。&lt;/p&gt;
&lt;p&gt;LOG文件内容如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;2011/12/09-09:52:33.951468 b770d6c0 Delete type=3 #1&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一列是创建时间，第二列b770d6c0不知何意。Delete代表删除操作。&lt;/p&gt;
&lt;p&gt;type=3，说明是MANIFEST文件，#1是版本号。&lt;/p&gt;
&lt;p&gt;即删除了MANIFEST-000001文件。所以现存的是MANIFEST-000002文件。&lt;/p&gt;
&lt;p&gt;MANIFEST-000002文件待研究。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;put&quot;&gt;
&lt;h4&gt;Put数据&lt;/h4&gt;
&lt;p&gt;接着上面的交互：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; db&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;Put(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;cba&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;abcd&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这时操作内容被追加到000005.log文件，使其大小由0变为64KB：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin 64K 2011-12-09 10:20 000005.log&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看其内容&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; od -A d -t x1 000003.log&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000000 57 c6 a2 f2 16 00 01 01 00 00 00 00 00 00 00 01&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000016 00 00 00 01 03 63 62 61 04 61 62 63 64&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000029&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;循环校验码从第1行倒数第3个数值00开始，到第2行第1个00为止，共4字节。&lt;/p&gt;
&lt;p&gt;接着2字节是length，为0.&lt;/p&gt;
&lt;p&gt;接着1字节是type，这里为1，表示接下来的data包含全部内容，并未分片。&lt;/p&gt;
&lt;p&gt;接着是data数据，03表示key的长度，63 62 61是key的内容'cba'的ascii码。&lt;/p&gt;
&lt;p&gt;然后是value接着2字节是length，为0.&lt;/p&gt;
&lt;p&gt;接着1字节是type，这里为1，表示接下来的data包含全部内容，并未分片。&lt;/p&gt;
&lt;p&gt;接着是data数据，03表示key的长度，63 62 61是key的内容'cba'的ascii码。&lt;/p&gt;
&lt;p&gt;然后04是value的长度，61 62 63 64是value的内容'abcd'的ascii码。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id11&quot;&gt;
&lt;h4&gt;再次打开数据库&lt;/h4&gt;
&lt;p&gt;如果打开当前数据库：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; db &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; leveldb&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;LevelDB(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;./data&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看文件变化情况：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin 119 2011-12-09 10:37 000005.sst&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 10:37 000006.log&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin  16 2011-12-09 10:37 CURRENT&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin   0 2011-12-09 10:37 LOCK&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-rw-r-- 1 amoblin amoblin 289 2011-12-09 10:37 LOG&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-rw-r-- 1 amoblin amoblin  53 2011-12-09 10:37 LOG.old&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;-rw-r--r-- 1 amoblin amoblin 64K 2011-12-09 10:37 MANIFEST-000004&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CURRENT内容变为MANIFEST-000004。&lt;/p&gt;
&lt;p&gt;LOG文件内容如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;2011/12/09-10:37:43.285941 b770d6c0 Recovering log #3&lt;br/&gt;2011/12/09-10:37:43.286160 b770d6c0 Level-0 table #5: started&lt;br/&gt;2011/12/09-10:37:43.288104 b770d6c0 Level-0 table #5: 119 bytes OK&lt;br/&gt;2011/12/09-10:37:43.291572 b770d6c0 Delete type=3 #2&lt;br/&gt;2011/12/09-10:37:43.291636 b770d6c0 Delete type=0 #3&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从系统日志可以看出，leveldb做了3件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;执行上次的操作&lt;/p&gt;
&lt;p&gt;我们知道，leveldb的Put，Delete操作都是顺序存放在.log文件中的。何时整理呢？就是这时。&lt;/p&gt;
&lt;p&gt;创建了000005.sst表，将上次的k/v数据存入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;更新版本号&lt;/p&gt;
&lt;p&gt;整理完毕后，删除老的版本号MANIFEST-000002，生成新版本号文件MANIFEST-000004。看来没有奇数版本号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;删除旧日志&lt;/p&gt;
&lt;p&gt;删除日志文件000003.log&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新文件LOG.old存放上次的LOG文件内容。&lt;/p&gt;
&lt;p&gt;查看000005.sst文件&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; od -A d -t x1 000005.sst&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000000 00 0b 04 63 62 61 01 01 00 00 00 00 00 00 61 62&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000016 63 64 00 00 00 00 01 00 00 00 00 e2 3a b7 8c 00&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000032 00 00 00 01 00 00 00 00 c0 f2 a1 b0 00 09 02 64&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000048 01 ff ff ff ff ff ff ff 00 1a 00 00 00 00 01 00&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000064 00 00 00 c9 e4 dd 23 1f 08 2c 16 00 00 00 00 00&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000096 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 57&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000112 fb 80 8b 24 75 47 db&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;0000119&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后48字节是Footer，固定长度。其中从1f开始的40字节是索引。最后8字节是魔数。&lt;/p&gt;
&lt;p&gt;索引不足40字节的话补0。上面的索引数据是 1f 08 2c 16。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id12&quot;&gt;
&lt;h2&gt;源码学习&lt;/h2&gt;
&lt;p&gt;主入口在db.h。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;open&quot;&gt;
&lt;h3&gt;打开数据库Open()&lt;/h3&gt;
&lt;p&gt;db_impl.cc文件中实现Open函数。&lt;/p&gt;
&lt;p&gt;3个参数：options选项，数据库名字（文件夹路径），数据库指针。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;dbimpl&quot;&gt;
&lt;h4&gt;DBImpl实例&lt;/h4&gt;
&lt;p&gt;新建TableCache, VersionSet。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id13&quot;&gt;
&lt;h4&gt;检测数据库路径&lt;/h4&gt;
&lt;p&gt;首先根据options进行两种操作：
1. 若不存在，创建数据库目录。
#. 若存在，报错。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id14&quot;&gt;
&lt;h4&gt;创建日志文件&lt;/h4&gt;
&lt;p&gt;日志文件指针为WritalbeFile*类型。根据已有日志版本创建新日志文件，返回文件句柄。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id15&quot;&gt;
&lt;h3&gt;Put操作&lt;/h3&gt;
&lt;p&gt;首先将操作封装到WriteBatch中，然后将WriteBatch送给Write函数。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;delete&quot;&gt;
&lt;h3&gt;Delete操作&lt;/h3&gt;
&lt;p&gt;类似上述Put操作。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;write&quot;&gt;
&lt;h3&gt;Write函数&lt;/h3&gt;
&lt;p&gt;将操作追加到日志文件 AddRecord ，更新内存数据。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;get&quot;&gt;
&lt;h3&gt;Get操作&lt;/h3&gt;
&lt;p&gt;首先在memetable中查找，然后immutable中查找，然后其他。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id16&quot;&gt;
&lt;h3&gt;退出&lt;/h3&gt;
&lt;p&gt;退出时会修改MANIFEST文件。&lt;/p&gt;
&lt;hr class=&quot;docutils&quot; /&gt;
&lt;p&gt;附：&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python-leveldb&quot;&gt;
&lt;h2&gt;python leveldb安装&lt;/h2&gt;
&lt;p&gt;有两个实现：py-leveldb和cpy-leveldb。&lt;/p&gt;
&lt;p&gt;cpy-leveldb安装：
首先配置编译环境：libtool, automake,&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd &lt;/span&gt;snappy&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ./autogen.sh&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ./configure&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; make&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; ..&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; make -C leveldb&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo python setup.py build&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>iPhone越狱之后。。。</title>
   <link href="/2012/03/16/jackbreak.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/jackbreak</id>
   <content type="html">&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;安装openssh&lt;/li&gt;
&lt;li&gt;配置安全性&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;更改root密码&lt;/li&gt;
&lt;li&gt;禁用root登陆&lt;/li&gt;
&lt;li&gt;增加新账号&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;解决cydia添加源闪退:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ssh登陆iphone，执行如下操作：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;#&lt;/span&gt; ls /var/root/Library/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;AddressBook  Caches  Cookies  Lockdown  Logs  Mail  Preferences  WebKit&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;#&lt;/span&gt; cp -r /User/Library/Keyboard/ /var/root/Library/&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;添加国内178源：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://apt.178.com&quot;&gt;http://apt.178.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;感觉178源靠谱点。&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;安装软件&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Zephyr。这个必装，上划退出这个功能太方便了！ 不过和SBSettings冲突，要安装的化最好卸载SBSettings。&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>第一个iOS程序</title>
   <link href="/2012/03/16/first-ios-app.html"/>
   <updated>2012-03-16T00:00:00+08:00</updated>
   <id>h/2012/03/16/first-ios-app</id>
   <content type="html">&lt;div class=&quot;section&quot; id=&quot;ios&quot;&gt;
&lt;h2&gt;第一个iOS程序&lt;/h2&gt;
&lt;p&gt;1月19日开始第一个ios开发程序。&lt;/p&gt;
&lt;p&gt;在Xcode4.2下创建一个SingleView Application项目first&lt;/p&gt;
&lt;p&gt;Device Family: iPhone
Use Storyboard
Use Automatic Reference Counting&lt;/p&gt;
&lt;p&gt;进入first项目根目录，有两个目录first和first.xcodeproj。进入first目录。&lt;/p&gt;
&lt;p&gt;查看文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd &lt;/span&gt;first&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ls&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;AppDelegate.h    ViewController.h en.lproj         first-Prefix.pch&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;AppDelegate.m    ViewController.m first-Info.plist main.m&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Storyboard在这里：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ls en.lproj/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;InfoPlist.strings         MainStoryboard.storyboard&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Storyboard的层次结构：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;document&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;    dependencies&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;    scenes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;        scene&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;            objects&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                placeholder&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                viewController&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                    view&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                        rect&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                        autoresizingMask&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                        subviews&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                        color&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                    connections&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                        outlet&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;    classes(一开始木有)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;    simulatedMetricsContainer&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;label&quot;&gt;
&lt;h2&gt;添加一个Label&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;-                        &amp;lt;subviews/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                        &amp;lt;subviews&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                            &amp;lt;label opaque=&amp;quot;NO&amp;quot; clipsSubviews=&amp;quot;YES&amp;quot; userInteractionEnabled=&amp;quot;NO&amp;quot; contentMode=&amp;quot;left&amp;quot; text=&amp;quot;Label&amp;quot; lineBre&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;rect key=&amp;quot;frame&amp;quot; x=&amp;quot;139&amp;quot; y=&amp;quot;20&amp;quot; width=&amp;quot;42&amp;quot; height=&amp;quot;21&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;autoresizingMask key=&amp;quot;autoresizingMask&amp;quot; flexibleMaxX=&amp;quot;YES&amp;quot; flexibleMaxY=&amp;quot;YES&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;fontDescription key=&amp;quot;fontDescription&amp;quot; type=&amp;quot;system&amp;quot; pointSize=&amp;quot;17&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;color key=&amp;quot;textColor&amp;quot; cocoaTouchSystemColor=&amp;quot;darkTextColor&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;nil key=&amp;quot;highlightedColor&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                            &amp;lt;/label&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                        &amp;lt;/subviews&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                         &amp;lt;color key=&amp;quot;backgroundColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;custom&amp;quot; customColorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                     &amp;lt;/view&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                 &amp;lt;/viewController&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;             &amp;lt;/objects&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;         &amp;lt;/scene&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;     &amp;lt;/scenes&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+    &amp;lt;classes&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+        &amp;lt;class className=&amp;quot;ViewController&amp;quot; superclassName=&amp;quot;UIViewController&amp;quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+            &amp;lt;source key=&amp;quot;sourceIdentifier&amp;quot; type=&amp;quot;project&amp;quot; relativePath=&amp;quot;./Classes/ViewController.h&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+        &amp;lt;/class&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+    &amp;lt;/classes&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;做了2件事：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;在subviews里增加了label，设置了相关属性。&lt;/li&gt;
&lt;li&gt;在document下，scenes后增加了classes元素，关联到了ViewController.h文件，来做以后的事件处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;outlet&quot;&gt;
&lt;h2&gt;设置Outlet关联&lt;/h2&gt;
&lt;p&gt;修改了如下3个文件：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;#&lt;/span&gt;       modified:   ViewController.h&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;#&lt;/span&gt;       modified:   ViewController.m&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;#&lt;/span&gt;       modified:   en.lproj/MainStoryboard.storyboard&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先看Storyboard&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;--- a/first/en.lproj/MainStoryboard.storyboard&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+++ b/first/en.lproj/MainStoryboard.storyboard&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;@@ -23,6 +23,9 @@&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                         &amp;lt;/subviews&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                         &amp;lt;color key=&amp;quot;backgroundColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;custom&amp;quot; customColorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                     &amp;lt;/view&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                    &amp;lt;connections&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                        &amp;lt;outlet property=&amp;quot;statusLabel&amp;quot; destination=&amp;quot;qCc-nf-TgC&amp;quot; id=&amp;quot;b2g-zn-NAy&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                    &amp;lt;/connections&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                 &amp;lt;/viewController&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;             &amp;lt;/objects&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;         &amp;lt;/scene&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;@@ -30,6 +33,9 @@&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;     &amp;lt;classes&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;         &amp;lt;class className=&amp;quot;ViewController&amp;quot; superclassName=&amp;quot;UIViewController&amp;quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;             &amp;lt;source key=&amp;quot;sourceIdentifier&amp;quot; type=&amp;quot;project&amp;quot; relativePath=&amp;quot;./Classes/ViewController.h&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+            &amp;lt;relationships&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                &amp;lt;relationship kind=&amp;quot;outlet&amp;quot; name=&amp;quot;statusLabel&amp;quot; candidateClass=&amp;quot;UILabel&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+            &amp;lt;/relationships&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;         &amp;lt;/class&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;     &amp;lt;/classes&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也做了2件事：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;增加connections元素，设置outlet关联到前面的label：outlet.destination == label.id&lt;/li&gt;
&lt;li&gt;增加relationships元素，添加子节点relationship，kind为outlet。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再看ViewController.h。增加了一行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;property (strong, nonatomic) IBOutlet UILabel&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; statusLabel;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在ViewController类中对应增加statusLabel数据成员。&lt;/p&gt;
&lt;p&gt;ViewController.m中增加了2行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;---&lt;/span&gt; a&lt;span style=&quot;color: #666666&quot;&gt;/&lt;/span&gt;first&lt;span style=&quot;color: #666666&quot;&gt;/&lt;/span&gt;ViewController.m&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;+++&lt;/span&gt; b&lt;span style=&quot;color: #666666&quot;&gt;/&lt;/span&gt;first&lt;span style=&quot;color: #666666&quot;&gt;/&lt;/span&gt;ViewController.m&lt;br/&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@@&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;-9&lt;/span&gt;,&lt;span style=&quot;color: #666666&quot;&gt;6&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;+9&lt;/span&gt;,&lt;span style=&quot;color: #666666&quot;&gt;7&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@@&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt; #import &amp;quot;ViewController.h&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;implementation ViewController&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;synthesize statusLabel;&lt;br/&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;-&lt;/span&gt; (&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;)didReceiveMemoryWarning&lt;br/&gt; {&lt;br/&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@@&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;-26&lt;/span&gt;,&lt;span style=&quot;color: #666666&quot;&gt;6&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;+27&lt;/span&gt;,&lt;span style=&quot;color: #666666&quot;&gt;7&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@@&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;-&lt;/span&gt; (&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;)viewDidUnload&lt;br/&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt;    [self setStatusLabel&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;nil];&lt;br/&gt;     [super viewDidUnload];&lt;br/&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;// Release any retained subviews of the main view.&lt;/span&gt;&lt;br/&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;// e.g. self.myOutlet = nil;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;增加的&amp;#64;synthesize行表示自动增加对应数据成员的get和set成员函数。&lt;/p&gt;
&lt;p&gt;viewDidUnload是结束程序时的操作，这里将label的内存空间释放。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;button&quot;&gt;
&lt;h2&gt;添加button&lt;/h2&gt;
&lt;p&gt;添加button后，Storyboard中在subviews下增加了button元素。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;                            &amp;lt;/label&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                            &amp;lt;button opaque=&amp;quot;NO&amp;quot; contentMode=&amp;quot;scaleToFill&amp;quot; contentHorizontalAlignment=&amp;quot;center&amp;quot; contentVerticalAlignment&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;rect key=&amp;quot;frame&amp;quot; x=&amp;quot;26&amp;quot; y=&amp;quot;13&amp;quot; width=&amp;quot;72&amp;quot; height=&amp;quot;37&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;autoresizingMask key=&amp;quot;autoresizingMask&amp;quot; flexibleMaxX=&amp;quot;YES&amp;quot; flexibleMaxY=&amp;quot;YES&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;fontDescription key=&amp;quot;fontDescription&amp;quot; type=&amp;quot;boldSystem&amp;quot; pointSize=&amp;quot;15&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;state key=&amp;quot;normal&amp;quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                    &amp;lt;color key=&amp;quot;titleColor&amp;quot; red=&amp;quot;0.19607843459999999&amp;quot; green=&amp;quot;0.30980393290000002&amp;quot; blue=&amp;quot;0.521568656000&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                    &amp;lt;color key=&amp;quot;titleShadowColor&amp;quot; white=&amp;quot;0.5&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;/state&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;state key=&amp;quot;highlighted&amp;quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                    &amp;lt;color key=&amp;quot;titleColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;/state&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                            &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                         &amp;lt;/subviews&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;action&quot;&gt;
&lt;h2&gt;action关联&lt;/h2&gt;
&lt;p&gt;设置action关联后，ViewController类中添加了事件方法和具体实现。&lt;/p&gt;
&lt;p&gt;Storyboard中，button元素下增加了connections元素。relationships节点下增加子节点relationship，kind为action。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;                             &amp;lt;state key=&amp;quot;highlighted&amp;quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 &amp;lt;color key=&amp;quot;titleColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                             &amp;lt;/state&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;connections&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                    &amp;lt;action selector=&amp;quot;greeting:&amp;quot; destination=&amp;quot;2&amp;quot; eventType=&amp;quot;touchUpInside&amp;quot; id=&amp;quot;Ua1-dU-BsV&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                                &amp;lt;/connections&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                             &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                         &amp;lt;/subviews&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                         &amp;lt;color key=&amp;quot;backgroundColor&amp;quot; white=&amp;quot;1&amp;quot; alpha=&amp;quot;1&amp;quot; colorSpace=&amp;quot;custom&amp;quot; customColorSpace=&amp;quot;calibratedWhite&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;@@ -46,6 +49,7 @@&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;         &amp;lt;class className=&amp;quot;ViewController&amp;quot; superclassName=&amp;quot;UIViewController&amp;quot;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;             &amp;lt;source key=&amp;quot;sourceIdentifier&amp;quot; type=&amp;quot;project&amp;quot; relativePath=&amp;quot;./Classes/ViewController.h&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;             &amp;lt;relationships&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;+                &amp;lt;relationship kind=&amp;quot;action&amp;quot; name=&amp;quot;greeting:&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                 &amp;lt;relationship kind=&amp;quot;outlet&amp;quot; name=&amp;quot;statusLabel&amp;quot; candidateClass=&amp;quot;UILabel&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;             &amp;lt;/relationships&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;         &amp;lt;/class&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AppDelegate.h&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;interface BIDAppDelegate &lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt; UIResponder &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt;UIApplicationDelegate&lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;property (strong, nonatomic) UIWindow&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; window;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;end&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AppDelegate.m&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;application:didFinishLaunchingWithOptions&lt;/p&gt;
&lt;p&gt;这是一个多重参数函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;applicationWillResignActive&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;表格使用&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;拖入表格，选中并关联到下面的 View Controller，关联上dataSource和Delegate。&lt;/li&gt;
&lt;li&gt;ViewController.h中类要实现UITableViewDataSource和UITableViewDelegate。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;interface MasterViewController &lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt; UITableViewController &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt;UITableViewDelegate, UITableViewDataSource&lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;property (strong, nonatomic) NSArray&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; listData;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;ViewController.m中增加如下函数：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;synthesize listData;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;-&lt;/span&gt; (NSInteger)tableView&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;(UITableView&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; )tableView numberOfRowsInSection&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;(NSInteger)section {&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; [self.listData count];&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;-&lt;/span&gt; (UITableViewCell&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; )tableView&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;(UITableView&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; )tableView cellForRowAtIndexPath&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;(NSIndexPath&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; )indexPath {&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;static&lt;/span&gt; NSString&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; SimpleTableIdentifier &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;@&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;SimpleTableIndentifier&amp;quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    UITableViewCell&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; cell &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; [tableView dequeueReusableCellWithIdentifier&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;SimpleTableIdentifier];&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;( cell &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; nil) {&lt;br/&gt;        cell &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; [[UITableViewCell alloc] initWithStyle&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;UITableViewCellStyleDefault reuseIdentifier&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;SimpleTableIdentifier];&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    NSUInteger row &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; [indexPath row];&lt;br/&gt;    cell.textLabel.text &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; [listData objectAtIndex&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt;row];&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; cell;&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;多视图控制&lt;/h2&gt;
&lt;p&gt;注意segue的使用，一定要聚焦到特定的控件上，比如button，而不是它的父控件，否则无效。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.raywenderlich.com/5138/beginning-storyboards-in-ios-5-part-1&quot;&gt;http://www.raywenderlich.com/5138/beginning-storyboards-in-ios-5-part-1&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>iDevice保修查询</title>
   <link href="/2012/03/14/idevice.html"/>
   <updated>2012-03-14T00:00:00+08:00</updated>
   <id>h/2012/03/14/idevice</id>
   <content type="html">&lt;p&gt;最近开始学习iOS开发，参照“果粉保修查询”做了一个。&lt;/p&gt;
&lt;p&gt;果粉保修查询自从被Apple官方封禁以后就没见有更新了，在wifi下会闪退。&lt;/p&gt;
&lt;p&gt;这个程序刚有雏形，还不完善，本着TDD的思想，在此放出，希望大家多提意见。&lt;/p&gt;
&lt;p&gt;下载地址：http://code.google.com/p/amoblin/downloads/list&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Jekyll Rst Config</title>
   <link href="/2012/03/13/jekyll-rst-config.html"/>
   <updated>2012-03-13T00:00:00+08:00</updated>
   <id>h/2012/03/13/jekyll-rst-config</id>
   <content type="html">&lt;div class=&quot;section&quot; id=&quot;jekyll-restructuredtext&quot;&gt;
&lt;h2&gt;jekyll restructuredText配置&lt;/h2&gt;
&lt;p&gt;jekyll很好用，可惜默认是用markdown的，而我习惯了restructuredText，幸好jekyll支持插件，而刚好有这么一个插件。&lt;/p&gt;
&lt;p&gt;jekyll-rst项目：https://github.com/xdissent/jekyll-rst&lt;/p&gt;
&lt;p&gt;安装jekyll-rst插件到jekyll（官方说明)：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; &amp;lt;jekyll-project-path&amp;gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; git submodule add https://github.com/xdissent/jekyll-rst.git _plugins/jekyll-rst&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后把rst文件放到_posts目录下，使用jekyll编译时就会把rst也转换成html了，文件名的格式和md文件名一样。&lt;/p&gt;
&lt;p&gt;但发现一个问题，rst文件中有中文的话，生成html文件为空。没有中文的话就正常。初步判断是编码的问题。&lt;/p&gt;
&lt;p&gt;看了看jekyll-rst的代码，发现jekyll-rst后台使用的是rbst，一个ruby包装的restructuredText转换程序，本质上还是使用自带的rst2html.py来转换。&lt;/p&gt;
&lt;p&gt;单独使用rbst自带的rst2html.py转换，也没问题，奇怪！&lt;/p&gt;
&lt;p&gt;再去rbst的给i他湖边主页转悠，看看Issue里有木有人遇到这种情况，可怜的2个Issue呀。第1个看着像，按照所说的，在transform.py中的 import sys 下面增加两句：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000&quot;&gt;reload&lt;/span&gt;(sys)&lt;br/&gt;sys&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;setdefaultencoding(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用来重置python的编码方式为utf8，再执行jekyll，果然好了。&lt;/p&gt;
&lt;p&gt;现在找到解决方法了，但不优雅。&lt;/p&gt;
&lt;p&gt;这不是rbst的问题，而是python设置的问题。&lt;/p&gt;
&lt;p&gt;查看pyhton的默认编码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; python -c &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;import sys;print sys.getdefaultencoding()&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;ascii&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;果然不是utf8！这下好了，只要设置pyhton默认编码就行了。&lt;/p&gt;
&lt;p&gt;可以在site-packages下创建一个文件sitecustomize.py，这个文件会在pyhton启动时加载。把上面的python脚本内容放入这个文件，搞定！&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;github&quot;&gt;
&lt;h2&gt;放到github&lt;/h2&gt;
&lt;p&gt;github对jekyll做了一些限制，如下：&lt;/p&gt;
&lt;p&gt;safe: true
source: &amp;lt;your pages repo&amp;gt;
destination: &amp;lt;the build dir&amp;gt;
lsi: false
pygments: true&lt;/p&gt;
&lt;p&gt;safe参数表明github不支持扩展，那么也就不能使用jekyll-rst了。这样的话，只能在本地编译了。&lt;/p&gt;
&lt;p&gt;此文是使用jekyll-rst写的第一篇文章。&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>jekyll使用</title>
   <link href="/2012/03/13/jekyll-config.html"/>
   <updated>2012-03-13T00:00:00+08:00</updated>
   <id>h/2012/03/13/jekyll-config</id>
   <content type="html">&lt;p&gt;从GAE的micor-blog到SAE的WP，我以为找到了最终的站点，但jekyll来了，我又开始了迁徙。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;安装jekyll&lt;/h2&gt;
&lt;p&gt;jekyll是用ruby开发的，首先需要安装ruby，安装ruby，最好用版本管理，其中之一是rvm。所以我们先安装rvm，然后，通过rvm安装ruby，然后安装jekyll这个gem包。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;rvm&quot;&gt;
&lt;h3&gt;安装rvm&lt;/h3&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; bash -s stable &amp;lt; &amp;lt;&lt;span style=&quot;color: #666666&quot;&gt;(&lt;/span&gt;curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer&lt;span style=&quot;color: #666666&quot;&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; . &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; # Load RVM function&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;source&lt;/span&gt; ~/.bash_profile&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;ruby&quot;&gt;
&lt;h3&gt;安装ruby&lt;/h3&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; rvm install 1.9.3&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; rvm use 1.9.3&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;gemjekyll&quot;&gt;
&lt;h3&gt;通过gem安装jekyll&lt;/h3&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; gem install jekyll&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;部署jekyll&lt;/h2&gt;
&lt;p&gt;现在算是安装好了jekyll“编译器”，可以用来编译markdown文件，生成html文件。jekyll的要求结构部署如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ls -F&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;_config.yml  _includes/   _layouts/    _posts/      _site/&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;jekyllbootstrap来快速创建：http://jekyllbootstrap.com/&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>花瓣网抓取图片脚本</title>
   <link href="/2012/03/02/huaban.html"/>
   <updated>2012-03-02T00:00:00+08:00</updated>
   <id>h/2012/03/02/huaban</id>
   <content type="html">&lt;p&gt;..id: 18&lt;/p&gt;
&lt;p&gt;最早关注的不是花瓣网，是topit.me，这个网站不错，格调很高雅。&lt;/p&gt;
&lt;p&gt;后来听说了Pinterest，然后是国内的花瓣网。花瓣网上主题，分类比较明确，看了页面，
组织也整齐，于是写了个花瓣网的图片抓取脚本。&lt;/p&gt;
&lt;p&gt;其中有一个小问题，就是抓取的专辑beauty页面中，由于它是下拉刷新加载页面的，使用
urlretrieve不能下载下来，只能借助外部的curl了。有高手能解决的，还请不吝赐教。&lt;/p&gt;
&lt;p&gt;代码下载地址: &lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/1956744&quot;&gt;https://gist.github.com/1956744&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;内容不多，直接贴下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;# -*- coding: utf8 -*-&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;# author: amoblin &amp;lt;amoblin@163.com&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;sys&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;re&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;urllib2&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;os&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;urllib&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;beauty_url &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;http://huaban.com/favorite/beauty/&amp;quot;&lt;/span&gt;&lt;br/&gt;pin_re &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;&amp;lt;a href=&amp;quot;/pins/(.+?)/&amp;quot;&amp;#39;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;get_img_url&lt;/span&gt;(pin):&lt;br/&gt;    pin_url &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;http://huaban.com/pins/&lt;/span&gt;&lt;span style=&quot;color: #BB6688; font-weight: bold&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;/&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;%&lt;/span&gt; pin&lt;br/&gt;    img_url_re &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;&amp;lt;img alt=&amp;quot;采集图片&amp;quot; src=&amp;quot;(.+?)&amp;quot;&amp;#39;&lt;/span&gt;&lt;br/&gt;    pg &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; urllib2&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;urlopen(pin_url)&lt;br/&gt;    content &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; pg&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;read()&lt;br/&gt;    pg&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;close()&lt;br/&gt;    img_url &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; re&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;findall(img_url_re, content)[&lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;]&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; img_url&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; __name__ &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;len&lt;/span&gt;(sys&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;argv) &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;2&lt;/span&gt;:&lt;br/&gt;        local_path &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;./huaban&amp;quot;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt;:&lt;br/&gt;        local_path &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; sys&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;argv[&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;]&lt;br/&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #AA22FF; font-weight: bold&quot;&gt;not&lt;/span&gt; os&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;path&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;exists(local_path):&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;try&lt;/span&gt;:&lt;br/&gt;            os&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;makedirs(local_path)&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;except&lt;/span&gt; e:&lt;br/&gt;            &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; e&lt;br/&gt;            sys&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;exit(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;pin images will saved to: &lt;/span&gt;&lt;span style=&quot;color: #BB6688; font-weight: bold&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;%&lt;/span&gt; local_path&lt;br/&gt;&lt;br/&gt;    os&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;system(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;curl -s &lt;/span&gt;&lt;span style=&quot;color: #BB6688; font-weight: bold&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt; -o /tmp/huaban.html&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;%&lt;/span&gt; beauty_url)&lt;br/&gt;    content &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;open&lt;/span&gt;(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;/tmp/huaban.html&amp;quot;&lt;/span&gt;)&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;read()&lt;br/&gt;&lt;br/&gt;    pins &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; re&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;findall(pin_re, content)[&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;:]&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;for&lt;/span&gt; pin &lt;span style=&quot;color: #AA22FF; font-weight: bold&quot;&gt;in&lt;/span&gt; pins:&lt;br/&gt;        img_url &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; get_img_url(pin)&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;saving pin: &lt;/span&gt;&lt;span style=&quot;color: #BB6688; font-weight: bold&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;%&lt;/span&gt; pin&lt;br/&gt;        urllib&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;urlretrieve(img_url, &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color: #BB6688; font-weight: bold&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color: #BB6688; font-weight: bold&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;.jpeg&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;%&lt;/span&gt; (local_path, pin))&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>ios开发学习</title>
   <link href="/2012/01/20/ios.html"/>
   <updated>2012-01-20T00:00:00+08:00</updated>
   <id>h/2012/01/20/ios</id>
   <content type="html">&lt;!-- id: 17 --&gt;
&lt;p&gt;界面文件 后缀为.nib或.xib，4.2以后改为storyboard。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;真机开发&lt;/h2&gt;
&lt;p&gt;钥匙串访问(keychain)中创建证书，用于程序签名:&lt;/p&gt;
&lt;p&gt;钥匙串访问-&amp;gt; 证书助理 -&amp;gt; 创建证书：&lt;/p&gt;
&lt;p&gt;名称：iPhone Developer
证书类型：代码签名&lt;/p&gt;
&lt;p&gt;修改Xcode：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.0.sdk&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo vi SDKSettings.plist&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将如下内容：
.. code-block:: text&lt;/p&gt;
&lt;blockquote&gt;
15         &amp;lt;key&amp;gt;CODE_SIGNING_REQUIRED&amp;lt;/key&amp;gt;
16         &amp;lt;string&amp;gt;YES&amp;lt;/string&amp;gt;&lt;/blockquote&gt;
&lt;p&gt;中YES改为NO。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; /Developer/Platforms/iPhoneOS.platform/&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将XCiPhoneOSCodeSignContext中的iPhoneOS删掉。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; vi Info.plist&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;:1,$s/XCiPhoneOSCodeSignContext/XCCodeSignContext/g&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;二进制补丁&lt;/h3&gt;
&lt;p&gt;XCode 4.2中路径变了：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; /Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/PrivatePlugIns/iPhoneOS&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Build&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;System&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Support.xcplugin/Contents/MacOS&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dd &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;iPhoneOS&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Build&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;System&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Support &lt;span style=&quot;color: #19177C&quot;&gt;of&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;working &lt;span style=&quot;color: #19177C&quot;&gt;bs&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;500 &lt;span style=&quot;color: #19177C&quot;&gt;count&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;255&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo&lt;/span&gt; -n xc3x26x00x00 &amp;gt;&amp;gt; working&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; chmod 755 working&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; mv iPhoneOS&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Build&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;System&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Support iPhoneOS&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Build&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;System&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Support.orig&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; mv working iPhoneOS&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Build&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;System&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\ &lt;/span&gt;Support&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;自定义生成后脚本&lt;/h3&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; wget http://www.alexwhittemore.com/iphone/gen_entitlements.txt&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; mv gen_entitlements.txt gen_entitlements.py&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; chmod 755 gen_entitlements.py&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;修改工程设置&lt;/h3&gt;
&lt;p&gt;Add Build Phrase -&amp;gt; Add Run Script，输入以下内容：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000&quot;&gt;export &lt;/span&gt;&lt;span style=&quot;color: #19177C&quot;&gt;CODESIGN_ALLOCATE&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/codesign_allocate&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;[&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;${PLATFORM_NAME}&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;iphoneos&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;]&lt;/span&gt;; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;then&lt;/span&gt;&lt;br/&gt;/Developer/iphoneentitlements401/gen_entitlements.py &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;my.company.${PROJECT_NAME}&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${PROJECT_NAME}.xcent&amp;quot;&lt;/span&gt;;&lt;br/&gt;codesign -f -s &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;iPhone Developer&amp;quot;&lt;/span&gt; --entitlements &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/${PROJECT_NAME}.xcent&amp;quot;&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}/&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;fi&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class=&quot;reference external&quot; href=&quot;http://hi.baidu.com/jaywclove/blog/item/0782355562849cdab645ae14.html&quot;&gt;http://hi.baidu.com/jaywclove/blog/item/0782355562849cdab645ae14.html&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;iosunix&quot;&gt;
&lt;h2&gt;iOS中Unix环境配置&lt;/h2&gt;
&lt;p&gt;软件源地址：/etc/apt/sources.list.d/&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;安装aptitude：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; apt-get install aptitude&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;使用aptitude搜索软件包：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; aptitude search vim&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Linux/Unix用户必备工具：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo apt-get install less vim git python screen&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过命令行发短信：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo apt-get install sendsms&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;iOS中常用命令&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;重启SpringBoard&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo sbreload&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;重启iphone&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo reboot&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://slj.me/2010/10/50-open-source-iphone-apps-for-iphone-developers/&quot;&gt;http://slj.me/2010/10/50-open-source-iphone-apps-for-iphone-developers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/haqu/tweejump.git&quot;&gt;https://github.com/haqu/tweejump.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/freshbooks-addons/freshbooks-iphone-project.git&quot;&gt;https://github.com/freshbooks-addons/freshbooks-iphone-project.git&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>bash + screen + vim 配置</title>
   <link href="/2011/12/23/bash%2Bscreen%2Bvim-conf.html"/>
   <updated>2011-12-23T00:00:00+08:00</updated>
   <id>h/2011/12/23/bash+screen+vim-conf</id>
   <content type="html">&lt;!-- id: 16 --&gt;
&lt;p&gt;screen默认主键是C-a，这个很不方便，C-a在emacs风格的bash下是到行首，而在vim中是增1。&lt;/p&gt;
&lt;p&gt;最好改为其他键。由于screen的快捷键大多在键盘左半区域，所以最好也在左边。&lt;/p&gt;
&lt;p&gt;C-q, C-s 终端占用，不能使用。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;bashemacs&quot;&gt;
&lt;h2&gt;bash的emacs风格快捷键（部分）&lt;/h2&gt;
&lt;p&gt;C-w 清空输入
C-e 行尾
C-r 历史搜索
C-t 交换字母
C-a 行首
C-f 右移
C-z 暂停
C-c 结束&lt;/p&gt;
&lt;p&gt;可以选择的：C-t, C-x, C-v&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;vim&quot;&gt;
&lt;h2&gt;vim普通模式键盘绑定&lt;/h2&gt;
&lt;p&gt;C-w 切换窗口
C-e 上升1行
C-r redo
C-t pop标签栈
C-a 增1
C-d 下半页
C-f 下一页
C-x 减1
C-v 块操作&lt;/p&gt;
&lt;p&gt;可以选择的：C-s, C-x, C-c&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;结论&lt;/h2&gt;
&lt;p&gt;取交集得： C-x&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;mac&quot;&gt;
&lt;h2&gt;Mac下使用&lt;/h2&gt;
&lt;p&gt;由于mac下只有左边有Control，所以需要选择一个右边的按键。&lt;/p&gt;
&lt;p&gt;vim中：&lt;/p&gt;
&lt;p&gt;C-p 上一个文件
C-n 下一个文件
C-b 上一页
C-o 还没搞清楚
C-u 上半页
C-[ 不能用，否则vim中无法使用escape键。
C-] ctags中定位tag。&lt;/p&gt;
&lt;p&gt;bash中：
C-l 清屏
C-m 不能用，否则bash中无法回车。
C-k&lt;/p&gt;
&lt;p&gt;综上，选择使用C-，在screen中配置为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;escape ^\\&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://houbolin.cn/blog/2009/12/03/linux-%E4%B8%8Bscreen%E5%91%BD%E4%BB%A4/&quot;&gt;http://houbolin.cn/blog/2009/12/03/linux-%E4%B8%8Bscreen%E5%91%BD%E4%BB%A4/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>vim技巧</title>
   <link href="/2011/12/15/vim-skill.html"/>
   <updated>2011-12-15T00:00:00+08:00</updated>
   <id>h/2011/12/15/vim-skill</id>
   <content type="html">&lt;!-- id: 14 --&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;查看光标处系统函数man手册：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;shift + k&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;2&quot;&gt;
&lt;li&gt;c代码折叠&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于如下风格的c代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;test&lt;/span&gt;() {&lt;br/&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;) {&lt;br/&gt;        printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    } &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;        printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;you should never see this.&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;switch&lt;/span&gt;(ch) {&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:&lt;br/&gt;            printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;break&lt;/span&gt;;&lt;br/&gt;        &lt;span style=&quot;color: #A0A000&quot;&gt;default:&lt;/span&gt;&lt;br/&gt;            printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;            &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;break&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;while&lt;/span&gt;(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;) {&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;) {&lt;br/&gt;            &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;break&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;you should never see this.&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;折叠结果如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt; &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;test&lt;/span&gt;() {&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;2&lt;/span&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;3&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;+---&lt;/span&gt;  &lt;span style=&quot;color: #666666&quot;&gt;2&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;行&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt;(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;) {&lt;span style=&quot;color: #666666&quot;&gt;---------------------------------------------------&lt;/span&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;5&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;+---&lt;/span&gt;  &lt;span style=&quot;color: #666666&quot;&gt;3&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;行&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt; } &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt; {&lt;span style=&quot;color: #666666&quot;&gt;--------------------------------------------------&lt;/span&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;8&lt;/span&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;9&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;+---&lt;/span&gt;  &lt;span style=&quot;color: #666666&quot;&gt;8&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;行&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;switch&lt;/span&gt;(ch) {&lt;span style=&quot;color: #666666&quot;&gt;----------------------------------------------&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;18&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;+---&lt;/span&gt;  &lt;span style=&quot;color: #666666&quot;&gt;6&lt;/span&gt; &lt;span style=&quot;border: 1px solid #FF0000&quot;&gt;行&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;while&lt;/span&gt;(&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;) {&lt;span style=&quot;color: #666666&quot;&gt;------------------------------------------------&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;24&lt;/span&gt; }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实现上述折叠的vim配置为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;function&lt;/span&gt; MyFoldfun(lineNum)&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; getline(a:lineNum+&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;^{&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;a1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;^}&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum+&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;.\+}.\+{&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;.\+}.\+{&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;a1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;.\+}&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;.\+{&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;a1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39; \+case &amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;a1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum+&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39; \+case &amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;elseif&lt;/span&gt; getline(a:lineNum+&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;)=~&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39; \+default:&amp;#39;&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s1&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt;&lt;br/&gt;        &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;endif&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;endfunction&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;set&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;foldexpr&lt;/span&gt;=MyFoldfun(v:lnum)&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中函数为设置缩进，最后一行设置折叠表达式为上述函数。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Linux C多线程学习</title>
   <link href="/2011/12/15/thread-note.html"/>
   <updated>2011-12-15T00:00:00+08:00</updated>
   <id>h/2011/12/15/thread-note</id>
   <content type="html">&lt;!-- id: 15 --&gt;
&lt;p&gt;linux c多线程库函数的头文件为pthread.h，链接库参数为-lpthread。&lt;/p&gt;
&lt;p&gt;线程创建函数：pthread_create，通过这个函数调用其他函数作为一个线程，被调函数的参数也在pthread_create中给出。注意这里只能有一个参数。如果被调函数多参的话，需要使用其他方法实现，比如封装成一个结构体参数，或者将参数设置为全局变量。&lt;/p&gt;
&lt;p&gt;线程互斥(mutex)&lt;/p&gt;
&lt;p&gt;互斥量(MUTual Exclusion)是线程同步的一种方法。一般用法如下：&lt;/p&gt;
&lt;p&gt;首先定义互斥信号量，并初始化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;pthread_mutex_t count_mutex &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; PTHREAD_MUTEX_INITIALIZER;&lt;br/&gt;pthread_mutex_init(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;count_mutex, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在线程函数中加锁和解锁：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;pthread_mutex_lock(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;count_mutex);&lt;br/&gt;&lt;br/&gt;... some process.&lt;br/&gt;&lt;br/&gt;pthread_mutex_unlock(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;count_mutex);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样中间的处理就是原子的。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>CSF学习笔记</title>
   <link href="/2011/12/12/csf_note.html"/>
   <updated>2011-12-12T00:00:00+08:00</updated>
   <id>h/2011/12/12/csf_note</id>
   <content type="html">&lt;!-- id: 13 --&gt;
&lt;div class=&quot;contents topic&quot; id=&quot;id1&quot;&gt;
&lt;p class=&quot;topic-title first&quot;&gt;目录&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id2&quot; id=&quot;id10&quot;&gt;相关数据结构解析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id3&quot; id=&quot;id11&quot;&gt;初始化CSF数据结构&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#csf-conf-init&quot; id=&quot;id12&quot;&gt;初始化默认值 csf_conf_init&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#config-init&quot; id=&quot;id13&quot;&gt;读取配置文件初始化 config_init&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#mp-init&quot; id=&quot;id14&quot;&gt;初始化内存池 mp_init&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#mod-config-init-module-c&quot; id=&quot;id15&quot;&gt;初始化模块配置: mod_config_init &amp;#64; module.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#pipeline-init-pipeline-c&quot; id=&quot;id16&quot;&gt;初始化管道 pipeline_init &amp;#64; pipeline.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#app-proto-init-protocol-c&quot; id=&quot;id17&quot;&gt;初始化协议模块 app_proto_init &amp;#64; protocol.c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#http-protocol-init-http-c&quot; id=&quot;id18&quot;&gt;http协议钩子设置 protocol_init &amp;#64; http.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id4&quot; id=&quot;id19&quot;&gt;初始化协议服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#socket&quot; id=&quot;id20&quot;&gt;初始化Socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id5&quot; id=&quot;id21&quot;&gt;设置用户和组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#event-handler-init&quot; id=&quot;id22&quot;&gt;事件句柄初始化 event_handler_init&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#http&quot; id=&quot;id23&quot;&gt;http事件处理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#io&quot; id=&quot;id24&quot;&gt;IO模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id6&quot; id=&quot;id25&quot;&gt;CSF线程树研究&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#apache-bench&quot; id=&quot;id26&quot;&gt;Apache Bench 测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id7&quot; id=&quot;id27&quot;&gt;遇到的问题及解决&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id8&quot; id=&quot;id28&quot;&gt;管道描述符错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id9&quot; id=&quot;id29&quot;&gt;响应请求不超过40次错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#ab&quot; id=&quot;id30&quot;&gt;之前ab测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;!-- .. footer:: ###Page### --&gt;
&lt;p&gt;CSF是一个通用服务框架(Common Server Frame)，通过动态加载各种服务，如HTTP，FTP，SMTP等，来实现HTTP服务器，FTP服务器，SMTP服务器。&lt;/p&gt;
&lt;p&gt;csfd为主守护进程，由它创建csfd-worker进程。每当csfd-worker进程以外退出后，都会被csfd重新创建，实现自动重启。&lt;/p&gt;
&lt;p&gt;所以核心在csfd-worker程序。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id10&quot;&gt;相关数据结构解析&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;csf默认配置文件是当前目录下的csf.conf，可以通过-f参数指定。&lt;/p&gt;
&lt;p&gt;和配置文件中信息对应的结构体主要有如下几个：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;26&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; csf_conf {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;27&lt;/span&gt;     COMM_PROTO_OPS &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; cp_ops;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;28&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; server_port;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;29&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; server_timeout;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;30&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; pipeline_queue_size;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;31&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; daemonize;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;32&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; request_timeout;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;33&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; monitor_enable;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;34&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; monitor_port;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;35&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    server_protocol[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;36&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    protocol_module[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;37&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    user[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;38&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    group[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;39&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    log_ident[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;40&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    bind_ip[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;41&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    mod_dir[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;    monitor_bind_ip[CONF_ITEM_LEN &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;43&lt;/span&gt; } CSF_CONF;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在全局变量main_conf保存。&lt;/p&gt;
&lt;p&gt;其中第一个数据成员cp_ops是指向TCP或UDP结构体的指针，它指向的结构体定义为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;36&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; comm_proto_ops {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;37&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; proto_name;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;38&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; sockfd;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;39&lt;/span&gt;     PROTO_INIT &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; proto_init;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;40&lt;/span&gt;     CONN_HANDLER &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; conn_handler;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;41&lt;/span&gt;     SOCKET_EVENT_HANDLER&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; event_handler;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt;     SEND_BACK&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; send_back;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;43&lt;/span&gt;     SOCKET_SENDFILE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; send_file;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;44&lt;/span&gt;     WRITEV_BACK&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; writev_back;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;45&lt;/span&gt;     CONN_CLOSE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; conn_close;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;46&lt;/span&gt;     PORT_CLOSE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; port_close;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;47&lt;/span&gt;     WRITE_BACK&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; write_back;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;48&lt;/span&gt; };&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;全局变量csf_comm_proto，是含有2个上述结构体元素的数组，元素分别为TCP，UDP的定义实现。保存tcp和udp类型的服务。根据服务的类型，cp_ops指向对应的数组元素。&lt;/p&gt;
&lt;p&gt;tcp类型的结构定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;46&lt;/span&gt; COMM_PROTO_OPS tcp_ops &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;47&lt;/span&gt;     .proto_name &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;tcp&amp;quot;&lt;/span&gt;,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;48&lt;/span&gt;     .sockfd &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;-1&lt;/span&gt;,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;49&lt;/span&gt;     .proto_init &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_socket_init,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;50&lt;/span&gt;     .conn_handler &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_conn_handler,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;51&lt;/span&gt;     .event_handler &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_socket_event_handler,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;52&lt;/span&gt;     .send_back &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_send_back,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;53&lt;/span&gt;     .conn_close &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_conn_close,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;54&lt;/span&gt;     .port_close &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_port_close,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;55&lt;/span&gt;     .send_file &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_sendfile,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;56&lt;/span&gt;     .writev_back &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_writev,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;57&lt;/span&gt;     .write_back &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; tcp_write&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;58&lt;/span&gt; };&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id11&quot;&gt;初始化CSF数据结构&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;csfd-worker根据配置文件进行模块参数的初始化，由函数csf_init负责。&lt;/p&gt;
&lt;p&gt;具体分为：初始化默认值，读取配置文件初始化。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;csf-conf-init&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id12&quot;&gt;初始化默认值 csf_conf_init&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;将main_conf的各项初始化为默认值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;config-init&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id13&quot;&gt;读取配置文件初始化 config_init&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;根据配置文件中[server]段初始化相应数据成员。&lt;/li&gt;
&lt;li&gt;根据服务的类型（tcp or udp）挂上对应类型的结构体。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;mp-init&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id14&quot;&gt;初始化内存池 mp_init&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;红黑树内存池。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;mod-config-init-module-c&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id15&quot;&gt;初始化模块配置: mod_config_init &amp;#64; module.c&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;根据mod_dir动态加载模块。比如http.so，同时将动态库函数_protocol_init和静态全局变量_protocol_init对应起来。&lt;/li&gt;
&lt;li&gt;加载其后各段。比如http_io.so, http_upload.so，同时_mod_init函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pipeline-init-pipeline-c&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id16&quot;&gt;初始化管道 pipeline_init &amp;#64; pipeline.c&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;初始化多线程队列&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;36&lt;/span&gt; &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Request Queue Control Block \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;37&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; rqcb {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;38&lt;/span&gt;     pthread_mutex_t         mutex;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;39&lt;/span&gt;     pthread_cond_t          cond;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;40&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; request_queue    request_head;    &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* The request queue head \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;41&lt;/span&gt;     RB_ENTRY(rqcb)          stage_entry;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; rqcb            &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; next_rqcb;   &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* next request queue \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;43&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;                    mod_name[MAX_MOD_NAME_LEN];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;44&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;                     queue_id;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;45&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* if the pipeline need to return when it done, set it to true*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;46&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                queue_len; &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* current request queue length \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;47&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                thread_num; &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* current request queue length \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;48&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                delay;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;49&lt;/span&gt;     REQUEST_INIT           &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; request_init;   &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Each request initializer \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;50&lt;/span&gt;     REQUEST_DEINIT         &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; request_deinit;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Each request initializer \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;51&lt;/span&gt;     REQUEST_HANDLER        &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; request_handler;  &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Each request handler \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;52&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                rqst_num;         &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* request number \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;53&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint64_t&lt;/span&gt;                request_count;    &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* how many submitted requests \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;54&lt;/span&gt; } RQCB;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;app-proto-init-protocol-c&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id17&quot;&gt;初始化协议模块 app_proto_init &amp;#64; protocol.c&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;定义ppp是如下的结构体变量：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;38&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; protocol_parameter{&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;39&lt;/span&gt;     VCB&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; vcbp;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;40&lt;/span&gt;     PROTO_CONFIG&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; pcp;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;41&lt;/span&gt;     COMM_HANDLE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; chp;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt; } PROTO_PARA;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中pcp(协议配置指针 protocol config pointer)指向全局变量pc：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;20&lt;/span&gt; PROTO_CONFIG pc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;21&lt;/span&gt;     .protocol_session_start &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;22&lt;/span&gt;     .protocol_session_entry &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;23&lt;/span&gt;     .protocol_session_end &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;24&lt;/span&gt;     .local_entry &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;25&lt;/span&gt; };&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PROTO_CONFIG结构体定义如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;31&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; protocol_configs {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;32&lt;/span&gt;     PROTOCOL_SESSION_START&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; protocol_session_start;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;33&lt;/span&gt;     PROTOCOL_SESSION_ENTRY&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; protocol_session_entry;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;34&lt;/span&gt;     PROTOCOL_SESSION_END&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; protocol_session_end;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;35&lt;/span&gt;     LOCAL_ENTRY&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; local_entry;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;36&lt;/span&gt; } PROTO_CONFIG;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来使用动态链接库函数指针执行初始化函数：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;90&lt;/span&gt;         rv &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; _protocol_init(prot_name, &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;ppp);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;具体执行的函数在libprotocol.c中。主要做以下几方面工作：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;初始化日志&lt;/li&gt;
&lt;li&gt;初始化内存池&lt;/li&gt;
&lt;li&gt;初始化监控器&lt;/li&gt;
&lt;li&gt;初始化提交请求&lt;/li&gt;
&lt;li&gt;设置全局变量g_pcp指针指向全局变量pcp&lt;/li&gt;
&lt;li&gt;执行服务的protocol_init函数进行服务初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;http-protocol-init-http-c&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id18&quot;&gt;http协议钩子设置 protocol_init &amp;#64; http.c&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;protocol_init 函数主要设置libprotocol中的全局变量g_pcp结构体：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;433&lt;/span&gt;     set_protocol_session_start(http_session_start);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;434&lt;/span&gt;     set_protocol_session_entry(http_session_entry);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;435&lt;/span&gt;     set_protocol_session_end(http_session_end);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最终将http会话处理设置到全局变量pc中去。从而使：&lt;/p&gt;
&lt;p&gt;pc.protocol_session_start = http_session_start
pc.protocol_session_entry = http_session_entry
pc.protocol_session_end = http_session_end&lt;/p&gt;
&lt;p&gt;至此，所有钩子绑定完毕。一切就绪。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id19&quot;&gt;初始化协议服务&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;初始化完毕后，开始启动服务。&lt;/p&gt;
&lt;p&gt;由server.c文件中server_init函数完成。根据初始化的内容，设置对应的协议服务。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;socket&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id20&quot;&gt;初始化Socket&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用proto_init指向的函数初始化Socket。比如HTTP的话是TCP套接字。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;252&lt;/span&gt;         fd &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; ops&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;proto_init(conf&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;server_port,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;253&lt;/span&gt;             conf&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;bind_ip, conf&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;server_timeout);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;254&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id21&quot;&gt;设置用户和组&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(在配置文件中指定)，比如以www用户和组运行程序。以提高安全性。&lt;/p&gt;
&lt;p&gt;程序禁止以root用户和wheel组启动。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;event-handler-init&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id22&quot;&gt;事件句柄初始化 event_handler_init&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;初始化管道，非阻塞。&lt;/p&gt;
&lt;p&gt;设置事件库 socket_event_handler（之前应该已经绑定到tcp或upd上了）。&lt;/p&gt;
&lt;p&gt;如果绑定到tcp，则使用tcp_socket_event_handler处理。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;http&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id23&quot;&gt;http事件处理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;当有用户请求时，执行一遍http_session_start, http_session_entry, http_session_end。&lt;/p&gt;
&lt;p&gt;根据请求的类型进入不同的流水线，以及不同的level。排到线程队列中去。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;io&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id24&quot;&gt;IO模型&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一个模块(module)可能包含多个管道(pipeline)，每个管道包含多个level，每个level对应一个.so文件。&lt;/p&gt;
&lt;p&gt;每个level都有自己的线程池，各个level之间通过消息队列通信。&lt;/p&gt;
&lt;p&gt;举例来说，http模块包含http和monitor两个管道。http管道包含io和upload两个level，对应http_io.so和http_upload.so文件。每个http请求都分到这两个level中排队，按照FIFO处理。&lt;/p&gt;
&lt;p&gt;前端单线程。&lt;/p&gt;
&lt;p&gt;后端线程池异步。使线程数固定。&lt;/p&gt;
&lt;p&gt;服务器连接套接字的IO类型为非阻塞式。代码在tcp.c中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;733&lt;/span&gt;     retval &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; fcntl(connfd, F_GETFL, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;734&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt;(retval &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;735&lt;/span&gt;         WLOG_ERR(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;fcntl() error: %s&amp;quot;&lt;/span&gt;, strerror(errno));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;736&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;737&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;738&lt;/span&gt;     (&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;)fcntl(connfd, F_SETFL, retval &lt;span style=&quot;color: #666666&quot;&gt;|&lt;/span&gt; O_NONBLOCK);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当建立连接以后，执行connection_made：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;753&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Process the data when the connection is made \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;754&lt;/span&gt;     (&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;)connection_made(csp);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;data.c中connection_made函数体：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;18&lt;/span&gt; &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;19&lt;/span&gt; connection_made(CONN_STATE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; csp)&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;20&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;21&lt;/span&gt;     CONN_INFO&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; cip;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;23&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (csp &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;24&lt;/span&gt;         WLOG_DEBUG(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;csp is NULL!&amp;quot;&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;25&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (CSF_ERR);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;26&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;27&lt;/span&gt;     cip &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;(csp&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;ci);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;29&lt;/span&gt;     ip2str(cip, ip_str, &lt;span style=&quot;color: #666666&quot;&gt;16&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;30&lt;/span&gt;     WLOG_INFO(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Connection made, fd: %d, IP: %s&amp;quot;&lt;/span&gt;, cip&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;fd, ip_str);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;31&lt;/span&gt;     connection_counter&lt;span style=&quot;color: #666666&quot;&gt;++&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;32&lt;/span&gt;     csp&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;data &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; do_protocol_session_start(cip);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;33&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (CSF_OK);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;34&lt;/span&gt; }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看出调用do_protocol_session_start函数。&lt;/p&gt;
&lt;p&gt;而最终调用protocol_session_start函数。&lt;/p&gt;
&lt;p&gt;如前所述，http模块中就是http_session_start函数。&lt;/p&gt;
&lt;p&gt;http_session_start函数设置http_requset相关，保存在HTTP_REQUEST类型的变量my_http_req中：&lt;/p&gt;
&lt;p&gt;HTTP_REQUEST结构体定义如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt; &lt;span style=&quot;color: #666666&quot;&gt;96&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; http_request_data&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;97&lt;/span&gt; {&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;98&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; request_fd;             &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* the file descriptor of socket \*/&lt;/span&gt;&lt;br/&gt; &lt;span style=&quot;color: #666666&quot;&gt;99&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; request_data;         &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* the full request string \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;100&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; request_data_backup;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;101&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; upload_buf[UPLOAD_BUF_SIZE &lt;span style=&quot;color: #666666&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;102&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;ssize_t&lt;/span&gt; upload_buf_len;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;103&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; is_entity_exist;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;104&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; is_header_processed;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;105&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; is_to_submit;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;106&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; is_submitted;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;107&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt; state;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;108&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;ssize_t&lt;/span&gt; request_entity_len;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;109&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;ssize_t&lt;/span&gt; request_entity_sent_bytes;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;110&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;ssize_t&lt;/span&gt; request_len;        &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* length of request data \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;111&lt;/span&gt;     HEADER_FIELD&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; header_field_ptr;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;112&lt;/span&gt;     CONN_INFO&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; cip;             &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* csf cip struct \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;113&lt;/span&gt;     STQ_HEAD patch_head;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;114&lt;/span&gt; }HTTP_REQUEST;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;http_session_entry调用submit_request函数来发送到管道。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;354&lt;/span&gt;         r &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; submit_request(&lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;, rqstpp, req_info, http_data_cleaner, http_request_responder,&lt;span style=&quot;color: #666666&quot;&gt;||&lt;/span&gt;       &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;submit_request函数设置REQUEST结构体类型变量rqstp.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;16&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; request {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;17&lt;/span&gt;     TAILQ_ENTRY(request)    request_entry;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;18&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* When the whole request data flow run over, call it \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;19&lt;/span&gt;     REQUEST_RESPONDER      &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; request_responder;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;20&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;                   &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; proctocl_data; &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* lmtp_data_t \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;21&lt;/span&gt;     DATA_CLEANER           &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; data_cleaner;  &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* To clean proctocl_data \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;22&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                pipeline_id;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;23&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint64_t&lt;/span&gt;                tid;            &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Transation ID \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;24&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                nstage;         &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* stage counter*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;25&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;long&lt;/span&gt;                    clock;          &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* clock of request for timeout \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;26&lt;/span&gt;     CONN_STATE             &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; csp;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;27&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;                     flags;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;28&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;                     ret;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;29&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;                     err;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;30&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;uint32_t&lt;/span&gt;                cancelled;      &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* cancelled is set by main thread \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;31&lt;/span&gt; } REQUEST;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;request_responder保存响应处理函数。从前一个代码段可以看出，http中是http_request_responder&lt;/p&gt;
&lt;p&gt;然后发送到管道：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;250&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Play some tricks with the tmp_request_queue queue \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;251&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; (TAILQ_EMPTY(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;(pcbp&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;tmp_request_head))) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;252&lt;/span&gt;         rc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; send_to_pipeline(pcbp, rqstp, flags, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;253&lt;/span&gt;         &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (rc &lt;span style=&quot;color: #666666&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;254&lt;/span&gt;             &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (SUBMIT_GENERIC_ERROR);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;255&lt;/span&gt;         }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;256&lt;/span&gt;     } &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;257&lt;/span&gt;         &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Secondary path. We have blocked requests to deal with \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;258&lt;/span&gt;         &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* add the request to the chain \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;259&lt;/span&gt;         rc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; send_to_pipeline(pcbp, rqstp, flags, &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;260&lt;/span&gt;         &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (rc &lt;span style=&quot;color: #666666&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;261&lt;/span&gt;             &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (SUBMIT_GENERIC_ERROR);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;262&lt;/span&gt;         }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;263&lt;/span&gt;     }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;send_to_pipeline中使用了多线程处理。&lt;/p&gt;
&lt;p&gt;管道也是非阻塞的，见server.c中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;131&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Set socket pipe \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;132&lt;/span&gt;     rc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; pipe(done_pipe);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;133&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (rc &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;134&lt;/span&gt;         WLOG_ERR(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Can&amp;#39;t create pipe&amp;quot;&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;135&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; rc;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;136&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;137&lt;/span&gt;     done_fd &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; done_pipe[&lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;138&lt;/span&gt;     done_fd_read &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; done_pipe[&lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;];&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;139&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;140&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Set nonblocked \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;141&lt;/span&gt;     rc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; fcntl(done_fd, F_GETFL, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;142&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (rc &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;143&lt;/span&gt;         WLOG_ERR(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;fcntl() error: %s&amp;quot;&lt;/span&gt;, strerror(errno));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;144&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; rc;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;145&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;146&lt;/span&gt;     (&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;)fcntl(done_fd, F_SETFL, rc &lt;span style=&quot;color: #666666&quot;&gt;|&lt;/span&gt; O_NONBLOCK);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;147&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;148&lt;/span&gt;     rc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; fcntl(done_fd_read, F_GETFL, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;149&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (rc &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;150&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; rc;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;151&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;152&lt;/span&gt;     (&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;)fcntl(done_fd_read, F_SETFL, rc &lt;span style=&quot;color: #666666&quot;&gt;|&lt;/span&gt; O_NONBLOCK);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id25&quot;&gt;CSF线程树研究&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;修改csf.conf配置文件，关闭monitor，http_io和http_upload线程值都为0时，线程树如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; pstree -p 16298&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;csfd(16298)───csfd-worker(16299)───{csfd-worker}(16300)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开monitor，http_io和http_upload线程值仍为0时如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; pstree -p 16341&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;csfd(16341)───csfd-worker(16342)─┬─{csfd-worker}(16343)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 └─{csfd-worker}(16344)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关闭monitor，http_io线程值为1，http_upload值为0时&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; pstree -p 16465&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;csfd(16465)───csfd-worker(16466)─┬─{csfd-worker}(16467)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 └─{csfd-worker}(16468)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关闭monitor，http_io线程值为0，http_upload值为1时同上：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; pstree -p 16493&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;csfd(16493)───csfd-worker(16494)─┬─{csfd-worker}(16495)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 └─{csfd-worker}(16496)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开monitor，http_io和http_upload的线程值都为1时：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; pstree -p 16534&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;csfd(16534)───csfd-worker(16535)─┬─{csfd-worker}(16536)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 ├─{csfd-worker}(16537)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 ├─{csfd-worker}(16538)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;                                 └─{csfd-worker}(16539)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中16537-16539包含上述三个服务。&lt;/p&gt;
&lt;p&gt;这种情况下使用ab做测试：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 40 -c 5 http://localhost/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Licensed to The Apache Software Foundation, http://www.apache.org/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Benchmarking localhost (be patient)...apr_socket_recv: Connection refused (111)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total of 35 requests completed&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过大量测试，发现响应上限仍然在35左右。&lt;/p&gt;
&lt;p&gt;修改配置文件恢复默认值：打开monitor，http_io和http_upload线程数都为200：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; pstree 16963&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;csfd───csfd-worker───402*[{csfd-worker}]&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里有402个线程。其中200个http_io，200个http_upload，1个monitor，1个系统本身的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;apache-bench&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id26&quot;&gt;Apache Bench 测试&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;csf服务器地址为http://10.210.209.25:8080/ ，配置线程数256。&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;从10.210.209.26发送请求5000次，并发数200：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 5000 -c 200 http://10.210.209.25:8080/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Software:        CSF&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Hostname:        10.210.209.25&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Port:            8080&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Path:          /&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Length:        135 bytes&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Concurrency Level:      200&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time taken for tests:   3.8833 seconds&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Complete requests:      5000&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Failed requests:        2&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;   (Connect: 0, Length: 2, Exceptions: 0)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Write errors:           0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total transferred:      1464891 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;HTML transferred:       674865 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Requests per second:    1661.77 [#/sec] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       120.353 [ms] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       0.602 [ms] (mean, across all concurrent requests)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Transfer rate:          475.27 [Kbytes/sec] received&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connection Times (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;              min  mean[+/-sd] median   max&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connect:        0    7 152.8      0    3000&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Processing:     1   52  43.3     50    1462&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Waiting:        0   51  43.3     50    1460&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total:          6   59 156.4     50    3005&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Percentage of the requests served within a certain time (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  50%     50&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  66%     51&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  75%     52&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  80%     52&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  90%     53&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  95%     54&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  98%     54&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  99%    248&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt; 100%   3005 (longest request)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;对比apache测试（apache默认prefork线程数256）：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 5000 -c 200 http://10.210.209.25:80/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Software:        Apache/2.2.3&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Hostname:        10.210.209.25&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Port:            80&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Path:          /&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Length:        528 bytes&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Concurrency Level:      200&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time taken for tests:   1.418937 seconds&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Complete requests:      5000&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Failed requests:        0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Write errors:           0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total transferred:      3495000 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;HTML transferred:       2640000 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Requests per second:    3523.76 [#/sec] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       56.757 [ms] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       0.284 [ms] (mean, across all concurrent requests)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Transfer rate:          2405.32 [Kbytes/sec] received&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connection Times (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;              min  mean[+/-sd] median   max&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connect:        0    0   0.6      0       5&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Processing:     8   33 145.6     17    1414&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Waiting:        8   33 145.6     17    1413&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total:          8   33 146.1     17    1418&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Percentage of the requests served within a certain time (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  50%     17&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  66%     18&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  75%     18&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  80%     18&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  90%     18&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  95%     21&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  98%     28&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  99%   1412&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt; 100%   1418 (longest request)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id7&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id27&quot;&gt;遇到的问题及解决&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id8&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id28&quot;&gt;管道描述符错误&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在HTTP事件处理中，通过http_session_entry函数来响应用户请求。&lt;/p&gt;
&lt;p&gt;处理用户请求时，在提交到管道时，出现了错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;349&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* submit to pipeline \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;350&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; (req_info&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;is_to_submit &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;351&lt;/span&gt;     {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;352&lt;/span&gt;         req_info&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;is_to_submit &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;353&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;354&lt;/span&gt;         r &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; submit_request(&lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;, rqstpp, req_info, http_data_cleaner, http_request_responder, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;355&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; (r &lt;span style=&quot;color: #666666&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;)&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;356&lt;/span&gt;         {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;357&lt;/span&gt;             WLOG_ERR(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;pipeline error. %ld&amp;quot;&lt;/span&gt;, r);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;358&lt;/span&gt;             &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; PROTOCOL_DISCONNECT;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;359&lt;/span&gt;         }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;发现是r为-1， 从submit_request中查看r值：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;185&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (pipeline_id &lt;span style=&quot;color: #666666&quot;&gt;&amp;gt;=&lt;/span&gt; PIPELINE_SIZE) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;186&lt;/span&gt;         WLOG_ERR(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;pipeline_id %d 超过PIPELINE_SIZE %d !&amp;quot;&lt;/span&gt;, pipeline_id, PIPELINE_SIZE);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;187&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (SUBMIT_GENERIC_ERROR);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;188&lt;/span&gt;     }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加了一条显示错误日志的信息，运行显示如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;submit_request[186]: &amp;quot;pipeline_id -1283393984 超过PIPELINE_SIZE 16 !&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;pipeline并不是期望的小整数。&lt;/p&gt;
&lt;p&gt;定位到protocol.c中如下函数&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;44&lt;/span&gt; &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;45&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;do_protocol_session_entry&lt;/span&gt;(&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; csp,&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;46&lt;/span&gt;     CONN_INFO&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; cip, &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; prot_data, &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; data, &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; len)&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;47&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;48&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; (pc.protocol_session_entry &lt;span style=&quot;color: #666666&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;49&lt;/span&gt;         printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;%d&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;, csp);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;50&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (pc.protocol_session_entry(csp, cip, prot_data, data, len));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;51&lt;/span&gt;     } &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;52&lt;/span&gt;         WLOG_ERR(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;protocol_session_entry() is NULL!&amp;quot;&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;53&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (CSF_OK);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;54&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;55&lt;/span&gt; }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中50行的pc.protocol_session_entry是函数指针，指向上述http_session_entry函数.&lt;/p&gt;
&lt;p&gt;从而csp是函数http_session_entry 中形参pipeline_id的实参。&lt;/p&gt;
&lt;p&gt;do_protocol_session_entry由data.c中data_received函数调用，csf传入。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;36&lt;/span&gt; &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;37&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;data_received&lt;/span&gt;(CONN_STATE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; csp, &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; data, &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; len)&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;38&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;39&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;if&lt;/span&gt; (data &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;40&lt;/span&gt;         WLOG_DEBUG(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;data is NULL!&amp;quot;&lt;/span&gt;);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;41&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (CSF_OK);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;44&lt;/span&gt;     ((&lt;span style=&quot;color: #B00040&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; )data)[len] &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;46&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;if&lt;/span&gt; (csp &lt;span style=&quot;color: #666666&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;47&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (do_protocol_session_entry(&lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;, &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt;, data, len));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;48&lt;/span&gt;     } &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;49&lt;/span&gt;         printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;%d&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;, csp);&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;50&lt;/span&gt;         &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; (do_protocol_session_entry(csp, &lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;(csp&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;ci),&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;51&lt;/span&gt;             csp&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;data, data, len));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;52&lt;/span&gt;     }&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;53&lt;/span&gt; }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;data_received函数由tcp.c中tcp_conn_handler函数调用，&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;622&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;623&lt;/span&gt; tcp_conn_handler(&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; fd, &lt;span style=&quot;color: #B00040&quot;&gt;short&lt;/span&gt; event, &lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; arg)&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;624&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;625&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;ssize_t&lt;/span&gt;         len;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;626&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;             val;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;627&lt;/span&gt;     &lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt;             rc;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;628&lt;/span&gt;     CONN_STATE     &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; csp &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; (CONN_STATE&lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; )arg;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;629&lt;/span&gt;     &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;struct&lt;/span&gt; timeval  tv;&lt;br/&gt;    ...&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;664&lt;/span&gt;         } &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;else&lt;/span&gt; {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;665&lt;/span&gt;             recv_data[len] &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;666&lt;/span&gt;             rc &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; data_received(csp, recv_data, len);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tcp_conn_handler在tcp_socket_event_handler中注册:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;756&lt;/span&gt;     &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;/* Add the new connection event to event loop \*/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;757&lt;/span&gt;     event_set(&lt;span style=&quot;color: #666666&quot;&gt;&amp;amp;&lt;/span&gt;(csp&lt;span style=&quot;color: #666666&quot;&gt;-&amp;gt;&lt;/span&gt;ev), connfd, EV_READ, tcp_conn_handler, csp);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改submit_request函数参数顺序，搞定！ support by terry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id29&quot;&gt;响应请求不超过40次错误&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是amoblin在对http_io.c进行小修改时不小心造成的。看这里：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;539&lt;/span&gt;     memset(file_buffer, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(file_buffer));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;540&lt;/span&gt;     memset(http_200, &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(http_200));&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;541&lt;/span&gt;     &lt;span style=&quot;color: #0000FF&quot;&gt;while&lt;/span&gt;(fgets(file_buffer, &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;sizeof&lt;/span&gt;(file_buffer), handler) &lt;span style=&quot;color: #666666&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;NULL&lt;/span&gt; ) {&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;542&lt;/span&gt;         strncat(http_200, file_buffer, strlen(file_buffer) );&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;543&lt;/span&gt;     }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由于之前少些了540行，导致在每次请求后，htt_200越来越大，最终数组越界，程序异常退出。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;ab&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id30&quot;&gt;之前ab测试&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用Apache自带的apachebench做测试：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 35 -c 10 http://10.210.209.25/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Licensed to The Apache Software Foundation, http://www.apache.org/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Benchmarking 10.210.209.25 (be patient).....done&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Software:        CSF&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Hostname:        10.210.209.25&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Port:            80&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Path:          /&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Length:        135 bytes&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Concurrency Level:      10&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time taken for tests:   0.481 seconds&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Complete requests:      35&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Failed requests:        2&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;   (Connect: 0, Receive: 0, Length: 2, Exceptions: 0)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Write errors:           0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total transferred:      9504 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;HTML transferred:       4455 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Requests per second:    72.82 [#/sec] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       137.328 [ms] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       13.733 [ms] (mean, across all concurrent requests)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Transfer rate:          19.31 [Kbytes/sec] received&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connection Times (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;              min  mean[+/-sd] median   max&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connect:        5   37  15.9     42      56&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Processing:    18   47  64.8     32     377&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Waiting:        0   29  12.8     29      60&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total:         38   84  62.2     74     398&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Percentage of the requests served within a certain time (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  50%     74&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  66%     78&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  75%     78&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  80%     82&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  90%    101&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  95%    222&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  98%    398&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  99%    398&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt; 100%    398 (longest request)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 35 -c 35 http://10.210.209.25/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Licensed to The Apache Software Foundation, http://www.apache.org/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Benchmarking 10.210.209.25 (be patient).....done&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Software:        CSF&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Hostname:        10.210.209.25&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Server Port:            80&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Path:          /&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Document Length:        135 bytes&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Concurrency Level:      35&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time taken for tests:   0.304 seconds&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Complete requests:      35&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Failed requests:        2&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;   (Connect: 0, Receive: 0, Length: 2, Exceptions: 0)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Write errors:           0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total transferred:      9504 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;HTML transferred:       4455 bytes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Requests per second:    115.00 [#/sec] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       304.360 [ms] (mean)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Time per request:       8.696 [ms] (mean, across all concurrent requests)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Transfer rate:          30.49 [Kbytes/sec] received&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connection Times (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;              min  mean[+/-sd] median   max&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connect:        3   65  30.8     69     121&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Processing:   142  170  17.5    167     197&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Waiting:        0  159  43.2    163     196&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total:        151  235  44.7    231     302&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Percentage of the requests served within a certain time (ms)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  50%    229&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  66%    267&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  75%    276&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  80%    284&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  90%    297&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  95%    302&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  98%    302&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;  99%    302&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt; 100%    302 (longest request)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但有时也会出现这样的结果：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;错误：apr_socket_recv: Connection reset by peer (104)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 35 -c 10 http://10.210.209.25/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Licensed to The Apache Software Foundation, http://www.apache.org/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Benchmarking 10.210.209.25 (be patient)...apr_socket_recv: Connection reset by peer (104)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total of 33 requests completed&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;错误：apr_socket_recv: Connection refused (111)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ab -n 35 -c 1 http://10.210.209.25/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;This is ApacheBench, Version 2.3 &amp;lt;$Revision: 655654 $&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Licensed to The Apache Software Foundation, http://www.apache.org/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Benchmarking 10.210.209.25 (be patient)...apr_socket_recv: Connection refused (111)&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Total of 34 requests completed&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>memcached学习笔记</title>
   <link href="/2011/12/06/memcached-note.html"/>
   <updated>2011-12-06T00:00:00+08:00</updated>
   <id>h/2011/12/06/memcached-note</id>
   <content type="html">&lt;!-- id: 12 --&gt;
&lt;p&gt;ubuntu下安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo apt-get install memcached&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; memcached -d&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认端口号为11211，可以通过ps查看：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; ps -ef|grep memcached&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;telnet&quot;&gt;
&lt;h2&gt;使用Telnet测试：&lt;/h2&gt;
&lt;p&gt;查看状态：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; telnet localhost 11211&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Trying ::1...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Connected to shiroh-laptop.&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Escape character is &amp;#39;^]&amp;#39;.&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;stats&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT pid 2768&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT uptime 4614&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT time 1323677670&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT version 1.4.7&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT libevent 2.0.12-stable&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT total_items 9&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT evictions 0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STAT reclaimed 0&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;END&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;set操作(继续上面的telnet操作）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;set name 0 0 7&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;amoblin&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STORED&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;set gender 0 0 1&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;STORED&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;get操作：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #808080&quot;&gt;get name&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;VALUE name 0 7&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;amoblin&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;END&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;get gender&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;VALUE gender 0 1&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;END&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h3&gt;测试工具&lt;/h3&gt;
&lt;p&gt;自带memslap：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo apt-get install libmemcached-tools&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; memslap&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Google Code Git不能clone的解决</title>
   <link href="/2011/12/06/google-code-git.html"/>
   <updated>2011-12-06T00:00:00+08:00</updated>
   <id>h/2011/12/06/google-code-git</id>
   <content type="html">&lt;!-- id: 11 --&gt;
&lt;p&gt;最近Google Code开始支持Git了，赞一个！&lt;/p&gt;
&lt;p&gt;但使用git clone项目时却出现了下面的错误：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; git clone https://code.google.com/p/leveldb/&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Cloning into leveldb...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;error: SSL: certificate subject name (climb) does not match target host name &amp;#39;code.google.com&amp;#39; while accessing https://code.google.com/p/leveldb/info/refs&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;fatal: HTTP request failed&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;尝试添加网站证书到/etc/ssl/certs/ca-certificates.crt还是不行。&lt;/p&gt;
&lt;p&gt;后来终于发现解决办法：禁用Git的SSL验证。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;export &lt;/span&gt;&lt;span style=&quot;color: #19177C&quot;&gt;GIT_SSL_NO_VERIFY&lt;/span&gt;&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;1&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>使用vim发布wordpress博客</title>
   <link href="/2011/12/04/vim-wordpress_config.html"/>
   <updated>2011-12-04T00:00:00+08:00</updated>
   <id>h/2011/12/04/vim-wordpress_config</id>
   <content type="html">&lt;!-- id: 4 --&gt;
&lt;!-- tags: --&gt;
&lt;p&gt;总体流程：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;使用vim编写reST文档&lt;/li&gt;
&lt;li&gt;使用rst2html.py将reST文档转换为HTML文档&lt;/li&gt;
&lt;li&gt;使用wordpress的XML-RPC接口发布博客&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;rest&quot;&gt;
&lt;h2&gt;reST语法&lt;/h2&gt;
&lt;p&gt;要做到第一步，需要学习reST语法。这个很简单，我常用到的就2个，并且1个还不算reST的～&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h3&gt;语法1：标题。&lt;/h3&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;========================&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;使用vim发布wordpress博客&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;========================&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上下使用相同符号围起来即可。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;语法2：章节及层次&lt;/h3&gt;
&lt;p&gt;章节标题下面用同一个符号重复排序，不要短于标题内容。&lt;/p&gt;
&lt;p&gt;章节之间的层次关系通过符号体现，如果是新符号，那么递进一层，否则和之前符号层次相同。&lt;/p&gt;
&lt;p&gt;从标题符号开始。&lt;/p&gt;
&lt;p&gt;如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;reST语法&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;=========&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;语法1：标题。&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;-------------&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;语法2：章节及层次&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;-----------------&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样第一行就是一级标题，第四行和第六行平行，都是二级标题。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;语法3：换行&lt;/h3&gt;
&lt;p&gt;空行即换行。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h3&gt;语法4：代码&lt;/h3&gt;
&lt;p&gt;先看一个代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;main&lt;/span&gt;() {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实现上述效果的reST代码为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;.. &lt;span style=&quot;color: #AA22FF; font-weight: bold&quot;&gt;code-block&lt;/span&gt;:: c&lt;br/&gt;&lt;br/&gt;    #include &amp;lt;stdio.h&amp;gt;&lt;br/&gt;&lt;br/&gt;    int main() {&lt;br/&gt;        printf(&amp;quot;Hello, world!\n&amp;quot;);&lt;br/&gt;        return 0;&lt;br/&gt;    }&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我常用的就这2个。其他像列表呀什么的，需要再研究。反正一篇码文并茂的博客，学会这4点就OK了～&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;html&quot;&gt;
&lt;h2&gt;生成HTML&lt;/h2&gt;
&lt;p&gt;由reST文档生成HTML的命令是rst2html.py，这个由Docutils软件包提供。&lt;/p&gt;
&lt;p&gt;Ubuntu/Debian下安装如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo apt-get install python-docutils&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装了python的任何系统下，可以通过easy_install安装，但前提是安装了setuptools：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo easy_install docutils&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在就可以通过rst2html.py来生成html文档啦：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; rst2html.py blog.rst blog.html&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但如果文档里有code-block语法的话，会报错。这是因为code-block不是reST提供的，而是由另一个叫做Pygments的软件包提供的：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;docutils&quot;&gt;
&lt;h2&gt;Docutils语法高亮配置&lt;/h2&gt;
&lt;p&gt;Pygments是一个语法高亮的软件，能够将程序源代码生成彩色的HTML文件。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo apt-get install python-pygments&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo easy_install pygments&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请对号入座，执行安装。具体用法请--help。&lt;/p&gt;
&lt;p&gt;这里说说在Docutils中的配置。&lt;/p&gt;
&lt;p&gt;Docutils中的reST不支持语法高亮，但提供了directive扩展，通过注册来自定义处理过程。在reST中自定义的关键字格式如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;.. keyword::&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pygments在directive中举例时用的关键字是sourcecode，但sphinx，rst2pdf等项目都使用code-block作为关键字，amoblin一开始使用sourceocde，后来由于开始使用sphinx和rst2pdf，于是都改用code-block了。&lt;/p&gt;
&lt;p&gt;首先下载rst的directive处理文件：&lt;/p&gt;
&lt;p&gt;然后复制到directives目录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo cp rst-directive.py &lt;span style=&quot;color: #BA2121&quot;&gt;`&lt;/span&gt;python -c &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;import docutils; print docutils.__path__[0]&amp;quot;&lt;/span&gt;/parsers/rst/directives/rst_directive.py&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改directives目录下__init__.py文件，从而注册code-block关键字：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;_directive_registry &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; {&lt;br/&gt;      &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;code-block&amp;#39;&lt;/span&gt;: (&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;rst_directive&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;Pygments&amp;#39;&lt;/span&gt;),&lt;br/&gt;      &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;attention&amp;#39;&lt;/span&gt;: (&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;admonitions&amp;#39;&lt;/span&gt;, &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;Attention&amp;#39;&lt;/span&gt;),&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意这里的第二行是我们添加的注册行，这里使用sphinx风格的关键字code-block。&lt;/p&gt;
&lt;p&gt;到此为止，可以顺利生成彩色代码了。&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;css&quot;&gt;
&lt;h3&gt;使用内嵌css&lt;/h3&gt;
&lt;p&gt;一般情况下，彩色代码块应该是固定的，我希望能够保持其独立性。默认的彩色代码的css配置是单独一块显示的，修改rst_directive.py文件中42行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;41&lt;/span&gt; &lt;span style=&quot;color: #408080; font-style: italic&quot;&gt;# Set to True if you want inline CSS styles instead of classes&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt; INLINESTYLES &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;False&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按照41行所说，改为True：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #666666&quot;&gt;42&lt;/span&gt; INLINESTYLES &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;True&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样生成的就是inline的彩色代码啦。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;使用命令行发布博客&lt;/h2&gt;
&lt;p&gt;当确定了HTML内容可以发布以后，就要提交到wordpress了。这时最希望的就是立刻提交，其他一切都是多余。&lt;/p&gt;
&lt;p&gt;基于此，我在尝试了vimrepress一次以后，立刻放弃了。&lt;/p&gt;
&lt;p&gt;现在我要给大家隆重介绍的是blogpost.py！&lt;/p&gt;
&lt;p&gt;原作者是用asciidoc来写文档，然后用blogpost发布。&lt;/p&gt;
&lt;p&gt;但我们使用reST，这里就用不到blogpost自带的asciidoc接口了。但可以使用html格式发布：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; blogpost.py -d html -t &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;vim wordpress配置&amp;quot;&lt;/span&gt; post blog.html&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;blogpost.py: updating published post &amp;#39;vim wordpress配置&amp;#39;...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;blogpost.py: id: 80&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;blogpost.py: url: http://amoblin.sinaapp.com/?p=80&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上述信息告诉了本篇文章的id号，当修改了reST文档，生成新的post.html以后可以通过id号更新博客：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; wpc.py -d html --post-id 80 update blog.html&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;blogpost.py: updating published post &amp;#39;vim wordpress配置&amp;#39;...&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;blogpost.py: id: 80&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;blogpost.py: url: http://amoblin.sinaapp.com/?p=80&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- 3. 提取正文 --&gt;
&lt;!-- 使用blogpost发布时，需要提取正文。 --&gt;
&lt;!-- .. code-block:: console --&gt;
&lt;!-- $ sed -n '/&lt;div /,/&lt;\/body&gt;/p' blog.html | sed -e '1,3d' -e '$d' -e '$d' &gt; post.html --&gt;
&lt;!-- 这个脚本是乖乖上午查阅资料写出来的。 --&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Docutils + Pygments + VimRePress测试</title>
   <link href="/2011/12/03/ReST%2BPygments%2BVimRePress.html"/>
   <updated>2011-12-03T00:00:00+08:00</updated>
   <id>h/2011/12/03/ReST+Pygments+VimRePress</id>
   <content type="html">&lt;!-- id: 3 --&gt;
&lt;p&gt;本文使用rst2html生成，源代码使用pygments做语法高亮，使用vimrepress提交。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;终端例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello, world!&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;c&quot;&gt;
&lt;h2&gt;c例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #B00040&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;main&lt;/span&gt;() {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;    &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python&quot;&gt;
&lt;h2&gt;python例子&lt;/h2&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #0000FF; font-weight: bold&quot;&gt;sys&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; sys&lt;span style=&quot;color: #666666&quot;&gt;.&lt;/span&gt;platform()&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;print&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;hello, world!&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>wordpress blog id不连续的解决</title>
   <link href="/2011/11/25/wp-id-continus.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/wp-id-continus</id>
   <content type="html">&lt;!-- id: 7 --&gt;
&lt;p&gt;wp两个特性：自动保存(auto save) 和 版本记录(revisions)。&lt;/p&gt;
&lt;p&gt;post_status: auto-draft, draft&lt;/p&gt;
&lt;p&gt;auto-draft是系统自动生成，控制台不可见，draft是草稿。&lt;/p&gt;
&lt;p&gt;post_type: post, revision, page&lt;/p&gt;
&lt;p&gt;post_parent: 描述从哪个id演变而来。revision版的不为0，原始的为0.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;修改配置文件&lt;/h2&gt;
&lt;p&gt;修改wp-config.php,增加两行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;define( &amp;#39;AUTOSAVE_INTERVAL&amp;#39;, 36000 );&lt;br/&gt;define(&amp;#39;WP_POST_REVISIONS&amp;#39;, false );&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一行中单位是秒。 这里每10小时自动保存一次。&lt;/p&gt;
&lt;p&gt;第二行是禁用版本历史的 Revisions的设置选项说明如下：&lt;/p&gt;
&lt;p&gt;There are options, but they are hidden well :) There is a constant (not even filterable) that can be set by a plugin or in your wp-settings.php file:&lt;/p&gt;
&lt;p&gt;WP_POST_REVISIONS:&lt;/p&gt;
&lt;p&gt;true (default), -1: store every revision
false, 0: do not store any revisions (except the one autosave per post)
(int) &amp;gt; 0: store that many revisions (+1 autosave) per post. Old revisions are automatically deleted.&lt;/p&gt;
&lt;p&gt;设置这个变量为false或0的话，还是会保留一个历史版本的。&lt;/p&gt;
&lt;p&gt;另外，在每次新建文章时，会自动保存一个记录，要禁用的话，只能硬编码。&lt;/p&gt;
&lt;p&gt;修改wp-admin/post.php和wp-admin/post-new.php，找到如下内容，注释掉。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;wp_enqueue_script(&amp;#39;autosave&amp;#39;);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改wp-admin/post-new.php，在代码的最后几行，有：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;38 // Show post form.&lt;br/&gt;39 $post = get_default_post_to_edit( $post_type, true);&lt;br/&gt;40 $post_ID = $post-&amp;gt;ID;&lt;br/&gt;41 include(&amp;#39;edit-form-advanced.php&amp;#39;);&lt;br/&gt;42 include(&amp;#39;./admin-footer.php&amp;#39;);&lt;br/&gt;43 ?&amp;gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将第39行最后的true改为false：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;39 $post = get_default_post_to_edit( $post_type, false);&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;硬编码修改&lt;/h3&gt;
&lt;p&gt;此外，还要修改wp-admin/include/post.php，找到如下代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;418     if ( $create_in_db ) {&lt;br/&gt;419         // Cleanup old auto-drafts more than 7 days old&lt;br/&gt;420         $old_posts = $wpdb-&amp;gt;get_col( &amp;quot;SELECT ID FROM $wpdb-&amp;gt;posts WHERE post_status = &amp;#39;auto-draft&amp;#39; AND DATE_SUB( NOW(), INTERVAL 7 DAY ) &amp;gt; post_date&amp;quot; );&lt;br/&gt;421         foreach ( (array) $old_posts as $delete )&lt;br/&gt;422             wp_delete_post( $delete, true ); // Force delete&lt;br/&gt;423         $post_id = wp_insert_post( array( &amp;#39;post_title&amp;#39; =&amp;gt; __( &amp;#39;Auto Draft&amp;#39; ), &amp;#39;post_type&amp;#39; =&amp;gt; $post_type, &amp;#39;post_status&amp;#39; =&amp;gt; &amp;#39;auto-draft&amp;#39; ) );&lt;br/&gt;424         $post = get_post( $post_id );&lt;br/&gt;425         if ( current_theme_supports( &amp;#39;post-formats&amp;#39; ) &amp;amp;&amp;amp; post_type_supports( $post-&amp;gt;post_type, &amp;#39;post-formats&amp;#39; ) &amp;amp;&amp;amp; get_option( &amp;#39;default_post_format&amp;#39; ) )&lt;br/&gt;426             set_post_format( $post, get_option( &amp;#39;default_post_format&amp;#39; ) );&lt;br/&gt;427     } else {&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将if分支中的内容，直到424行，修改成下面的内容：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;418     if ( $create_in_db ) {&lt;br/&gt;419         // modify by akii start&lt;br/&gt;420         global $current_user;&lt;br/&gt;421         $post_auto_draft = $wpdb-&amp;gt;get_row( &amp;quot;SELECT * FROM $wpdb-&amp;gt;posts WHERE post_status = &amp;#39;auto-draft&amp;#39; AND post_author = $current_user-&amp;gt;ID ORDER BY ID ASC LIMIT 1&amp;quot;||        );&lt;br/&gt;422         if ($post_auto_draft){&lt;br/&gt;423             $post = $post_auto_draft;&lt;br/&gt;424         } else {&lt;br/&gt;425             $post_id = wp_insert_post( array( &amp;#39;post_title&amp;#39; =&amp;gt; __( &amp;#39;Auto Draft&amp;#39; ), &amp;#39;post_type&amp;#39; =&amp;gt; $post_type, &amp;#39;post_status&amp;#39; =&amp;gt; &amp;#39;auto-draft&amp;#39; ) );&lt;br/&gt;426             $post = get_post( $post_id );&lt;br/&gt;427         }&lt;br/&gt;428         // modify by akii end&lt;br/&gt;429         if ( current_theme_supports( &amp;#39;post-formats&amp;#39; ) &amp;amp;&amp;amp; post_type_supports( $post-&amp;gt;post_type, &amp;#39;post-formats&amp;#39; ) &amp;amp;&amp;amp; get_option( &amp;#39;default_post_format&amp;#39; ) )&lt;br/&gt;430             set_post_format( $post, get_option( &amp;#39;default_post_format&amp;#39; ) );&lt;br/&gt;431     } else {&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考自 &lt;a class=&quot;reference external&quot; href=&quot;http://www.akii.org/wordpress-3-0-prohibit-to-historical-versions-and-automatically-save-the-draft.html&quot;&gt;Akii Snow 的博客&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;禁用版本记录&lt;/h2&gt;
&lt;p&gt;修改wp-config.php,增加一行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;define(&amp;#39;WP_POST_REVISIONS&amp;#39;, false );&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;清理数据库中版本历史&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;手工清理&lt;/li&gt;
&lt;li&gt;安装wp插件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;自动保存的记录是如下记录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;select&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_posts&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_status&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;auto-draft&amp;#39;&lt;/span&gt; ;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;而版本记录是：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;select&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_posts&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_status&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;inherit&amp;#39;&lt;/span&gt;;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;手工保存的是：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;select&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;*&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_posts&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_status&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;draft&amp;#39;&lt;/span&gt; ;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;删除历史冗余记录&lt;/h2&gt;
&lt;p&gt;删除草稿记录，自动保存记录，版本变迁记录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;delete&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_posts&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_status&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;inherit&amp;#39;&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;or&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_status&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;auto-draft&amp;#39;&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;or&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_status&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;draft&amp;#39;&lt;/span&gt;;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h2&gt;禁用自动保存的插件&lt;/h2&gt;
&lt;p&gt;有老外写了这个禁用自动保存的插件， &lt;a class=&quot;reference external&quot; href=&quot;http://www.untwistedvortex.com/2008/06/27/adjust-wordpress-autosave-or-disable-it-completely/&quot;&gt;文章在此&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;&amp;lt;http://samm.dreamhosters.com/wordpress/plugins/disable-autosave.php&amp;gt;&quot;&gt;插件下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h2&gt;删除版本历史，禁用版本保存的插件&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://wordpress.org/extend/plugins/disable-revisions/&quot;&gt;disable revisions&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id&quot;&gt;
&lt;h2&gt;将id顺序排列&lt;/h2&gt;
&lt;p&gt;涉及到4张表，都要更新。尝试使用循环解决，未遂。只得手工改。&lt;/p&gt;
&lt;p&gt;下面的例子将id为108的记录修改id为7。&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;update&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_posts&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;set&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;id&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;7&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;id&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;108&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;update&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_term_relationships&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;set&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;object_id&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;7&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;object_id&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;108&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;update&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_postmeta&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;set&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_id&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;7&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;post_id&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;108&lt;/span&gt;;&lt;br/&gt;&lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;update&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;wp_comments&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;set&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;comment_post_ID&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;7&lt;/span&gt; &lt;span style=&quot;color: #008000; font-weight: bold&quot;&gt;where&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt;comment_post_ID&lt;span style=&quot;color: #666666&quot;&gt;`&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #666666&quot;&gt;108&lt;/span&gt;;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;新建博客仍有问题。新博客的id并不小！&lt;/p&gt;
&lt;p&gt;保持id连续的原则：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;不要删博客&lt;/li&gt;
&lt;li&gt;新建的博客一定要保存&lt;/li&gt;
&lt;li&gt;禁用自动保存和版本记录。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考自: &lt;a class=&quot;reference external&quot; href=&quot;http://www.williamlong.info/archives/1416.html&quot;&gt;月光博客&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>rst 简明教程</title>
   <link href="/2011/11/25/reStructuredTEXT.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/reStructuredTEXT</id>
   <content type="html">&lt;!-- id: 8 --&gt;
&lt;p&gt;120316  17:58&lt;/p&gt;
&lt;table class=&quot;docutils field-list&quot; frame=&quot;void&quot; rules=&quot;none&quot;&gt;
&lt;col class=&quot;field-name&quot; /&gt;
&lt;col class=&quot;field-body&quot; /&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;作者:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;Laurence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;邮箱:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;&lt;a class=&quot;reference external&quot; href=&quot;mailto:2999am&amp;#64;gmail.com&quot;&gt;2999am&amp;#64;gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;ID:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;Kardinal &amp;#64; Ubuntu.org.cn论坛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;版权:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;This document has been placed in the public domain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;参考:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;《结构化文本入门(Karron Qiu)》 《Quick &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt;》 《Vim &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt;》 《&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; Interpreted Text Roles》&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;contents topic&quot; id=&quot;id1&quot;&gt;
&lt;p class=&quot;topic-title first&quot;&gt;索引&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#wytiwyg-wysiwyg&quot; id=&quot;id52&quot;&gt;WYTIWYG &amp;amp; WYSIWYG&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id2&quot; id=&quot;id53&quot;&gt;所见即所得&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id3&quot; id=&quot;id54&quot;&gt;所想即所得&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id4&quot; id=&quot;id55&quot;&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id5&quot; id=&quot;id56&quot;&gt;基本元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id6&quot; id=&quot;id57&quot;&gt;&lt;strong&gt;字串元素&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id7&quot; id=&quot;id58&quot;&gt;&lt;strong&gt;行元素&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id8&quot; id=&quot;id59&quot;&gt;&lt;strong&gt;块元素&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id9&quot; id=&quot;id60&quot;&gt;特殊元素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id10&quot; id=&quot;id61&quot;&gt;页面元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id11&quot; id=&quot;id62&quot;&gt;行块元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id12&quot; id=&quot;id63&quot;&gt;超级块元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id13&quot; id=&quot;id64&quot;&gt;物件元素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id14&quot; id=&quot;id65&quot;&gt;自定义元素&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id15&quot; id=&quot;id66&quot;&gt;对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id16&quot; id=&quot;id67&quot;&gt;标题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id17&quot; id=&quot;id68&quot;&gt;行内&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id26&quot; id=&quot;id69&quot;&gt;脱字符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id27&quot; id=&quot;id70&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id29&quot; id=&quot;id71&quot;&gt;物件别名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id30&quot; id=&quot;id72&quot;&gt;列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id31&quot; id=&quot;id73&quot;&gt;表格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id32&quot; id=&quot;id74&quot;&gt;脚注&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id33&quot; id=&quot;id75&quot;&gt;提示符引用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id34&quot; id=&quot;id76&quot;&gt;预定义&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id35&quot; id=&quot;id77&quot;&gt;项目管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#restructuredtext&quot; id=&quot;id78&quot;&gt;搭建reStructuredText环境&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#linux&quot; id=&quot;id79&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#windows&quot; id=&quot;id80&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id36&quot; id=&quot;id81&quot;&gt;reStructuredText命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id37&quot; id=&quot;id82&quot;&gt;定制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id38&quot; id=&quot;id83&quot;&gt;代码风格&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id39&quot; id=&quot;id84&quot;&gt;缩进&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id40&quot; id=&quot;id85&quot;&gt;空行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id41&quot; id=&quot;id86&quot;&gt;下划线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id42&quot; id=&quot;id87&quot;&gt;标题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id43&quot; id=&quot;id88&quot;&gt;标题链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id44&quot; id=&quot;id89&quot;&gt;表格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id45&quot; id=&quot;id90&quot;&gt;别名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id46&quot; id=&quot;id91&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id47&quot; id=&quot;id92&quot;&gt;列表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id48&quot; id=&quot;id93&quot;&gt;编辑器设定&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#vim&quot; id=&quot;id94&quot;&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#emacs&quot; id=&quot;id95&quot;&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#faq&quot; id=&quot;id96&quot;&gt;FAQ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id49&quot; id=&quot;id97&quot;&gt;空行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id50&quot; id=&quot;id98&quot;&gt;消除空格&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id51&quot; id=&quot;id99&quot;&gt;缩进和空格&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;wytiwyg-wysiwyg&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id52&quot;&gt;WYTIWYG &amp;amp; WYSIWYG&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id53&quot;&gt;所见即所得&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WYSIWYG ( What You See Is What You Get )&lt;/p&gt;
&lt;blockquote&gt;
这个概念非常流行。就是说制作过程中所见到的，和最终所得到的结果一致。&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;比如我用DW编辑一个网页文件，在编辑的过程中，我可以设定内容的格式、排版、色彩等属性，
而最终得到的网页，完全符合了我的愿望。&lt;/p&gt;
&lt;p&gt;我们都知道，网页文件使用的是 &lt;strong&gt;Html&lt;/strong&gt; 标记语言。
比如加粗某处文字，我们要使用标签 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;b&amp;gt;&lt;/tt&gt; ，然后是我们要加粗的文字，比如 &lt;strong&gt;粗体&lt;/strong&gt;
最后再使用标签 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;/b&amp;gt;&lt;/tt&gt; 来结束它，不然的话， &lt;strong&gt;粗体&lt;/strong&gt; 后面的文字也要被加粗了……
因为 Html 解析器 （一般来说，就是浏览器）没法子判断到底在哪儿结束“加粗”这一行为。
源文件大致是这样的：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
&amp;lt;b&amp;gt;粗体&amp;lt;/b&amp;gt;
&lt;/pre&gt;
&lt;p&gt;一个完整的Html文件就是由许许多多这样的标签构成的。标签和标签之间可以嵌套。比如：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;头部&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;    正文                                               &amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;    这里是段落2                                          &amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;    这里是&amp;lt;b&amp;gt;粗体&amp;lt;/b&amp;gt;，这里是&amp;lt;font color=red&amp;gt;红色字体&amp;lt;/font&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;p&gt;当然了，大多数时候，Html的源文件比较复杂，远远没有这么简单。
可不要被它可怕的外表吓坏了，一个Html文件，无论多么复杂，它总是具有这种结构，
只要您熟悉了足够多的标签，Html对于您来说，完全是纸老虎：）&lt;/p&gt;
&lt;p&gt;必须承认的是，如果没有所见即所得的工具，比如 DW ，直接使用Html语言编写网页文件，
那应该不会是一种享受-_-#&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;可能有许多高手会讲： &lt;em&gt;我就是喜欢直接编辑Html代码，那绝对是一种享受！&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;是啊，可能那是一种享受，但是你享受的是编写代码，而不是设计页面。
Html并不是编程，代码不是决定因素，而外观设计才是重要的。所见即所得把开发者从代码中解救出来，
使它们把心思都用在设计上，这才是它的伟大之处！&lt;/p&gt;
&lt;p&gt;同样的，Word之类的工具，也是一种所见即所得的工具。
不同的是，doc 文件的复杂程度要远远高于 Html，您不太可能直接编辑它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id54&quot;&gt;所想即所得&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WYTIWYG ( What You Think Is What You Get )&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们已经知道了，所见即所得偏重的是外观设计，而不是代码。看起来不错，不过这种模式也有一些缺点。&lt;/p&gt;
&lt;p&gt;比如我想强调某事，我可能就会有点犹豫……我是应该用粗体呢？还是应该用红色的字体？
还有什么其它更好的方法么？&lt;/p&gt;
&lt;p&gt;假如现在我使用的是白色的背景，我使用红色的字体来表示强调。
由于各种可能的原因，我需要把这些内容转移到另外一个地方，不巧的是，
那个页面的背景使用的颜色和红色比较接近，比如说粉红色吧，
如此一来，我的红色的文字反而没有正文的黑色文字醒目，本来是表示强调的，
反而成了忽视……&lt;/p&gt;
&lt;p&gt;如果手动修改这些地方，可能会非常的麻烦，因为我可能用红色表示强调，用粗体表示感叹……
而这些内容可能会出现在许多不同的场合，这可怎么办啊？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;这个问题很容易解决，答案就是 &lt;strong&gt;所想即所得&lt;/strong&gt; ！例如：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
这里是&amp;lt;强调&amp;gt;强调&amp;lt;/强调&amp;gt;，这里是&amp;lt;感叹&amp;gt;感叹&amp;lt;/感叹&amp;gt;
……
&lt;/pre&gt;
&lt;p&gt;再使用一个样式定义，例如：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
强调 = 红色字体
感叹 = 粗体
……
&lt;/pre&gt;
&lt;p&gt;然后使用转换程序，根据预先定义的样式，自动将 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;强调&amp;gt;&lt;/tt&gt; 转换为 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;b&amp;gt;&lt;/tt&gt; ，
将 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;感叹&amp;gt;&lt;/tt&gt; 转换为 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;font color=red&amp;gt;&lt;/tt&gt; 就可以了。&lt;/p&gt;
&lt;p&gt;如果我们想将强调改用绿色，只要将样式定义改一下：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
强调 = 绿色字体
&lt;/pre&gt;
&lt;p&gt;也可以方便的转换为其它文件，比如 &lt;strong&gt;pdf&lt;/strong&gt; 或者其它格式──只要有相应的转换程序就可以了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;所见即所得工具不需要编写代码，将开发者从代码只解救出来，使其专注于设计；
而所想即所得工具不需要设计外观，把设计者从外观中解救出来，使其专注行思考！&lt;/p&gt;
&lt;p&gt;事实上，这种使用标签的模式比较接近 &lt;strong&gt;DocBook&lt;/strong&gt; ，当然了，标签不会是中文的。
从国际主义精神的角度，我们要照顾到外国友人──据说外国友人的中文普遍不太好：）&lt;/p&gt;
&lt;p&gt;从通用性的角度来考虑，标签基本上使用英文；从减少输入的角度考虑，标签应该尽量简短
──很多标签使用缩写。&lt;/p&gt;
&lt;p&gt;不过标签这种方式本身就很麻烦，特别是使用尖括号的标签。能不能再简单一些呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id4&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id55&quot;&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; ，重构建文本，是一种优秀的写作工具，对于元素的定义已经不只是简化，而是进行了充分的优化。&lt;/p&gt;
&lt;p&gt;上面我们提到了元素，我们把它理解为一个对象的基本组成部分。例如 &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;&amp;lt;b&amp;gt;粗体&amp;lt;/b&amp;gt;&lt;/span&gt;&lt;/tt&gt; 、
&lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;&amp;lt;强调&amp;gt;强调&amp;lt;/强调&amp;gt;&lt;/span&gt;&lt;/tt&gt; 都是元素，只是组成的方式不同而已，一种是所见即所得，
另一种是所想即所得。&lt;/p&gt;
&lt;p&gt;&lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;bold&amp;gt;&lt;/tt&gt; 到 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;b&amp;gt;&lt;/tt&gt; 是一种简化，不过还是很麻烦。使用一些不常用而且又容易输入的符号，例如
&lt;tt class=&quot;docutils literal&quot;&gt;**&lt;/tt&gt; 就是优化了&lt;/p&gt;
&lt;p&gt;在 &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 中，正是使用 &lt;tt class=&quot;docutils literal&quot;&gt;**&lt;/tt&gt; 来表示强调！&lt;/p&gt;
&lt;blockquote&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;42%&quot; /&gt;
&lt;col width=&quot;58%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td&gt;原始内容&lt;/td&gt;
&lt;td&gt;显示结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;*强调*&lt;/td&gt;
&lt;td&gt;&lt;em&gt;强调&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;**特别强调**&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;特别强调&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;``*原文引用*``&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;docutils literal&quot;&gt;*原文引用*&lt;/tt&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;\*原文*&lt;/td&gt;
&lt;td&gt;*原文*&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id56&quot;&gt;基本元素&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;这一部分内容十分重要，理解透彻后便能够无往而不利。&lt;/dt&gt;
&lt;dd&gt;不然的话，在实际使用的过程中，
您可能会觉得 &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 比较莫名其妙，有点怪怪的……&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;section&quot; id=&quot;id6&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id57&quot;&gt;&lt;strong&gt;字串元素&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;连续的字符串构成的元素，为字串元素。 看下面的例子&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
**强调** 就是一个字串元素。普通文本也是一个字串元素。

    第三个字串元素
&lt;/pre&gt;
&lt;p&gt;&lt;tt class=&quot;docutils literal&quot;&gt;**强调**&lt;/tt&gt; 是第一个字串元素；它后面的文本，是第二个字串元素。&lt;/p&gt;
&lt;p&gt;如果您够细心，您会发现，字串元素之间使用 &lt;strong&gt;空格&lt;/strong&gt; 分隔。
在字串元素的级别， &lt;strong&gt;缩进&lt;/strong&gt; 和 &lt;strong&gt;换行符&lt;/strong&gt; 也能够分隔字串元素。&lt;/p&gt;
&lt;p&gt;严格来说，字串元素 &lt;strong&gt;空格&lt;/strong&gt; 和 &lt;strong&gt;.&lt;/strong&gt; &lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;?&lt;/strong&gt; &lt;strong&gt;!&lt;/strong&gt; 等英文标点结束&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id7&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id58&quot;&gt;&lt;strong&gt;行元素&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;下划线（有时包括上划线）和文本构成的元素，例如标题、表格&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
标题
====
&lt;/pre&gt;
&lt;p&gt;表格：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
=====  =====  ======
   Inputs     Output
------------  ------
  A      B    A or B
=====  =====  ======
False  False  False
True   False  True
False  True   True
True   True   True
=====  =====  ======
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;行元素中，下划线使用符号构成，例如&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
Chapter 1 Title
===============

Section 1.1 Title
-----------------

Subsection 1.1.1 Title
~~~~~~~~~~~~~~~~~~~~~~
&lt;/pre&gt;
&lt;p&gt;构成下划线的符号长度，应不小于文本长度。（一个汉字占两个字符）&lt;/p&gt;
&lt;blockquote&gt;
&lt;!-- 表格使用一条带有分隔符的上划线，多个行元素构成 --&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id8&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id59&quot;&gt;&lt;strong&gt;块元素&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;具有相同缩进的元素为块元素，例如段落、表格&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
┊   第一行
┊   第二行
┊   第三行
┊
┊   第二段
&lt;/pre&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;块元素使用一个 &lt;strong&gt;空行&lt;/strong&gt; 结束，也就是一个 &lt;strong&gt;垂直分隔符&lt;/strong&gt; 。上面的例子中包含了两个块元素。&lt;/dt&gt;
&lt;dd&gt;连续出现多个空行时，作为一个空行处理。&lt;/dd&gt;
&lt;dt&gt;可以使用 &lt;em&gt;Line Blocks&lt;/em&gt; 增加空行，使单独一行中只有一个 &lt;strong&gt;|&lt;/strong&gt; 符号即可&lt;/dt&gt;
&lt;dd&gt;（前后都要有空行，因为它也是一个 块元素）&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;见 &lt;a class=&quot;reference internal&quot; href=&quot;#id11&quot;&gt;行块元素&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;技巧：&lt;/strong&gt; 只要没有空行，不管换多少次行，都会处理为一行。
建议您将每行的内容控制在50个汉字或者100个字母之内，
尽量在标点符号处手动换行，以增加源文件的可读性。&lt;/p&gt;
&lt;!-- 制表符 ─ │ └ ┌ ┘ ┐ ┆ ┊ ┄ ┈ ├ ┼ ┬ --&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;块元素也允许逐行增加缩进，例如&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
┊   第一行
┊   第二行
┊     第三行
┊                        第四行
&lt;/pre&gt;
&lt;p&gt;相同缩进的行处理为一行；不同缩进，无论缩进多少，都处理为一个缩进。上面文本实际显示为&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
┆    第一行第二行
┆        第三行
┆            第四行
&lt;/pre&gt;
&lt;p&gt;段落的缩进由其首行缩进决定&lt;/p&gt;
&lt;p&gt;事实上，这种形式属于 &lt;a class=&quot;reference internal&quot; href=&quot;#dylb&quot;&gt;&lt;strong&gt;定义列表&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;!-- 左上角 --&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; &lt;tt class=&quot;docutils literal&quot;&gt;字串元素&lt;/tt&gt; 可以作为 &lt;tt class=&quot;docutils literal&quot;&gt;行元素&lt;/tt&gt; 的子集，它们都可以作为 &lt;tt class=&quot;docutils literal&quot;&gt;块元素&lt;/tt&gt; 的子集。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id60&quot;&gt;特殊元素&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这部分内容稍微复杂，建议您动起手来，摸着石头过河。&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#restructuredtext&quot;&gt;搭建reStructuredText环境&lt;/a&gt; 和 &lt;a class=&quot;reference internal&quot; href=&quot;#id36&quot;&gt;reStructuredText命令&lt;/a&gt; 部分内容，
您可以先参考一下：）&lt;/p&gt;
&lt;p&gt;当然了，前面部分的内容，尽管看起来比较简单，
不过您还是可以实验一下，多少会有一些帮助的……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;section&quot; id=&quot;id10&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id61&quot;&gt;页面元素&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;类似行元素，但是不包含缩进，例如标题、分隔线&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
==============
文档标题
==============

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  (分隔线)

章节标题
===========

二级章节标题
-----------

二级章节标题
-----------

章节标题
===========
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id11&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id62&quot;&gt;行块元素&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在某些情况下，一个段落中需要用逐行向外缩进，比如中文排版；&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;段落首行&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;第二行向外缩进&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;其它行和第二行相同&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;或者手动换行而不分段，甚至是更加复杂的装饰性文字……&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&amp;lt;&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&amp;lt;    &amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&amp;lt;   &amp;lt;&amp;gt;   &amp;gt;&lt;/div&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&amp;lt;    &amp;gt;&lt;/div&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&amp;lt;&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;而段落中只能逐行向内缩进；相同的缩进会自动合并为一行，不能手动换行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;这些问题可以使用 &lt;em&gt;行块元素&lt;/em&gt; 来解决。&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;在每一行起始处添加引导符 &lt;strong&gt;|&lt;/strong&gt; 和 &lt;em&gt;缩进&lt;/em&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
|          段落首行
|       第二行向外缩进
|       其它行和第二行相同
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;相邻的行块元素，它们的引导符缩进应相同。&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;行块引导符后的一个空格为分隔符，是必须的！处理时忽略&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id12&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id63&quot;&gt;超级块元素&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;类似块元素，但是可以包含空行，并且内部可以随意缩进。例如注释、块引用&lt;/p&gt;
&lt;p&gt;包含有超级块引导符的行为引导行。
超级块起始时相对引导行向内缩进；
结束时使用一个空行，并且向外缩进等于或者超过引导行&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
外部块
  引导行 &amp;lt;引导符&amp;gt;

      向内缩进
    超级块内部可以自由缩进

    可以使用空行

  新的开始.这一行前需要空行，起码与引导行缩进相同，或者更外
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注释是以 &lt;strong&gt;..&lt;/strong&gt; 起始的超级块元素，注释中的内容只在源文件中显示，
并不在结果中显示&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. 注释
 第二行
 第三行

  第二段
 第六行

新的开始
&lt;/pre&gt;
&lt;p&gt;引导符 &lt;tt class=&quot;docutils literal&quot;&gt;..&lt;/tt&gt; 前不能有其它字符，之后要有一个空格与注释内容分隔开
（ &lt;tt class=&quot;docutils literal&quot;&gt;..&lt;/tt&gt; 同时是一个字串元素，前后都要有分隔符）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;块引用&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;块引用是以 &lt;strong&gt;::&lt;/strong&gt; 起始的超级块元素，块引用的内容不作任何处理，
以原文显示&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
块引用 ::

 第一行
  第二行

 第四行

新的开始
&lt;/pre&gt;
&lt;p&gt;引导符 &lt;tt class=&quot;docutils literal&quot;&gt;::&lt;/tt&gt; 后必须有一个空行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id13&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id64&quot;&gt;物件元素&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;用来定义一个物件，物件元素由行内&lt;tt class=&quot;docutils literal&quot;&gt;字串元素&lt;/tt&gt;或注释中的&lt;tt class=&quot;docutils literal&quot;&gt;块元素&lt;/tt&gt;构成&lt;/p&gt;
&lt;p&gt;以 &lt;strong&gt;_&lt;/strong&gt; 结尾的字串元素，例如 &lt;tt class=&quot;docutils literal&quot;&gt;链接_&lt;/tt&gt; &lt;tt class=&quot;docutils literal&quot;&gt;[脚注]&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;以 &lt;strong&gt;|&lt;/strong&gt; 包裹的字串元素，例如 &lt;tt class=&quot;docutils literal&quot;&gt;|别名|&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;它们都需要在注释中进行解释：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
这里是一个 链接_ 。 [脚注]_

.. _链接: http://xxx

.. [脚注] xxxxxx


.. note:: 注意
&lt;/pre&gt;
&lt;p&gt;一些具有特殊功能的物件，比如索引 &lt;tt class=&quot;docutils literal&quot;&gt;contents::&lt;/tt&gt; ，被直接写到注释中去&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. image:: 图片
.. contents:: 索引
&lt;/pre&gt;
&lt;p&gt;参见 &lt;a class=&quot;reference internal&quot; href=&quot;#id34&quot;&gt;预定义&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id14&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id65&quot;&gt;自定义元素&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;例如文档信息，实际效果见页面顶部&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
:作者: Laurence
:邮箱: 2999am&amp;#64;gmail.com
:ID:  Kardinal
:版权: This document has been placed in the public domain
:参考: 《Quick |rst| 》 《结构化文本入门(Karron Qiu)》

.. 技巧:: 自定义
&lt;/pre&gt;
&lt;p&gt;使用以下格式&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
:&amp;lt;名称&amp;gt;:`字符串`

.. &amp;lt;名称&amp;gt;:: 字符串
&lt;/pre&gt;
&lt;p&gt;在Html输出中添加&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
&amp;lt;span class=&amp;quot;&amp;lt;名称&amp;gt;&amp;quot;&amp;gt;字符串&amp;lt;/span&amp;gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 系统内建了许多预定义对象，来完成特定功能。见 &lt;a class=&quot;reference internal&quot; href=&quot;#id34&quot;&gt;预定义&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id15&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id66&quot;&gt;对象&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id16&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id67&quot;&gt;标题&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 会根据下划线读取文档的标题，并且可以自动组织索引&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
=====================
文档标题
=====================

--------
子标题
--------

章节标题
========

...
&lt;/pre&gt;
&lt;p&gt;具有同样带修饰线类型的标题，属于树状索引的同一层级&lt;/p&gt;
&lt;p&gt;带有上划线的标题，和不带上划线的标题是不同类型。上面例子中，文档标题和章节标题就不属于同一层级&lt;/p&gt;
&lt;p&gt;自上而下，越先出现的标题类型，层级越高&lt;/p&gt;
&lt;p&gt;为了简单起见，我们只写标题的修饰线&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
===
---
---
^^^
^^^
^^^
---
---
^^^
&lt;/pre&gt;
&lt;p&gt;我们可以看到，自上而下，最先出现的标题是 === ，所以它处于最高层级；然后是 --- ，所以它处于第二层；最后是 ^^^&lt;/p&gt;
&lt;p&gt;如果画成树形图，就是这样的&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
===
│
├ ---
├ ---
│   ├ ^^^
│   ├ ^^^
│   └ ^^^
├ ---
├ ---
│   └ ^^^
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id17&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id68&quot;&gt;行内&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多表示语气，如 &lt;tt class=&quot;docutils literal&quot;&gt;**强调**&lt;/tt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;17%&quot; /&gt;
&lt;col width=&quot;16%&quot; /&gt;
&lt;col width=&quot;67%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td&gt;源文本&lt;/td&gt;
&lt;td&gt;显示结果&lt;/td&gt;
&lt;td&gt;说明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;*强调*&lt;/td&gt;
&lt;td&gt;&lt;em&gt;强调&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;通常显示为斜体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;**特别强调**&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;特别强调&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;通常显示为粗体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;`字符串`&lt;/td&gt;
&lt;td&gt;&lt;cite&gt;字符串&lt;/cite&gt;&lt;/td&gt;
&lt;td&gt;字符串内包含空格和标点符号时，处理为单个字串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;``行内引用``&lt;/td&gt;
&lt;td&gt;&lt;tt class=&quot;docutils literal&quot;&gt;行内引用&lt;/tt&gt;&lt;/td&gt;
&lt;td&gt;显示为等宽字体，保留空格，不断行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;简单链接_&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id21&quot;&gt;简单链接&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;简单的链接名称 &amp;lt;链接名称&amp;gt;_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;`词组 链接`_&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#id22&quot;&gt;词组 链接&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;带空格、标点的链接名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;无名链接__&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://forum.ubuntu.org.cn/&quot;&gt;....Ubuntu.......&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;链接目标中不使用名称。适合大段文字的链接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;_`链接目标`&lt;/td&gt;
&lt;td&gt;&lt;span class=&quot;target&quot; id=&quot;id18&quot;&gt;链接目标&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;链接的实际指向 _&amp;lt;链接名称&amp;gt;:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;|物件别名|&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;物件别名&quot; src=&quot;http://forum.ubuntu.org.cn/templates/subSilver/images/folder_big.gif&quot; /&gt;&lt;/td&gt;
&lt;td&gt;用来给物件指定一个别名。文本、图片、链接及其它&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;脚注名称 [1]_&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;footnote-reference&quot; href=&quot;#id24&quot; id=&quot;id19&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;见脚注&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;引文名称 [引文]_&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;citation-reference&quot; href=&quot;#id25&quot; id=&quot;id20&quot;&gt;[引文]&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;见引文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;http://...&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://&quot;&gt;http://&lt;/a&gt;...&lt;/td&gt;
&lt;td&gt;独立链接&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;literal-block&quot; id=&quot;id21&quot;&gt;
.. _简单链接:
&lt;/pre&gt;
&lt;pre class=&quot;literal-block&quot; id=&quot;id22&quot;&gt;
.. _`词组 链接`:
&lt;/pre&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
__ http://forum.ubuntu.org.cn/    无名链接
&lt;/pre&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
..  |物件别名| image:: http://forum.ubuntu.org.cn
   /templates/subSilver/images
   /folder_big.gif
&lt;/pre&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id24&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id19&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;脚注1&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. [1] 脚注1
&lt;/pre&gt;
&lt;table class=&quot;docutils citation&quot; frame=&quot;void&quot; id=&quot;id25&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id20&quot;&gt;[引文]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;内容&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. [引文] 内容
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id26&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id69&quot;&gt;脱字符&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 使用 &lt;strong&gt;\&lt;/strong&gt; 作为脱字符，脱字符引导的字串元素不具有特殊涵义，以本来面目显示&lt;/p&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;43%&quot; /&gt;
&lt;col width=&quot;57%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td&gt;**强调**&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;强调&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;\**强调**&lt;/td&gt;
&lt;td&gt;**强调**&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;输入 &lt;strong&gt;\&lt;/strong&gt; 字符，可以使用 &lt;strong&gt;\\&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tip&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Tip&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;使用 脱字符+空格 (&lt;tt class=&quot;docutils literal&quot;&gt;\_&lt;/tt&gt;)作为分隔符，可以消除字串元素之间的空格&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id27&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id70&quot;&gt;链接&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;链接主要包括以下几种&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;独立链接&lt;/strong&gt; ， &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 会自动将网址转换为链接。&lt;/p&gt;
&lt;p&gt;例如 &lt;a class=&quot;reference external&quot; href=&quot;http://www.ubuntu.org.cn/&quot;&gt;http://www.ubuntu.org.cn/&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
http://www.ubuntu.org.cn/
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;命名链接&lt;/strong&gt; ，为链接命名，有助记忆和减少空间占用。&lt;/p&gt;
&lt;p&gt;在正文中使用 &lt;tt class=&quot;docutils literal&quot;&gt;&amp;lt;链接名&amp;gt;_&lt;/tt&gt; ，注释中使用 &lt;tt class=&quot;docutils literal&quot;&gt;_&amp;lt;链接名&amp;gt;: [链接目标]&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;例如 &lt;a class=&quot;reference external&quot; href=&quot;http://www.ubuntu.org.cn/&quot;&gt;Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
Ubuntu_

.. _Ubuntu:  http://www.ubuntu.org.cn/
&lt;/pre&gt;
&lt;p&gt;如果链接名中出现空格和标点符号，可以使用 &lt;strong&gt;`&lt;/strong&gt; 将链接名包裹起来&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
`Ubuntu cn`_

.. _`Ubuntu cn`:  http://www.ubuntu.org.cn/
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;无名链接&lt;/strong&gt; ，不使用链接名的链接&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.ubuntu.org.cn/&quot;&gt;主要用于将大段文字转换为链接。如果将这部分文字作为链接名，
链接名也将被写进注释中……&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
`主要用于将大段文字转换为链接。如果将这部分文字作为链接名，
链接名也将被写进注释中……`__

__ http://www.ubuntu.org.cn/
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;无名链接经常与命名链接一起使用&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
`这里是一大段文字………………`__

__ 一个命名链接_
&lt;/pre&gt;
&lt;p&gt;可以在任意位置定义这个命名链接&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. _一个命名链接:
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;锚点&lt;/strong&gt; ，链接的目标地址留空，可以在当前位置标记锚点。&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
跳转到 锚点_

.. _锚点:

&amp;lt;页面位置&amp;gt;
&lt;/pre&gt;
&lt;p&gt;点击锚点名称跳转到锚点标记处。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;标题链接&lt;/strong&gt; ，跳转到文章内部的标题&lt;/p&gt;
&lt;p&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 定义标题的同时，还定义了一个标题链接，在正文中使用 &lt;tt class=&quot;docutils literal&quot;&gt;标题名称_&lt;/tt&gt; 可以跳转相应标题&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
标题名称
========

跳转到 标题名称_
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;嵌入式链接&lt;/strong&gt; ，链接目标嵌入到链接中。(&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 中没有通过，不建议使用)&lt;/p&gt;
&lt;p&gt;&lt;tt class=&quot;docutils literal&quot;&gt;`Ubuntu &lt;span class=&quot;pre&quot;&gt;&amp;lt;http://www.ubuntu.org.cn&amp;gt;`_&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id29&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id71&quot;&gt;物件别名&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;为一个物件元素定义一个别名&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
|H2O|

.. |H2O| replace:: H\ :sub:`2`\ O
&lt;/pre&gt;
&lt;p&gt;输入 &lt;tt class=&quot;docutils literal&quot;&gt;|别名|&lt;/tt&gt; 便可以得到所定义的内容&lt;/p&gt;
&lt;p&gt;上面例子中，输入 &lt;tt class=&quot;docutils literal&quot;&gt;|H2O|&lt;/tt&gt; ，得到 &lt;tt class=&quot;docutils literal&quot;&gt;H\ &lt;span class=&quot;pre&quot;&gt;:sub:`2`\&lt;/span&gt; O&lt;/tt&gt; ，也就是 H&lt;sub&gt;2&lt;/sub&gt;O&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;可以定义别名的元素有 文本 链接 图像 Unicode字符 日期时间等&lt;/p&gt;
&lt;p&gt;链接：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. |别名| replace:: 字符串 （可以是独立链接）

.. _链接: 目标地址
.. |别名| replace:: 链接_
&lt;/pre&gt;
&lt;p&gt;为链接创建别名时，使用命名链接，则别名替换为链接名称；
使用独立链接，则别名替换为目标地址。&lt;/p&gt;
&lt;p&gt;为链接创建别名的时候，可以随意修改目标地址，但是链接名称要
使两处保持一致，不够方便；并且使用别名时一定要带链接，不够灵活&lt;/p&gt;
&lt;p&gt;我们建议您使用 &lt;em&gt;别名链接&lt;/em&gt; ，它能够方便的修改链接名称和目标地址，
并且可以灵活的输出各种格式&lt;/p&gt;
&lt;p id=&quot;bmlj&quot;&gt;&lt;strong&gt;别名链接&lt;/strong&gt; ，使用一个别名，定义链接名称和目标地址。&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
这是一个 |别名链接|_

.. |别名链接| replace:: 实际显示的链接名称

.. _别名链接: http://目标地址
&lt;/pre&gt;
&lt;p&gt;实际相当于先定义一个别名，然后定义别名的链接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;ul class=&quot;last simple&quot;&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;|别名链接|&lt;/tt&gt;      输出&lt;em&gt;replace&lt;/em&gt;定义的字符串&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;别名链接_&lt;/tt&gt;       输出使用别名作为链接名称的链接&lt;/li&gt;
&lt;li&gt;&lt;tt class=&quot;docutils literal&quot;&gt;|别名链接|_&lt;/tt&gt;     输出链接名称定义的链接&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;图片：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. |图片名称| image:: 图片路径
   :width: 宽度
   :height: 高度
   :target: 目标链接
&lt;/pre&gt;
&lt;p&gt;Unicode字符：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. |别名| unicode:: U+211
.. |200E| unicode:: 200 U+20AC
&lt;/pre&gt;
&lt;p&gt;时间日期：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. |当前时间| date:: %H:%M
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id30&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id72&quot;&gt;列表&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;列表中，相同的层级使用相同的缩进。
列表中的所有条目都是块元素，要使用空行分隔&lt;/p&gt;
&lt;p&gt;列表中同一层级不需要空行分隔。不同层级起始处必须有空行&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
列表：
  - 条目
  - 条目

      - 条目
      - 条目
  - 条目
&lt;/pre&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;如果不包含复杂的层级，只要使用缩进开始列表，并且不需要空行&lt;/li&gt;
&lt;li&gt;如果层级复杂，那么最好所有条目都以空行分隔，避免发生混乱&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;要点列表&lt;/strong&gt; 以 &lt;strong&gt;-&lt;/strong&gt; &lt;strong&gt;+&lt;/strong&gt; &lt;strong&gt;**&lt;/strong&gt; 和一个空格作引导符，条目不计数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;第一条&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;子条目一&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;第三级&lt;/li&gt;
&lt;li&gt;第三级&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;子条目二&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;第二条
还是第一行&lt;/p&gt;
&lt;p&gt;第二条第二行&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;子条目&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;第三条&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码如下 ：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
- 第一条

  - 子条目一

     - 第三级

     - 第三级

  - 子条目二

- 第二条
  还是第一行

  第二条第二行

  - 子条目

- 第三条
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;枚举列表&lt;/strong&gt; 使用一个数字或者字符，后跟 &lt;strong&gt;.&lt;/strong&gt; &lt;strong&gt;)&lt;/strong&gt; 或者使用 &lt;strong&gt;()&lt;/strong&gt; 括起来，加一个空格&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
1. 数字

A. 大写字符

a. 小写字符

    3. 用不同数字开始的子列表

    4. 确认数字有正确的序号！

I.大写的罗马字符

i.小写的罗马字符

(1) 再来一个数字

1) 再来
&lt;/pre&gt;
&lt;p&gt;可以使用 &lt;strong&gt;#&lt;/strong&gt; 代替数字， &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 会自动排序&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
#) 一

#) 二

#) 三
&lt;/pre&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;一&lt;/li&gt;
&lt;li&gt;二&lt;/li&gt;
&lt;li&gt;三&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote id=&quot;dylb&quot;&gt;
&lt;p&gt;&lt;strong&gt;定义列表&lt;/strong&gt; 为列表中的条目定义一个名称&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
要点列表
  只列出要点，条目不记数

定义列表
  为列表中的条目定义一个名称

枚举列表
  条目进行计数
&lt;/pre&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;要点列表&lt;/dt&gt;
&lt;dd&gt;只列出要点，条目不记数&lt;/dd&gt;
&lt;dt&gt;定义列表&lt;/dt&gt;
&lt;dd&gt;为列表中的条目定义一个名称&lt;/dd&gt;
&lt;dt&gt;枚举列表&lt;/dt&gt;
&lt;dd&gt;条目进行计数&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;区块列表&lt;/strong&gt; ，常用作联系薄&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
:作者: Laurence
:邮箱: 2999am&amp;#64;gmail.com
:ID:  Kardinal &amp;#64; Ubuntu.org.cn论坛
:版权: This document has been placed in the public domain
:参考: 《结构化文本入门(Karron Qiu)》
      《Quick |rst|\ 》
      《Vim |rst|\ 》
      《\ |rst| Interpreted Text Roles》
&lt;/pre&gt;
&lt;table class=&quot;docutils field-list&quot; frame=&quot;void&quot; rules=&quot;none&quot;&gt;
&lt;col class=&quot;field-name&quot; /&gt;
&lt;col class=&quot;field-body&quot; /&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;作者:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;Laurence&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;邮箱:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;&lt;a class=&quot;reference external&quot; href=&quot;mailto:2999am&amp;#64;gmail.com&quot;&gt;2999am&amp;#64;gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;ID:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;Kardinal &amp;#64; Ubuntu.org.cn论坛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;版权:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;This document has been placed in the public domain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;field&quot;&gt;&lt;th class=&quot;field-name&quot;&gt;参考:&lt;/th&gt;&lt;td class=&quot;field-body&quot;&gt;《结构化文本入门(Karron Qiu)》
《Quick &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt;》
《Vim &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt;》
《&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; Interpreted Text Roles》&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id31&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id73&quot;&gt;表格&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;表格使用一条带有分隔符的上划线，和最少一条下划线构成&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
========   ==========
表格        表格
========   ==========
&lt;/pre&gt;
&lt;p&gt;上划线下面为多行缩进相同的 &lt;a class=&quot;reference internal&quot; href=&quot;#id7&quot;&gt;行元素&lt;/a&gt; ，行元素的下划线应不短于行字符。&lt;/p&gt;
&lt;p&gt;表格同一列的下划线，长度应相等。&lt;/p&gt;
&lt;p&gt;上划线（顶部）的分隔符是必须的，它决定了表格可以拥有的列数，但是不影响相邻列的合并。&lt;/p&gt;
&lt;p&gt;合并相邻的列，只要取消下划线的分隔符就可以了。&lt;/p&gt;
&lt;p&gt;底部的下划线，应和上划线使用同样符号&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
===== ===== ===== ===== =====   以空格作分隔符，间距均匀。决定了这个表格最多可以有5列
11    12    13    14    15
----------- -----------------   下划线的长度应不小于字符长度
21    22    23    24    25
----- ----- ----- ----- -----   每一行的下划线，决定了相信列是否合并
31    32    33    34    35
----- ----------- -----------   如果不打算合并列，可以取消表内分隔线
41    42    42    44    45
=============================   底线必须与上划线使用相同符号
&lt;/pre&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;col width=&quot;20%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;2&quot;&gt;11    12&lt;/td&gt;
&lt;td colspan=&quot;3&quot;&gt;13    14    15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;31&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;32    33&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;34    35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;5&quot;&gt;41    42    42    44    45&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;如果想制作更复杂的表格，例如合并相邻行，则需要使用列分隔线&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
+------------+------------+-----------+
| Header 1   | Header 2   | Header 3  |
+============+============+===========+
| body row 1 | column 2   | column 3  |
+------------+------------+-----------+
| body row 2 | Cells may span columns.|
+------------+------------+-----------+
| body row 3 | Cells may  | - Cells   |
+------------+ span rows. | - contain |
| body row 4 |            | - blocks. |
+------------+------------+-----------+
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id32&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id74&quot;&gt;脚注&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;脚注使用方括号包裹起来&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
这里是一个脚注 [1]_

.. [1] 这里是脚注的内容
&lt;/pre&gt;
&lt;p&gt;行内脚注后面也有一个 &lt;strong&gt;_&lt;/strong&gt; 符号，它是当作一个链接处理的。&lt;/p&gt;
&lt;p&gt;脚注的名称可以使用 数字 &lt;strong&gt;#&lt;/strong&gt; 和 &lt;strong&gt;*&lt;/strong&gt; ，使用数字时需要手机排列&lt;/p&gt;
&lt;p&gt;推荐使用 &lt;tt class=&quot;docutils literal&quot;&gt;#&lt;/tt&gt; 作为脚注名称， &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 会自动计数。
使用 &lt;tt class=&quot;docutils literal&quot;&gt;*&lt;/tt&gt; 作为脚注名称， &lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 会把它们替换成一些花哨的符号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id33&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id75&quot;&gt;提示符引用&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 &lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt; 作为引导符，模仿交互式命令提示行&lt;/p&gt;
&lt;pre class=&quot;doctest-block&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; rst2html -r 4 --stylesheet-path=/home/user/html4css1.css rst html
&lt;/pre&gt;
&lt;p&gt;引用块不能空行&lt;/p&gt;
&lt;p&gt;原文本&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; rst2html -r 4 --stylesheet-path=/home/user/html4css1.css rst html&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id34&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id76&quot;&gt;预定义&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 中内建了许多字串元素作为功能对象&lt;/p&gt;
&lt;p&gt;标准。行内使用：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
:emphasis:
*强调*
:emphasis:`强调`

:literal:
``原文``
:literal:`原文`

:strong:
**特别强调**
:strong:`特别强调`

:subscript:`下标`
:sub:`下标`

:superscript:`上标`
:sup:`上标`

:title-reference:`标题`
:title:`标题`
:t:`标题`
&lt;/pre&gt;
&lt;p&gt;特殊。注释中使用：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. contents:: 索引
   :depth: 3  标题搜索深度

.. image :: (路径)/image.png
    :target: http://ubuntu.org.cn

.. figures :: 形状/figures.png


.. sidebar:: 侧边栏标题
   :subtitle: 子标题

     These lines are sidebar content interpreted
     as body elements.

.. rubric:: 醒目提示（内容）

.. topic:: 话题


.. tip:: tip内容

.. note:: note内容

.. warning:: warning内容

.. important::

.. attention::

.. danger::

.. error::

.. caution::
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;字串元素间使用脱字符和空格作为分隔符，可以不显示空格，例如:&lt;/p&gt;
&lt;blockquote&gt;
H&lt;sub&gt;2&lt;/sub&gt;O&lt;/blockquote&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
H\ :sub:`2`\ O
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id35&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id77&quot;&gt;项目管理&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;编写一个较大规模的文档时，使用单一源文件，编辑起来可能十分吃力。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 允许使用一个文件，在转换时将其它文件的内容读取进来，
以便更好的管理文档项目&lt;/p&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;.. header:: 源文件路径，读取到文件头部&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;.. include:: 源文件路径，按顺序读取&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;.. footer:: 源文件路径，读取到文件尾部&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. header:: dir/header.rst
.. include:: dir/1.rst
.. include:: dir/2.rst
.. include:: dir/3.rst
.. footer:: footer.rst
&lt;/pre&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;不能够递归读取&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;restructuredtext&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id78&quot;&gt;搭建reStructuredText环境&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;linux&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id79&quot;&gt;Linux&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt; 或者 &lt;strong&gt;Debian&lt;/strong&gt; 系统中，使用APT安装&lt;/p&gt;
&lt;pre class=&quot;doctest-block&quot;&gt;
&amp;gt;&amp;gt;&amp;gt; sudo apt-get install python-docutils
&lt;/pre&gt;
&lt;p&gt;&lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;/usr/share/python-docutils/&lt;/span&gt;&lt;/tt&gt; 目录中包含了相关的工具，
我们经常要用到的工具是 &lt;tt class=&quot;docutils literal&quot;&gt;rst2html.py&lt;/tt&gt; 。&lt;/p&gt;
&lt;p&gt;在安装好之后，系统通常自动为它建立了链接，直接运行 &lt;strong&gt;rst2html&lt;/strong&gt; 命令即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;windows&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id80&quot;&gt;Windows&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id36&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id81&quot;&gt;reStructuredText命令&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;&lt;strong&gt;rst2html [参数] &amp;lt;源文件.rst&amp;gt; [目标文件.html]&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;div class=&quot;first last line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;如果不指定目标文件，而输出Html代码，并不生成文件&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;-r &amp;lt;levle&amp;gt; 设定报告级别，默认为 &lt;strong&gt;2&lt;/strong&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--tab-width=&amp;lt;width&amp;gt; 设定输出的缩进宽度，默认&lt;strong&gt;8&lt;/strong&gt;个空格&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--stylesheet-path=&amp;lt;file&amp;gt; 指定CSS文件&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--embed-stylesheet 使用嵌入式CSS&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--footnote-references=&amp;lt;format&amp;gt; 脚注格式。 &lt;strong&gt;barckets&lt;/strong&gt;方括号 &lt;strong&gt;superscript&lt;/strong&gt;上标&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--compact-lists 忽略列表中多余的空行，默认 &lt;strong&gt;enabled&lt;/strong&gt;&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--config=&amp;lt;file&amp;gt;  指定配置文件&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--footnote-backlinks 允许从脚注跳回原文，默认选项&lt;/div&gt;
&lt;div class=&quot;line&quot;&gt;--toc-top-backlinks 允许从标题跳回索引，默认选项&lt;/div&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id37&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id82&quot;&gt;定制&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;/usr/share/python-docutils/docutils.conf&lt;/strong&gt; 为配置文件&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
# These entries affect all processing:
[general]
source-link: yes
datestamp: %Y-%m-%d %H:%M UTC
generator: on

# These entries affect HTML output:
[html4css1 writer]
# Required for docutils-update, the website build system:
stylesheet-path: ../docutils/writers/html4css1/html4css1.css
embed-stylesheet: no
field-name-limit: 20
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id38&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id83&quot;&gt;代码风格&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id39&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id84&quot;&gt;缩进&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;尽量使用固定长度的空格作为缩进，推荐您使用 &lt;strong&gt;4&lt;/strong&gt; 个空格作为一个缩进&lt;/p&gt;
&lt;p&gt;虽然在理论上，缩进可以使用任意长度，但是那样容易引起混乱，例如：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id40&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id85&quot;&gt;空行&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;有些情况下，空行并不是必须的，比如标题和之后的内容。&lt;/p&gt;
&lt;p&gt;不过我们建议您还是尽量使用空行，以免不必要的麻烦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id41&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id86&quot;&gt;下划线&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
理论上，下划线只要和文字的长度相同就可以了，
不过我们建议主您使用比较长，且长度固定的下划线 例如 &lt;strong&gt;50&lt;/strong&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id42&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id87&quot;&gt;标题&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;下划线使用的符号比较重要。&lt;/p&gt;
&lt;p&gt;如果能够养成一个固定的习惯，在处理较大规模的文档时，可以避免许多麻烦&lt;/p&gt;
&lt;p&gt;推荐以下几套&lt;/p&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;33%&quot; /&gt;
&lt;col width=&quot;33%&quot; /&gt;
&lt;col width=&quot;33%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td&gt;#####&lt;/td&gt;
&lt;td&gt;=====&lt;/td&gt;
&lt;td&gt;^^^^^&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;+++++&lt;/td&gt;
&lt;td&gt;-----&lt;/td&gt;
&lt;td&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;*****&lt;/td&gt;
&lt;td&gt;~~~~~&lt;/td&gt;
&lt;td&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;建议您使用带上划线的第一级符号作为文章标题&lt;/p&gt;
&lt;p&gt;全部可选符号包括&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
= - ` : ' &amp;quot; ~ ^ _ * + # &amp;lt; &amp;gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id43&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id88&quot;&gt;标题链接&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;请尽量避免重复的标题，特别是存在大量标题链接的情况下。&lt;/p&gt;
&lt;p&gt;如果同时存在多个名称相同的标题，并且有指向该名称的标题链接，
&lt;em&gt;re&lt;/em&gt;&lt;strong&gt;Structured&lt;/strong&gt;&lt;sup&gt;Text&lt;/sup&gt; 无法确定哪一个标题是真正的目标，这时就会发生错误。&lt;/p&gt;
&lt;p&gt;而使用标题链接链接越多，发生这种错误的几率越大~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id44&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id89&quot;&gt;表格&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;表格尽量使用空格作分隔符&lt;/p&gt;
&lt;p&gt;如果没有特殊要求，表格包含上划线和底线就可以了，例如：&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
=======  =======
aaaaaa   111111
bbbbb    2222222
cccc     3
=======  =======
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id45&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id90&quot;&gt;别名&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
建议将别名定义放在页面顶部，便于维护&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id46&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id91&quot;&gt;链接&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;请尽量使用独立链接、无名链接、标题链接和&lt;a class=&quot;reference internal&quot; href=&quot;#bmlj&quot;&gt;&lt;strong&gt;别名链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;定义别名链接的两行注释中间不要空行，便于阅读&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
.. |bmlj| replace:: **别名链接**
.. _bmlj:

**别名链接**
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id47&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id92&quot;&gt;列表&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
如无必要，请尽量使用要点列表和定义列表。枚举列表更适合作为章节&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id48&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id93&quot;&gt;编辑器设定&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;vim&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id94&quot;&gt;Vim&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
下载 &lt;a class=&quot;reference external&quot; href=&quot;http://www.google.com&quot;&gt;vst.vim&lt;/a&gt; 文件，拷贝到Vim的插件目录即可。&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;emacs&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id95&quot;&gt;Emacs&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
安装 &lt;a class=&quot;reference external&quot; href=&quot;http://www.google.com&quot;&gt;rst.el&lt;/a&gt; 插件&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;将如下内容添加到 &lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;~/.emacs&lt;/span&gt;&lt;/tt&gt; 文件中&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
;;RST
(require 'rst)
(add-hook 'text-mode-hook 'rst-text-mode-bindings)

(setq auto-mode-alist
(append '((&amp;quot;\\.rst$&amp;quot; . rst-mode)
(&amp;quot;\\.rest$&amp;quot; . rst-mode)) auto-mode-alist))
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;faq&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id96&quot;&gt;FAQ&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;id49&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id97&quot;&gt;空行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以使用 &lt;em&gt;Line Blocks&lt;/em&gt; 增加空行，使单独一行中只有一个 &lt;strong&gt;|&lt;/strong&gt; 符号即可
（前后都要有空行，因为它也是一个 块元素）&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id50&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id98&quot;&gt;消除空格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用 &lt;tt class=&quot;docutils literal&quot;&gt;\_&lt;/tt&gt; (脱字符和空格)代替空格作为分隔符，可以消除空格。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id51&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id99&quot;&gt;缩进和空格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;它们是等效的，如果不怕麻烦，您大可以完全使用空格，而不使用缩进&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>国内Dropbox安装使用</title>
   <link href="/2011/11/25/dropbox-install.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/dropbox-install</id>
   <content type="html">&lt;!-- id: 10 --&gt;
&lt;p&gt;目前Dropboxd的情况是http不能访问，https可以访问，和google docs,google reader一样。&lt;/p&gt;
&lt;p&gt;所以下面是讲如何在https下完成安装。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;下载在线安装包：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; wget https://www.dropbox.com/downloading?os&lt;span style=&quot;color: #666666&quot;&gt;=&lt;/span&gt;lnx&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;os的值可以是win,lnx,mac。&lt;/p&gt;
&lt;p&gt;下载包很小，安装也很快，但注意，这只是安装了一个空壳，接下来才是真正的安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox start -i&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样会启动安装程序，自动从官网下载数据包进行在线安装。&lt;/p&gt;
&lt;p&gt;但是我们访问不了，所以安装失败。怎么办呢？手工下载吧。&lt;/p&gt;
&lt;p&gt;下载数据包到主目录，目前最新版是1.2.48：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;cd&lt;/span&gt; ~&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; wget https://dl-web.dropbox.com/u/17/dropbox-lnx.x86-1.2.48.tar.gz&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改dropbox脚本，替换网上下载数据包为使用本地数据包：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; sudo sed -i &lt;span style=&quot;color: #BA2121&quot;&gt;&amp;#39;s/urlopen(.*)/urlopen(os.path.join(os.path.expanduser(&amp;quot;~&amp;quot;), &amp;quot;dropbox-%s-%s.tar.gz&amp;quot; % (plat(), &amp;quot;1.2.48&amp;quot;)))/&amp;#39;&lt;/span&gt; &lt;span style=&quot;color: #BA2121&quot;&gt;`&lt;/span&gt;which dropbox&lt;span style=&quot;color: #BA2121&quot;&gt;`&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后就可以安装啦:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox start -i&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看运行状态:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox status&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;Downloading 909 files (5.9 KB/sec, 2 days left)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;获取public url：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; dropbox public filename&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- https://dl.dropbox.com/u/6993309/Dropbox.apk --&gt;
&lt;!-- windows: --&gt;
&lt;!-- http://cdn.dropbox.com/Dropbox%201.1.31.exe --&gt;
&lt;!-- 在线代理:http://www.7daili.com/ --&gt;</content>
 </entry>
 
 <entry>
   <title>C中宏定义研究</title>
   <link href="/2011/11/25/c-define.html"/>
   <updated>2011-11-25T00:00:00+08:00</updated>
   <id>h/2011/11/25/c-define</id>
   <content type="html">&lt;!-- id: 9 --&gt;
&lt;p&gt;简单替换&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define PI 3.14&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;带参数（宏函数）&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define SQUARE(a) ((a)*(a))&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- more --&gt;
&lt;p&gt;注意两点：&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;参数要加括号&lt;/li&gt;
&lt;li&gt;整体要加括号&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;原因很简单，宏只是简单的替换。需要括号来保证替换后不受运算符优先级的干扰。&lt;/p&gt;
&lt;p&gt;带#的宏函数&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define STR(a) #a&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;替换结果为将参数加引号。而下例：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define STR(a) &amp;quot;a&amp;quot;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会替换为字符串&amp;quot;a&amp;quot;，和参数无关。&lt;/p&gt;
&lt;p&gt;这里有一个原则：遇引号不替换&lt;/p&gt;
&lt;p&gt;带##的宏函数&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define PRE(a) L##a&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会把参数a前面加上L。&lt;/p&gt;
&lt;p&gt;看下面一个例子：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #BC7A00&quot;&gt;#define PRE(a,b) vo##a##b()&lt;/span&gt;&lt;br/&gt;PRE(id te,st) {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;展开后为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #B00040&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #0000FF&quot;&gt;test&lt;/span&gt;() {&lt;br/&gt;    printf(&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;Hello, world!&lt;/span&gt;&lt;span style=&quot;color: #BB6622; font-weight: bold&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color: #BA2121&quot;&gt;&amp;quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>列表：最喜欢的软件</title>
   <link href="/2011/11/24/my-favirote-software.html"/>
   <updated>2011-11-24T00:00:00+08:00</updated>
   <id>h/2011/11/24/my-favirote-software</id>
   <content type="html">&lt;!-- id: 6 --&gt;
&lt;div class=&quot;contents topic&quot; id=&quot;id2&quot;&gt;
&lt;p class=&quot;topic-title first&quot;&gt;最喜欢的软件如下：&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#dropbox&quot; id=&quot;id3&quot;&gt;Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#dropbox-index&quot; id=&quot;id4&quot;&gt;Dropbox-index&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#google-chrome&quot; id=&quot;id5&quot;&gt;Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#evernote&quot; id=&quot;id6&quot;&gt;Evernote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#virtualbox&quot; id=&quot;id7&quot;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#reeder&quot; id=&quot;id8&quot;&gt;Reeder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference internal&quot; href=&quot;#sparrow&quot; id=&quot;id9&quot;&gt;Sparrow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;section&quot; id=&quot;dropbox&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id3&quot;&gt;Dropbox&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;同步软件，支持各种平台。真正外链。
建议使用https访问。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;dropbox-index&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id4&quot;&gt;Dropbox-index&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;自动生成Dropbox Public索引。Cool!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;google-chrome&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id5&quot;&gt;Google Chrome&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;无须多言。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;evernote&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id6&quot;&gt;Evernote&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;云笔记软件。支持各种平台。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;virtualbox&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id7&quot;&gt;VirtualBox&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;免费好用的虚拟机软件。我在Mac和Ubuntu下使用它虚拟Windows。&lt;/p&gt;
&lt;p&gt;自动生成Dropbox Public目录的索引。使用Python编写。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;reeder&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id8&quot;&gt;Reeder&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mac OS X下最好用的Google Reader Client。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;sparrow&quot;&gt;
&lt;h2&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;#id9&quot;&gt;Sparrow&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mac OS X下最好用的Mail Client。&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>linux shell 重定向</title>
   <link href="/2011/11/24/linux-shell-pipe.html"/>
   <updated>2011-11-24T00:00:00+08:00</updated>
   <id>h/2011/11/24/linux-shell-pipe</id>
   <content type="html">&lt;!-- id: 5 --&gt;
&lt;p&gt;shell下有标准输入stdin，标准输出stdout，标准错误输出stderr，标示符分别为0，1，2。
默认的标准输入是键盘，标准输出和标准错误输出是显示器。&lt;/p&gt;
&lt;p&gt;利用重定向可以改变默认的标准输入输出，使用&amp;quot;&amp;lt;&amp;quot;来重定向标准输入，利用&amp;quot;&amp;gt;&amp;quot;来进行重定向输出。&lt;/p&gt;
&lt;p&gt;另外，可以使用&amp;quot;&amp;gt;&amp;gt;&amp;quot;在重定向输出时不是覆盖，而是追加。&lt;/p&gt;
&lt;p&gt;重定向标准输入我不太常用，仅对输出重定向举例如下：&lt;/p&gt;
&lt;!-- more --&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;将echo的标准输出重定向到/tmp/a.txt文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo &lt;/span&gt;hello world&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo &lt;/span&gt;hello world &amp;gt; /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;2&quot;&gt;
&lt;li&gt;将echo的标准输出重定向追加到/tmp/a.txt文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; &lt;span style=&quot;color: #008000&quot;&gt;echo &lt;/span&gt;hello world &amp;gt;&amp;gt; /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;3&quot;&gt;
&lt;li&gt;将标准错误输出重定向到/tmp/error.log文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat not-exists.txt&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exists.txt: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat not-exists.txt 2&amp;gt; /tmp/error.log&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/error.log&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exists.txt: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol class=&quot;arabic simple&quot; start=&quot;4&quot;&gt;
&lt;li&gt;将标准输出和标准错误输出都重定向到/tmp/log文件&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #f8f8f8&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt not-exist&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exitst: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/a.txt not-exist &amp;gt; /tmp/log 2&amp;gt;&amp;amp;1&lt;br/&gt;&lt;span style=&quot;color: #000080; font-weight: bold&quot;&gt;$&lt;/span&gt; cat /tmp/log&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;hello world&lt;/span&gt;&lt;br/&gt;&lt;span style=&quot;color: #808080&quot;&gt;cat: not-exitst: 没有那个文件或目录&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 
</feed>